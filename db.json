{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/next/source/baidu_verify_0Jv5zioW8L.html","path":"baidu_verify_0Jv5zioW8L.html","modified":1,"renderable":1},{"_id":"themes/next/source/robots.txt","path":"robots.txt","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/giphy.gif","path":"images/giphy.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/README.md","path":"lib/needsharebutton/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/clipboard-use.js","path":"js/src/clipboard-use.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1595778300700},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1595778300700},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1595778300701},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1595778300704},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1595778300705},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1595778300706},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1595778300704},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1595778300706},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1595778300707},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1595778300706},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1595778300709},{"_id":"themes/next/README.md","hash":"efcdc4b0ca791c3fc64afa28c8721e137f2d11ea","modified":1595778300708},{"_id":"themes/next/_config.yml","hash":"bba5d7083ceedef8ac422142e26a284f93326e06","modified":1598110661036},{"_id":"themes/next/README.cn.md","hash":"b878b73f3fcdef47849453c94420871903d487b3","modified":1595778300707},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1595778300710},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1595778300763},{"_id":"source/404/index.md","hash":"e3a3b7d1bb777b5dcb257ddcff459a722aef233e","modified":1595778300635},{"_id":"source/_posts/5-years-song.md","hash":"0aaaa47064ebb01a7a440332e1ee876405499855","modified":1596368862600},{"_id":"source/_posts/Chrome-console.md","hash":"60e4b7fd5b4aba82f9f6f57bf9a4258c1bce3207","modified":1596369743492},{"_id":"source/_posts/Chrome-devtool-begin.md","hash":"aec4430a7cd22a136c5379b72b1610e69306ca1b","modified":1596371359509},{"_id":"source/_posts/Chrome-elements.md","hash":"07472413dbd6c75fed3881b2a5c9eabe956fafb5","modified":1596371011428},{"_id":"source/_posts/Chrome-network.md","hash":"7dbe930e7ec70698e843ba4d9d483e570618944c","modified":1596369399622},{"_id":"source/_posts/Your-connection-is-not-private-解决办法.md","hash":"6e70bd571ad49a4dde32be2aa9b52673e4b53d6e","modified":1596369296665},{"_id":"source/_posts/again-ganhaizi.md","hash":"528ff9e3bb1802e16f7b06ccd03913091e94f466","modified":1596371253136},{"_id":"source/_posts/array-function.md","hash":"1fe68473f52510780ff232f6e73788a87499bf39","modified":1595778300640},{"_id":"source/_posts/cicd1.md","hash":"03f821696cbdc7f38405a027b52bf9897cebec96","modified":1596368565209},{"_id":"source/_posts/cicd2.md","hash":"df0dfbbe1acc095dc48f768e3499d7b7ab694cb0","modified":1596368474326},{"_id":"source/_posts/cicd3.md","hash":"1bc49c0974483e70b5caf2838ccadcaea59b0c8b","modified":1596368012989},{"_id":"source/_posts/cicd6.md","hash":"65635d7abb2872307abb719dbdf7380f1eaefcc8","modified":1597248275308},{"_id":"source/_posts/cicd4.md","hash":"2e8313582806695607a470244630aa6282a49df1","modified":1596367749386},{"_id":"source/_posts/cicd7.md","hash":"373e3d58b0acf8d79edf0a576422ab534fc50199","modified":1597248275309},{"_id":"source/_posts/cicd5.md","hash":"82c35c24683715ea0888530a999efc8d5d4e7aa0","modified":1596902926503},{"_id":"source/_posts/hello-world.md","hash":"81dab7e796f5654d8cc63be70fe643245892e000","modified":1595778300642},{"_id":"source/_posts/http.md","hash":"36aec33b235681169315d21a05c9f7eb7e777c7f","modified":1596369874667},{"_id":"source/_posts/mysql1.md","hash":"a32d6b0d4fca9844b48c9d8ce29d11132359e30b","modified":1596368787063},{"_id":"source/_posts/master.md","hash":"4f57559cfdf4c3d1f440f7cad5e1ee54d2315b21","modified":1595778300643},{"_id":"source/_posts/poems-sunny.md","hash":"f47f86ebe659f8b5cfc7f16ecdcc0de9f82a504e","modified":1595778300643},{"_id":"source/_posts/pseudo-classes.md","hash":"65e94ddb2be16e7f581b3e731047585806aa9aca","modified":1595778300644},{"_id":"source/_posts/再学一次JS原型.md","hash":"188e9683fc681dd42d898ee77f4d56361df9fadc","modified":1598172017086},{"_id":"source/tags/index.md","hash":"0db2892a1f97adb6cbfe1125216f2a6c4d02a27a","modified":1595778300645},{"_id":"source/somewords/index.md","hash":"7a6d2684bf4b0647d1bffd83e027e700303378c0","modified":1598110661034},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1595778300701},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a0a82dbfabdef9a9d7c17a08ceebfb4052d98d81","modified":1595778300702},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1595778300703},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1595778300704},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1595778300711},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1595778300712},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1595778300712},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1595778300713},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1595778300713},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1595778300714},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1595778300715},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1595778300715},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1595778300716},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1595778300716},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1595778300717},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1595778300716},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1595778300717},{"_id":"themes/next/languages/zh-Hans.yml","hash":"9da17d4eb375f685e3886267abedd1666647ec21","modified":1595778300718},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1595778300718},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1595778300719},{"_id":"themes/next/layout/_layout.swig","hash":"6fc5d426e21eca4930216c668264e062de1605e4","modified":1598110859112},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1595778300760},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1595778300760},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1595778300761},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1595778300760},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1595778300761},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1595778300762},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1595778300763},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1595778300765},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1595778300764},{"_id":"themes/next/source/baidu_verify_0Jv5zioW8L.html","hash":"a6aeb565a1f8fa74621cd182be441d673fb5c00b","modified":1595778300770},{"_id":"themes/next/source/robots.txt","hash":"bc4c0c51184ade050722841f6ced16b30f093be9","modified":1595778300927},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1595778300927},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1595778300928},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1595778300928},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595778300838},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1595778300720},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1595778300720},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1595778300721},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"83a4334246f8a99530d3a97197640cef0540e219","modified":1596382313251},{"_id":"themes/next/layout/_macro/post.swig","hash":"e71b06b13728c83e86a287433343b0e9d664f567","modified":1595778300722},{"_id":"themes/next/layout/_macro/reward.swig","hash":"9590d2ae2acd2cde3cc911443fb1e604cce47920","modified":1595778300722},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"d620a43901723eb1e652b867c67477c71cb31e0f","modified":1598112425911},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1595778300723},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1595778300724},{"_id":"themes/next/layout/_partials/footer.swig","hash":"e9f1a68bfd3dc6ccf5ff99a8b0d4666b00bd3f0c","modified":1595778300724},{"_id":"themes/next/layout/_partials/head.swig","hash":"89765e53cc6e99a66cab88e878a12f1dd5b87c67","modified":1598149870036},{"_id":"themes/next/layout/_partials/header.swig","hash":"08e5130cb0611c400deccca662fae92590653a77","modified":1597067758910},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1595778300728},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"b23e462c6c9aad4bae9e8bfac448051acce394de","modified":1595778300729},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1595778300729},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1595778300752},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1595778300752},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1595778300753},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"7edc31fd2f8149865361f4b8f51afec9e7494d51","modified":1598110787478},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1595778300753},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1595778300754},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1595778300754},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"69d66005285a5bea7d9a1432479d0d0db3b55b2f","modified":1598149135206},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"b2ad7315e80ea140b1da65dbedbb8c37013fff2c","modified":1598149366806},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1595778300740},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1595778300765},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1595778300766},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1595778300767},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1595778300767},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1595778300768},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1595778300769},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1595778300769},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1595778300769},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1595778300769},{"_id":"themes/next/source/css/main.styl","hash":"fa35f4f264c88f9aad64bc8c849c15a3c91d7c5d","modified":1595778300838},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1595778300839},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1595778300839},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1595778300840},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1595778300842},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1595778300842},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1595778300843},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1595778300843},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1595778300843},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1595778300844},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1595778300844},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1595778300845},{"_id":"themes/next/source/images/giphy.gif","hash":"1a65a93188187b3b40613d4fe4253a775020a0b0","modified":1595778300846},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1595778300845},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1595778300847},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1595778300848},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1595778300849},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1595778300847},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1595778300849},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1595778300849},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595778300739},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595778300739},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595778300818},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595778300818},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595778300820},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595778300835},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1595778300837},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1595778300726},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1595778300727},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1595778300729},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1595778300730},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1595778300730},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1595778300731},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1595778300731},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1595778300731},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1595778300732},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1595778300742},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1595778300743},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1595778300743},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"c1de746c436f3efa5e53f699d601391a5b1339d6","modified":1595778300744},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1595778300744},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1595778300745},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1595778300746},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1595778300747},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1595778300746},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1595778300747},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1595778300748},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1595778300749},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1595778300748},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1595778300748},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1595778300749},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1595778300749},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1595778300750},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1595778300751},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1595778300751},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1595778300751},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"8c77ccd1dee53c1d0ce4d13395c421ce4dbbbe7a","modified":1595778300751},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1595778300752},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1595778300756},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"846077b9aa5bca80bb188681d8e55e38b7976d72","modified":1595778300757},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1595778300758},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1595778300759},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"3ef341af48207c8fce68aaf1e1ae3b32f3ff3662","modified":1598149413297},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1595778300738},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"8ddadf05e66a37c530de9376189be311f5f211e3","modified":1598149233088},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1595778300817},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"787acfaa2587b057e9b72ff5328bb12e488ec367","modified":1595778300816},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1595778300820},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1595778300819},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1595778300835},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1595778300835},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1595778300836},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1595778300836},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1595778300869},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1595778300866},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1595778300870},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1595778300884},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1595778300884},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1595778300884},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1595778300884},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1595778300887},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1595778300887},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1595778300887},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1595778300888},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1595778300888},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1595778300900},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1595778300903},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1595778300902},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1595778300903},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1595778300904},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1595778300904},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1595778300904},{"_id":"themes/next/source/lib/needsharebutton/README.md","hash":"67325935d405fc269d4ec3223c3ba37710db55be","modified":1595778300905},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"f98253ddd8b345a6826b05139911be12c70bcc0c","modified":1595778300906},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"ef80f26e3ae6fc59ecdbc1294c50636de9280018","modified":1595778300906},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1595778300907},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1595778300907},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1595778300908},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1595778300908},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1595778300909},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1595778300909},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1595778300909},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1595778300912},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1595778300910},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1595778300911},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1595778300913},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1595778300912},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1595778300913},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1595778300914},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1595778300914},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1595778300915},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1595778300914},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1595778300921},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1595778300921},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1595778300924},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1595778300925},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1595778300850},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1595778300925},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1595778300850},{"_id":"themes/next/source/js/src/clipboard-use.js","hash":"fd49d9454f50a1f525f15030dccf8fdc5fa5d4f5","modified":1596382264387},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1595778300852},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1595778300852},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1595778300851},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1595778300853},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1595778300853},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1595778300853},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1595778300854},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1595778300854},{"_id":"themes/next/source/js/src/utils.js","hash":"cfa81c4d73a8a6a274283a3c89d11152141b4c68","modified":1595778300855},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1595778300755},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1595778300755},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1595778300772},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1595778300772},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1595778300774},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1595778300773},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1595778300774},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1595778300784},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1595778300801},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1595778300812},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1595778300813},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1595778300814},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1595778300813},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1595778300815},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1595778300815},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1595778300816},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1595778300822},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1595778300822},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1595778300823},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1595778300823},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1595778300824},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1595778300825},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1595778300825},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1595778300821},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1595778300832},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"467feb7384a87e30ef4b486d87cefc6a4af263fc","modified":1595778300832},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1595778300833},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1595778300833},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1595778300834},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1595778300834},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1595778300828},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1595778300828},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1595778300830},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1595778300830},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1595778300829},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1595778300864},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1595778300864},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1595778300886},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1595778300885},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1595778300872},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1595778300872},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1595778300874},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1595778300875},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1595778300875},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1595778300876},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1595778300880},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1595778300882},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1595778300889},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1595778300889},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1595778300901},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1595778300920},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1595778300920},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1595778300854},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1595778300862},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1595778300863},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1595778300882},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1595778300899},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1595778300900},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1595778300890},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1595778300775},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1595778300776},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1595778300776},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1595778300778},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1595778300777},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1595778300779},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1595778300780},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1595778300781},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1595778300779},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1595778300781},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1595778300782},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1595778300782},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1595778300783},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1595778300783},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1595778300785},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1595778300785},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1595778300786},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1595778300787},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1595778300786},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1595778300787},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1595778300788},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1595778300788},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1595778300789},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1595778300790},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1595778300788},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1595778300790},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1595778300791},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1595778300791},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1595778300793},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1595778300794},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1595778300794},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1595778300796},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1595778300798},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1595778300797},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1595778300798},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1595778300799},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1595778300799},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1595778300801},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1595778300800},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1595778300802},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1595778300803},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1595778300803},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1595778300805},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1595778300805},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1595778300804},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1595778300805},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1595778300806},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1595778300806},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1595778300807},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1595778300808},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1595778300807},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1595778300808},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1595778300809},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1595778300809},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1595778300811},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1595778300811},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1595778300810},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1595778300812},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1595778300826},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1595778300827},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1595778300831},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1595778300857},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1595778300858},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1595778300861},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1595778300877},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1595778300877},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1595778300878},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1595778300878},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1595778300880},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1595778300880},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1595778300892},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1595778300895},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1595778300859},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1595778300861},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1595778300898},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1595778300923},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1595778300868},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1595778300896},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1595778300919}],"Category":[],"Data":[],"Page":[{"title":"404 Not Found：该页无法显示","toc":false,"comments":0,"_content":"<!DOCTYPE html>\n<html>\n    <head>\n         <meta charset=\"UTF-8\" />\n         <title>404</title>                                                                                                                                        \n    </head>\n    <body>\n         <script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" homePageName=\"返回首页\" homePageUrl=\"https://kitety.github.io/\"></script>\ntrue</body>\n</html>\n","source":"404/index.md","raw":"---\ntitle: 404 Not Found：该页无法显示\ntoc: false\ncomments: false\npermalink: /404\n---\n<!DOCTYPE html>\n<html>\n    <head>\n         <meta charset=\"UTF-8\" />\n         <title>404</title>                                                                                                                                        \n    </head>\n    <body>\n         <script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" homePageName=\"返回首页\" homePageUrl=\"https://kitety.github.io/\"></script>\ntrue</body>\n</html>\n","date":"2020-07-26T15:45:00.635Z","updated":"2020-07-26T15:45:00.635Z","path":"/404.html","layout":"page","_id":"cke6udnaa0000vwtf7388byl5","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><!DOCTYPE html><html><head><meta charset=\"UTF-8\"><title>404</title><meta name=\"generator\" content=\"Hexo 4.2.0\"></head><body><script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" homepagename=\"返回首页\" homepageurl=\"https://kitety.github.io/\"></script>true<script>window.imageLazyLoadSetting={isSPA:!1,processImages:null}</script><script>window.addEventListener(\"load\",function(){var a=/\\.(gif|jpg|jpeg|tiff|png)$/i,e=/^data:image\\/[a-z]+;base64,/;Array.prototype.slice.call(document.querySelectorAll(\"img[data-original]\")).forEach(function(t){var r=t.parentNode;\"A\"===r.tagName&&(r.href.match(a)||r.href.match(e))&&(r.href=t.dataset.original)})})</script><script>!function(t){function e(){n&&(i=Array.prototype.slice.call(document.querySelectorAll(\"img[data-original]\")));for(var e,o,a=0;a<i.length;a++)e=i[a],0<=(o=e.getBoundingClientRect()).bottom&&0<=o.left&&o.top<=(t.innerHeight||document.documentElement.clientHeight)&&function(){var t,e,n,o,r=i[a];t=r,e=function(){i=i.filter(function(t){return r!==t})},n=new Image,o=t.getAttribute(\"data-original\"),n.onload=function(){t.src=o,e&&e()},n.src=o}()}t.imageLazyLoadSetting.processImages=e;var n=t.imageLazyLoadSetting.isSPA,i=Array.prototype.slice.call(document.querySelectorAll(\"img[data-original]\"));e(),t.addEventListener(\"scroll\",function(){var n,i;n=e,i=t,clearTimeout(n.tId),n.tId=setTimeout(function(){n.call(i)},500)})}(this)</script></body></html><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><!DOCTYPE html><html><head><meta charset=\"UTF-8\"><title>404</title><meta name=\"generator\" content=\"Hexo 4.2.0\"></head><body><script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" homepagename=\"返回首页\" homepageurl=\"https://kitety.github.io/\"></script>true<script>window.imageLazyLoadSetting={isSPA:!1,processImages:null}</script><script>window.addEventListener(\"load\",function(){var a=/\\.(gif|jpg|jpeg|tiff|png)$/i,e=/^data:image\\/[a-z]+;base64,/;Array.prototype.slice.call(document.querySelectorAll(\"img[data-original]\")).forEach(function(t){var r=t.parentNode;\"A\"===r.tagName&&(r.href.match(a)||r.href.match(e))&&(r.href=t.dataset.original)})})</script><script>!function(t){function e(){n&&(i=Array.prototype.slice.call(document.querySelectorAll(\"img[data-original]\")));for(var e,o,a=0;a<i.length;a++)e=i[a],0<=(o=e.getBoundingClientRect()).bottom&&0<=o.left&&o.top<=(t.innerHeight||document.documentElement.clientHeight)&&function(){var t,e,n,o,r=i[a];t=r,e=function(){i=i.filter(function(t){return r!==t})},n=new Image,o=t.getAttribute(\"data-original\"),n.onload=function(){t.src=o,e&&e()},n.src=o}()}t.imageLazyLoadSetting.processImages=e;var n=t.imageLazyLoadSetting.isSPA,i=Array.prototype.slice.call(document.querySelectorAll(\"img[data-original]\"));e(),t.addEventListener(\"scroll\",function(){var n,i;n=e,i=t,clearTimeout(n.tId),n.tId=setTimeout(function(){n.call(i)},500)})}(this)</script></body></html><!-- rebuild by neat -->"},{"title":"tags","type":"tags","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: \"tags\"\ntype: tags\nlayout: \"tags\"\ncomments: false\n---\n","date":"2020-07-26T15:45:00.645Z","updated":"2020-07-26T15:45:00.645Z","path":"tags/index.html","_id":"cke6udnak0002vwtf5gthdqkx","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><!-- rebuild by neat -->"},{"title":"一些话","date":"2020-05-05T00:53:30.000Z","type":"somewords","comments":0,"_content":"\n<!-- 一言API -->\n<!-- 现代写法，推荐 -->\n<!-- 兼容低版本浏览器 (包括 IE)，可移除 -->\n<script src=\"https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js\"></script>\n<!--End-->\n<script>\n  fetch('https://v1.hitokoto.cn')\n    .then(function (res){\n      return res.json();\n    })\n    .then(function (data) {\n      var hitokoto = document.getElementById('hitokoto');\n      hitokoto.innerText = data.hitokoto + '——【' + data.from + '】';\n    })\n    .catch(function (err) {\n      console.error(err);\n    })\n</script>\n\n0.一言\n\n<p id=\"hitokoto\">正在加载一言...</p>\n\n1.[上过大学和没上大学的区别在哪？](https://www.zhihu.com/question/280100422/answer/566951310) （2020 年 5 月 5 日 09:38:43）\n\n> 也许等大学后你和你没上的同学一起聊天\n> 他会嘲笑你说：上大学有什么用？还不是和我一起坐在一起吃大排档。\n> 那时候你只会微微一笑:对啊，因为我们是朋友\n> **我不会因为我感觉到我们之间存在差距而嘲笑你。** > **而你会因为你感觉不到我们之间的差距而嘲笑我。**\n\n2.我曾七次鄙视自己的灵魂 （2020 年 5 月 8 日 23:57:13）\n\n> 第一次，当它本可进取时，却故作谦卑；\n> 第二次，当它在空虚时，用爱欲来填充；\n> 第三次，在困难和容易之间，它选择了容易；\n> 第四次，它犯了错，却借由别人也会犯错来宽慰自己；\n> 第五次，它自由软弱，却把它认为是生命的坚韧；\n> 第六次，当它鄙夷一张丑恶的嘴脸时，却不知那正是自己面具中的一副；\n> 第七次，它侧身于生活的污泥中，虽不甘心，却又畏首畏尾。\n\n3.不要一味地允许和同意，拒绝也是提升价值的方式。(2020 年 5 月 16 日 00:36:10)\n\n4.读书不是唯一的出路，学习才是。（2020 年 5 月 24 日 21:17:12）\n\n5.缝纫机乐队台词(2020 年 5 月 24 日 21:25:27)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F73a9ebe3-2e8f-4ac3-9108-3031bf663e08%2FUntitled.png?table=block&id=93a79710-3bea-439c-8b34-c211c28ab4e0&width=3830&cache=v2)\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=512377374&auto=0&height=66\"></iframe>\n\n6.越哥说电影[《独自等待》](https://www.youtube.com/watch?v=mi5-1p23hlI)\n\n> 要么好好活着，要么赶紧去死\n\n> 或许每个像陈文的男生，都有过类似的经历，\n> 幻想着自己的梦中情人，脑补着她是多么完美。\n>\n> 其实不仅仅是爱情，那时我们的梦想，我们的青春，\n> 都在我们的脑海中张牙舞爪，我们迫不及待的想要抓在手里。\n> 年轻时我们爱幻想，总以为自己和别人不一样，\n> 关于爱情，关于梦想，关于自己，关于世界。\n>\n> 我们总以为它们都在远方，我们也偏执的相信，\n> 在我们看不见的地方，有我们想要的一切。\n> 可当我们的眼睛总看着前方时，\n> 那些脚下的繁花和身边的风景都会被我们忽略掉。\n>\n> 于是我们总是觉得自己正在独自等待，\n> 好像我们怎么也抓不住跑的飞快的梦想和爱情。\n> 或许时过经年，你才会想起那些年轻时陪在你身边的人，\n> 曾经你们促膝长谈，曾经你们把酒言欢，曾经你们一起犯傻；\n> 但现在的你们似乎很久都没有联系了。\n>\n> 那时候聊感情，聊梦想，聊生活，聊心事，\n> 可如今面临的却是无法穿越的时间长河。\n> 你才明白，有些人已经从你的身边悄悄溜走再也难以重来，\n> 那时候我们左手爱情，右手梦想，\n> 青春却被远远的丢在了某个不起眼的地方。\n\n7.学会解决问题。（2020 年 6 月 24 日 10:48:01）\n\n> 不要害怕遇到问题，正视问题。\n> 分析问题，找到原因。\n> ![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F533a38d5-31ed-4853-999b-edeefc1e2b52%2FUntitled.png?table=block&id=d86e599c-1b95-4d7b-a719-2716cd5cabe2&width=1300&cache=v2)\n\n8.做不了时间的主人，只能做时间的奴隶。(2020 年 7 月 4 日 10:56:56)\n\n> 学会规划时间，提前安排时间。\n\n9.做好两件事。(2020年8月21日14:54:38)\n> 无论你从事什么行业，只要做好两件事就够了：一个是你的**专业**、一个是你的**人品**。专业决定了你的存在，人品决定了你的人脉；剩下的就是坚持，用善良、专业和真诚赢取更多的信任。\n","source":"somewords/index.md","raw":"---\ntitle: 一些话\ndate: 2020-05-05 08:53:30\ntype: 'somewords'\ncomments: false\n---\n\n<!-- 一言API -->\n<!-- 现代写法，推荐 -->\n<!-- 兼容低版本浏览器 (包括 IE)，可移除 -->\n<script src=\"https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js\"></script>\n<!--End-->\n<script>\n  fetch('https://v1.hitokoto.cn')\n    .then(function (res){\n      return res.json();\n    })\n    .then(function (data) {\n      var hitokoto = document.getElementById('hitokoto');\n      hitokoto.innerText = data.hitokoto + '——【' + data.from + '】';\n    })\n    .catch(function (err) {\n      console.error(err);\n    })\n</script>\n\n0.一言\n\n<p id=\"hitokoto\">正在加载一言...</p>\n\n1.[上过大学和没上大学的区别在哪？](https://www.zhihu.com/question/280100422/answer/566951310) （2020 年 5 月 5 日 09:38:43）\n\n> 也许等大学后你和你没上的同学一起聊天\n> 他会嘲笑你说：上大学有什么用？还不是和我一起坐在一起吃大排档。\n> 那时候你只会微微一笑:对啊，因为我们是朋友\n> **我不会因为我感觉到我们之间存在差距而嘲笑你。** > **而你会因为你感觉不到我们之间的差距而嘲笑我。**\n\n2.我曾七次鄙视自己的灵魂 （2020 年 5 月 8 日 23:57:13）\n\n> 第一次，当它本可进取时，却故作谦卑；\n> 第二次，当它在空虚时，用爱欲来填充；\n> 第三次，在困难和容易之间，它选择了容易；\n> 第四次，它犯了错，却借由别人也会犯错来宽慰自己；\n> 第五次，它自由软弱，却把它认为是生命的坚韧；\n> 第六次，当它鄙夷一张丑恶的嘴脸时，却不知那正是自己面具中的一副；\n> 第七次，它侧身于生活的污泥中，虽不甘心，却又畏首畏尾。\n\n3.不要一味地允许和同意，拒绝也是提升价值的方式。(2020 年 5 月 16 日 00:36:10)\n\n4.读书不是唯一的出路，学习才是。（2020 年 5 月 24 日 21:17:12）\n\n5.缝纫机乐队台词(2020 年 5 月 24 日 21:25:27)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F73a9ebe3-2e8f-4ac3-9108-3031bf663e08%2FUntitled.png?table=block&id=93a79710-3bea-439c-8b34-c211c28ab4e0&width=3830&cache=v2)\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=512377374&auto=0&height=66\"></iframe>\n\n6.越哥说电影[《独自等待》](https://www.youtube.com/watch?v=mi5-1p23hlI)\n\n> 要么好好活着，要么赶紧去死\n\n> 或许每个像陈文的男生，都有过类似的经历，\n> 幻想着自己的梦中情人，脑补着她是多么完美。\n>\n> 其实不仅仅是爱情，那时我们的梦想，我们的青春，\n> 都在我们的脑海中张牙舞爪，我们迫不及待的想要抓在手里。\n> 年轻时我们爱幻想，总以为自己和别人不一样，\n> 关于爱情，关于梦想，关于自己，关于世界。\n>\n> 我们总以为它们都在远方，我们也偏执的相信，\n> 在我们看不见的地方，有我们想要的一切。\n> 可当我们的眼睛总看着前方时，\n> 那些脚下的繁花和身边的风景都会被我们忽略掉。\n>\n> 于是我们总是觉得自己正在独自等待，\n> 好像我们怎么也抓不住跑的飞快的梦想和爱情。\n> 或许时过经年，你才会想起那些年轻时陪在你身边的人，\n> 曾经你们促膝长谈，曾经你们把酒言欢，曾经你们一起犯傻；\n> 但现在的你们似乎很久都没有联系了。\n>\n> 那时候聊感情，聊梦想，聊生活，聊心事，\n> 可如今面临的却是无法穿越的时间长河。\n> 你才明白，有些人已经从你的身边悄悄溜走再也难以重来，\n> 那时候我们左手爱情，右手梦想，\n> 青春却被远远的丢在了某个不起眼的地方。\n\n7.学会解决问题。（2020 年 6 月 24 日 10:48:01）\n\n> 不要害怕遇到问题，正视问题。\n> 分析问题，找到原因。\n> ![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F533a38d5-31ed-4853-999b-edeefc1e2b52%2FUntitled.png?table=block&id=d86e599c-1b95-4d7b-a719-2716cd5cabe2&width=1300&cache=v2)\n\n8.做不了时间的主人，只能做时间的奴隶。(2020 年 7 月 4 日 10:56:56)\n\n> 学会规划时间，提前安排时间。\n\n9.做好两件事。(2020年8月21日14:54:38)\n> 无论你从事什么行业，只要做好两件事就够了：一个是你的**专业**、一个是你的**人品**。专业决定了你的存在，人品决定了你的人脉；剩下的就是坚持，用善良、专业和真诚赢取更多的信任。\n","updated":"2020-08-22T15:37:41.034Z","path":"somewords/index.html","layout":"page","_id":"cke6udnao0005vwtfcracgdae","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><script src=\"https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js\"></script><script src=\"https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js\"></script><script>fetch(\"https://v1.hitokoto.cn\").then(function(t){return t.json()}).then(function(t){var o=document.getElementById(\"hitokoto\");o.innerText=t.hitokoto+\"——【\"+t.from+\"】\"})[\"catch\"](function(t){console.error(t)})</script><p>0.一言</p><p id=\"hitokoto\">正在加载一言...</p><p>1.<a href=\"https://www.zhihu.com/question/280100422/answer/566951310\" target=\"_blank\" rel=\"noopener\">上过大学和没上大学的区别在哪？</a> （2020 年 5 月 5 日 09:38:43）</p><blockquote><p>也许等大学后你和你没上的同学一起聊天<br>他会嘲笑你说：上大学有什么用？还不是和我一起坐在一起吃大排档。<br>那时候你只会微微一笑:对啊，因为我们是朋友<br><strong>我不会因为我感觉到我们之间存在差距而嘲笑你。</strong> &gt; <strong>而你会因为你感觉不到我们之间的差距而嘲笑我。</strong></p></blockquote><p>2.我曾七次鄙视自己的灵魂 （2020 年 5 月 8 日 23:57:13）</p><blockquote><p>第一次，当它本可进取时，却故作谦卑；<br>第二次，当它在空虚时，用爱欲来填充；<br>第三次，在困难和容易之间，它选择了容易；<br>第四次，它犯了错，却借由别人也会犯错来宽慰自己；<br>第五次，它自由软弱，却把它认为是生命的坚韧；<br>第六次，当它鄙夷一张丑恶的嘴脸时，却不知那正是自己面具中的一副；<br>第七次，它侧身于生活的污泥中，虽不甘心，却又畏首畏尾。</p></blockquote><p>3.不要一味地允许和同意，拒绝也是提升价值的方式。(2020 年 5 月 16 日 00:36:10)</p><p>4.读书不是唯一的出路，学习才是。（2020 年 5 月 24 日 21:17:12）</p><p>5.缝纫机乐队台词(2020 年 5 月 24 日 21:25:27)</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F73a9ebe3-2e8f-4ac3-9108-3031bf663e08%2FUntitled.png?table=block&id=93a79710-3bea-439c-8b34-c211c28ab4e0&width=3830&cache=v2\" alt=\"\"></p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=512377374&auto=0&height=66\"></iframe><p>6.越哥说电影<a href=\"https://www.youtube.com/watch?v=mi5-1p23hlI\" target=\"_blank\" rel=\"noopener\">《独自等待》</a></p><blockquote><p>要么好好活着，要么赶紧去死</p></blockquote><blockquote><p>或许每个像陈文的男生，都有过类似的经历，<br>幻想着自己的梦中情人，脑补着她是多么完美。</p><p>其实不仅仅是爱情，那时我们的梦想，我们的青春，<br>都在我们的脑海中张牙舞爪，我们迫不及待的想要抓在手里。<br>年轻时我们爱幻想，总以为自己和别人不一样，<br>关于爱情，关于梦想，关于自己，关于世界。</p><p>我们总以为它们都在远方，我们也偏执的相信，<br>在我们看不见的地方，有我们想要的一切。<br>可当我们的眼睛总看着前方时，<br>那些脚下的繁花和身边的风景都会被我们忽略掉。</p><p>于是我们总是觉得自己正在独自等待，<br>好像我们怎么也抓不住跑的飞快的梦想和爱情。<br>或许时过经年，你才会想起那些年轻时陪在你身边的人，<br>曾经你们促膝长谈，曾经你们把酒言欢，曾经你们一起犯傻；<br>但现在的你们似乎很久都没有联系了。</p><p>那时候聊感情，聊梦想，聊生活，聊心事，<br>可如今面临的却是无法穿越的时间长河。<br>你才明白，有些人已经从你的身边悄悄溜走再也难以重来，<br>那时候我们左手爱情，右手梦想，<br>青春却被远远的丢在了某个不起眼的地方。</p></blockquote><p>7.学会解决问题。（2020 年 6 月 24 日 10:48:01）</p><blockquote><p>不要害怕遇到问题，正视问题。<br>分析问题，找到原因。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F533a38d5-31ed-4853-999b-edeefc1e2b52%2FUntitled.png?table=block&id=d86e599c-1b95-4d7b-a719-2716cd5cabe2&width=1300&cache=v2\" alt=\"\"></p></blockquote><p>8.做不了时间的主人，只能做时间的奴隶。(2020 年 7 月 4 日 10:56:56)</p><blockquote><p>学会规划时间，提前安排时间。</p></blockquote><p>9.做好两件事。(2020年8月21日14:54:38)</p><blockquote><p>无论你从事什么行业，只要做好两件事就够了：一个是你的<strong>专业</strong>、一个是你的<strong>人品</strong>。专业决定了你的存在，人品决定了你的人脉；剩下的就是坚持，用善良、专业和真诚赢取更多的信任。</p></blockquote><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><script src=\"https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js\"></script><script src=\"https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js\"></script><script>fetch(\"https://v1.hitokoto.cn\").then(function(t){return t.json()}).then(function(t){var o=document.getElementById(\"hitokoto\");o.innerText=t.hitokoto+\"——【\"+t.from+\"】\"})[\"catch\"](function(t){console.error(t)})</script><p>0.一言</p><p id=\"hitokoto\">正在加载一言...</p><p>1.<a href=\"https://www.zhihu.com/question/280100422/answer/566951310\" target=\"_blank\" rel=\"noopener\">上过大学和没上大学的区别在哪？</a> （2020 年 5 月 5 日 09:38:43）</p><blockquote><p>也许等大学后你和你没上的同学一起聊天<br>他会嘲笑你说：上大学有什么用？还不是和我一起坐在一起吃大排档。<br>那时候你只会微微一笑:对啊，因为我们是朋友<br><strong>我不会因为我感觉到我们之间存在差距而嘲笑你。</strong> &gt; <strong>而你会因为你感觉不到我们之间的差距而嘲笑我。</strong></p></blockquote><p>2.我曾七次鄙视自己的灵魂 （2020 年 5 月 8 日 23:57:13）</p><blockquote><p>第一次，当它本可进取时，却故作谦卑；<br>第二次，当它在空虚时，用爱欲来填充；<br>第三次，在困难和容易之间，它选择了容易；<br>第四次，它犯了错，却借由别人也会犯错来宽慰自己；<br>第五次，它自由软弱，却把它认为是生命的坚韧；<br>第六次，当它鄙夷一张丑恶的嘴脸时，却不知那正是自己面具中的一副；<br>第七次，它侧身于生活的污泥中，虽不甘心，却又畏首畏尾。</p></blockquote><p>3.不要一味地允许和同意，拒绝也是提升价值的方式。(2020 年 5 月 16 日 00:36:10)</p><p>4.读书不是唯一的出路，学习才是。（2020 年 5 月 24 日 21:17:12）</p><p>5.缝纫机乐队台词(2020 年 5 月 24 日 21:25:27)</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F73a9ebe3-2e8f-4ac3-9108-3031bf663e08%2FUntitled.png?table=block&id=93a79710-3bea-439c-8b34-c211c28ab4e0&width=3830&cache=v2\" alt=\"\"></p><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=512377374&auto=0&height=66\"></iframe><p>6.越哥说电影<a href=\"https://www.youtube.com/watch?v=mi5-1p23hlI\" target=\"_blank\" rel=\"noopener\">《独自等待》</a></p><blockquote><p>要么好好活着，要么赶紧去死</p></blockquote><blockquote><p>或许每个像陈文的男生，都有过类似的经历，<br>幻想着自己的梦中情人，脑补着她是多么完美。</p><p>其实不仅仅是爱情，那时我们的梦想，我们的青春，<br>都在我们的脑海中张牙舞爪，我们迫不及待的想要抓在手里。<br>年轻时我们爱幻想，总以为自己和别人不一样，<br>关于爱情，关于梦想，关于自己，关于世界。</p><p>我们总以为它们都在远方，我们也偏执的相信，<br>在我们看不见的地方，有我们想要的一切。<br>可当我们的眼睛总看着前方时，<br>那些脚下的繁花和身边的风景都会被我们忽略掉。</p><p>于是我们总是觉得自己正在独自等待，<br>好像我们怎么也抓不住跑的飞快的梦想和爱情。<br>或许时过经年，你才会想起那些年轻时陪在你身边的人，<br>曾经你们促膝长谈，曾经你们把酒言欢，曾经你们一起犯傻；<br>但现在的你们似乎很久都没有联系了。</p><p>那时候聊感情，聊梦想，聊生活，聊心事，<br>可如今面临的却是无法穿越的时间长河。<br>你才明白，有些人已经从你的身边悄悄溜走再也难以重来，<br>那时候我们左手爱情，右手梦想，<br>青春却被远远的丢在了某个不起眼的地方。</p></blockquote><p>7.学会解决问题。（2020 年 6 月 24 日 10:48:01）</p><blockquote><p>不要害怕遇到问题，正视问题。<br>分析问题，找到原因。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F533a38d5-31ed-4853-999b-edeefc1e2b52%2FUntitled.png?table=block&id=d86e599c-1b95-4d7b-a719-2716cd5cabe2&width=1300&cache=v2\" alt=\"\"></p></blockquote><p>8.做不了时间的主人，只能做时间的奴隶。(2020 年 7 月 4 日 10:56:56)</p><blockquote><p>学会规划时间，提前安排时间。</p></blockquote><p>9.做好两件事。(2020年8月21日14:54:38)</p><blockquote><p>无论你从事什么行业，只要做好两件事就够了：一个是你的<strong>专业</strong>、一个是你的<strong>人品</strong>。专业决定了你的存在，人品决定了你的人脉；剩下的就是坚持，用善良、专业和真诚赢取更多的信任。</p></blockquote><!-- rebuild by neat -->"}],"Post":[{"title":"一首找了五年的歌","abbrlink":"6707eb52","date":"2020-07-02T13:10:29.000Z","_content":"\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=567510388&auto=0&height=66\"></iframe>\n\n## 题记\n> 听听从前的歌，想起走过的路。\n\n\n## 想起了这首歌\n\n今天和朋友去西岭那边漂流，结果回来的车上有点晕车，搞得我心神不宁。因为是返程，又是从川西那边回来，心里不由自主的回想起从前的时光，然后就很想找一首歌。\n\n<!-- more -->\n\n回来就在手机上摆弄着当我输入：**六月的雨 四川农业大学 就让六月的雨带走我的感伤的时候**，出现了下面的搜索结果\n\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcc27e447-1206-4dd3-a0d6-1daabd3992e8%2Fia_10006.png?table=block&id=3b8925b9-2ef8-4360-8c8b-6c21770facae&width=2160&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffc597dcc-9471-4880-9889-94fc39809142%2Fia_10007.png?table=block&id=649042b0-4b92-4a14-b09c-366b4a123b07&width=2160&cache=v2)\n\n没错我看到了了这首歌，原来这首歌的名字叫做《六月》，而我之前一直都以为叫做《六月的雨》。我当时就立马分享给了我的好友晓静，感觉找到了什么宝藏。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb87e3b6f-43e9-41dc-8ad6-d20e88e4ee5b%2Fia_10008.png?table=block&id=4f0d39ee-6697-4b02-9c07-d3b67f118285&width=2160&cache=v2)\n\n这一刻，感觉时间回到了久远的从前。\n\n## 知道这首歌\n\n你也许会问，为什么知道这首歌。\n\n现在想想，这是一个小故事，也是我的宝藏，每次想起我都些许懊悔，也会让我欣慰自豪。\n\n\n\n\n## 未完待续\n\n","source":"_posts/5-years-song.md","raw":"---\ntitle: 一首找了五年的歌\nabbrlink: 6707eb52\ndate: 2020-07-02 21:10:29\ntags:\n- 心得\n---\n\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=567510388&auto=0&height=66\"></iframe>\n\n## 题记\n> 听听从前的歌，想起走过的路。\n\n\n## 想起了这首歌\n\n今天和朋友去西岭那边漂流，结果回来的车上有点晕车，搞得我心神不宁。因为是返程，又是从川西那边回来，心里不由自主的回想起从前的时光，然后就很想找一首歌。\n\n<!-- more -->\n\n回来就在手机上摆弄着当我输入：**六月的雨 四川农业大学 就让六月的雨带走我的感伤的时候**，出现了下面的搜索结果\n\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcc27e447-1206-4dd3-a0d6-1daabd3992e8%2Fia_10006.png?table=block&id=3b8925b9-2ef8-4360-8c8b-6c21770facae&width=2160&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffc597dcc-9471-4880-9889-94fc39809142%2Fia_10007.png?table=block&id=649042b0-4b92-4a14-b09c-366b4a123b07&width=2160&cache=v2)\n\n没错我看到了了这首歌，原来这首歌的名字叫做《六月》，而我之前一直都以为叫做《六月的雨》。我当时就立马分享给了我的好友晓静，感觉找到了什么宝藏。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb87e3b6f-43e9-41dc-8ad6-d20e88e4ee5b%2Fia_10008.png?table=block&id=4f0d39ee-6697-4b02-9c07-d3b67f118285&width=2160&cache=v2)\n\n这一刻，感觉时间回到了久远的从前。\n\n## 知道这首歌\n\n你也许会问，为什么知道这首歌。\n\n现在想想，这是一个小故事，也是我的宝藏，每次想起我都些许懊悔，也会让我欣慰自豪。\n\n\n\n\n## 未完待续\n\n","slug":"5-years-song","published":1,"updated":"2020-08-02T11:47:42.600Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnaf0001vwtf6vic8rc9","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:58 GMT+0800 (中国标准时间) --><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=567510388&auto=0&height=66\"></iframe><h2 id=\"题记\"><a href=\"#题记\" class=\"headerlink\" title=\"题记\"></a>题记</h2><blockquote><p>听听从前的歌，想起走过的路。</p></blockquote><h2 id=\"想起了这首歌\"><a href=\"#想起了这首歌\" class=\"headerlink\" title=\"想起了这首歌\"></a>想起了这首歌</h2><p>今天和朋友去西岭那边漂流，结果回来的车上有点晕车，搞得我心神不宁。因为是返程，又是从川西那边回来，心里不由自主的回想起从前的时光，然后就很想找一首歌。</p><a id=\"more\"></a><p>回来就在手机上摆弄着当我输入：<strong>六月的雨 四川农业大学 就让六月的雨带走我的感伤的时候</strong>，出现了下面的搜索结果</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcc27e447-1206-4dd3-a0d6-1daabd3992e8%2Fia_10006.png?table=block&id=3b8925b9-2ef8-4360-8c8b-6c21770facae&width=2160&cache=v2\" alt=\"\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffc597dcc-9471-4880-9889-94fc39809142%2Fia_10007.png?table=block&id=649042b0-4b92-4a14-b09c-366b4a123b07&width=2160&cache=v2\" alt=\"\"></p><p>没错我看到了了这首歌，原来这首歌的名字叫做《六月》，而我之前一直都以为叫做《六月的雨》。我当时就立马分享给了我的好友晓静，感觉找到了什么宝藏。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb87e3b6f-43e9-41dc-8ad6-d20e88e4ee5b%2Fia_10008.png?table=block&id=4f0d39ee-6697-4b02-9c07-d3b67f118285&width=2160&cache=v2\" alt=\"\"></p><p>这一刻，感觉时间回到了久远的从前。</p><h2 id=\"知道这首歌\"><a href=\"#知道这首歌\" class=\"headerlink\" title=\"知道这首歌\"></a>知道这首歌</h2><p>你也许会问，为什么知道这首歌。</p><p>现在想想，这是一个小故事，也是我的宝藏，每次想起我都些许懊悔，也会让我欣慰自豪。</p><h2 id=\"未完待续\"><a href=\"#未完待续\" class=\"headerlink\" title=\"未完待续\"></a>未完待续</h2><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:58 GMT+0800 (中国标准时间) --><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=567510388&auto=0&height=66\"></iframe><h2 id=\"题记\"><a href=\"#题记\" class=\"headerlink\" title=\"题记\"></a>题记</h2><blockquote><p>听听从前的歌，想起走过的路。</p></blockquote><h2 id=\"想起了这首歌\"><a href=\"#想起了这首歌\" class=\"headerlink\" title=\"想起了这首歌\"></a>想起了这首歌</h2><p>今天和朋友去西岭那边漂流，结果回来的车上有点晕车，搞得我心神不宁。因为是返程，又是从川西那边回来，心里不由自主的回想起从前的时光，然后就很想找一首歌。</p>","more":"<p>回来就在手机上摆弄着当我输入：<strong>六月的雨 四川农业大学 就让六月的雨带走我的感伤的时候</strong>，出现了下面的搜索结果</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcc27e447-1206-4dd3-a0d6-1daabd3992e8%2Fia_10006.png?table=block&id=3b8925b9-2ef8-4360-8c8b-6c21770facae&width=2160&cache=v2\" alt=\"\"></p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffc597dcc-9471-4880-9889-94fc39809142%2Fia_10007.png?table=block&id=649042b0-4b92-4a14-b09c-366b4a123b07&width=2160&cache=v2\" alt=\"\"></p><p>没错我看到了了这首歌，原来这首歌的名字叫做《六月》，而我之前一直都以为叫做《六月的雨》。我当时就立马分享给了我的好友晓静，感觉找到了什么宝藏。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb87e3b6f-43e9-41dc-8ad6-d20e88e4ee5b%2Fia_10008.png?table=block&id=4f0d39ee-6697-4b02-9c07-d3b67f118285&width=2160&cache=v2\" alt=\"\"></p><p>这一刻，感觉时间回到了久远的从前。</p><h2 id=\"知道这首歌\"><a href=\"#知道这首歌\" class=\"headerlink\" title=\"知道这首歌\"></a>知道这首歌</h2><p>你也许会问，为什么知道这首歌。</p><p>现在想想，这是一个小故事，也是我的宝藏，每次想起我都些许懊悔，也会让我欣慰自豪。</p><h2 id=\"未完待续\"><a href=\"#未完待续\" class=\"headerlink\" title=\"未完待续\"></a>未完待续</h2><!-- rebuild by neat -->"},{"title":"Chrome开发者工具总览","abbrlink":"3d51b662","date":"2020-05-05T02:54:01.000Z","_content":"## 缘起\n起初本来是看到旁边的一个同事在看**Application**面板的**Service Workers**的功能，然后想到自己虽然说是工作也接近两年了，但是Chrome开发者工具的面板自己又有多少的理解呢？\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F256e86bf-8a41-491c-8e42-e9a71ea5caf3%2Fia_10005.png?table=block&id=acab4cbd-4389-4811-9210-60d7bb3e6f88&width=1740&cache=v2)\n\n<!-- more -->\n俗话说：工欲善其事，必先利其器。对于我们WEB开发者来说，Chrome就和我们的吃饭的工具相差无异。因此，我就想做一个系列，在[谷歌官方文档](https://developers.google.com/web/tools/chrome-devtools?hl=zh-cn)的基础上，全方位的解读DevTool的每一个面板。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc22cb834-9c50-4553-a242-f23d2332e873%2Fia_10006.png?table=block&id=a61132ce-8a83-4099-b2ed-423694f34615&width=2550&cache=v2)\n\n我想，这无论是对于初学者的入门，还是对于已从事WEB开发的工作人员的深入，都是很有必要的。\n\n## 计划\n现计划的是每周更新一个面板的使用方法，里面将包含基本的操作和一些高级的使用技巧。\n\n这对于我来说，无疑是一个考验，也是一次学习的机会。\n\n加油！\n","source":"_posts/Chrome-devtool-begin.md","raw":"---\ntitle: Chrome开发者工具总览\ntags:\n  - Chrome\nabbrlink: 3d51b662\ndate: 2020-05-05 10:54:01\n---\n## 缘起\n起初本来是看到旁边的一个同事在看**Application**面板的**Service Workers**的功能，然后想到自己虽然说是工作也接近两年了，但是Chrome开发者工具的面板自己又有多少的理解呢？\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F256e86bf-8a41-491c-8e42-e9a71ea5caf3%2Fia_10005.png?table=block&id=acab4cbd-4389-4811-9210-60d7bb3e6f88&width=1740&cache=v2)\n\n<!-- more -->\n俗话说：工欲善其事，必先利其器。对于我们WEB开发者来说，Chrome就和我们的吃饭的工具相差无异。因此，我就想做一个系列，在[谷歌官方文档](https://developers.google.com/web/tools/chrome-devtools?hl=zh-cn)的基础上，全方位的解读DevTool的每一个面板。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc22cb834-9c50-4553-a242-f23d2332e873%2Fia_10006.png?table=block&id=a61132ce-8a83-4099-b2ed-423694f34615&width=2550&cache=v2)\n\n我想，这无论是对于初学者的入门，还是对于已从事WEB开发的工作人员的深入，都是很有必要的。\n\n## 计划\n现计划的是每周更新一个面板的使用方法，里面将包含基本的操作和一些高级的使用技巧。\n\n这对于我来说，无疑是一个考验，也是一次学习的机会。\n\n加油！\n","slug":"Chrome-devtool-begin","published":1,"updated":"2020-08-02T12:29:19.509Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnak0003vwtfa5ula86e","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:58 GMT+0800 (中国标准时间) --><h2 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h2><p>起初本来是看到旁边的一个同事在看<strong>Application</strong>面板的<strong>Service Workers</strong>的功能，然后想到自己虽然说是工作也接近两年了，但是Chrome开发者工具的面板自己又有多少的理解呢？</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F256e86bf-8a41-491c-8e42-e9a71ea5caf3%2Fia_10005.png?table=block&id=acab4cbd-4389-4811-9210-60d7bb3e6f88&width=1740&cache=v2\" alt=\"\"></p><a id=\"more\"></a><p>俗话说：工欲善其事，必先利其器。对于我们WEB开发者来说，Chrome就和我们的吃饭的工具相差无异。因此，我就想做一个系列，在<a href=\"https://developers.google.com/web/tools/chrome-devtools?hl=zh-cn\" target=\"_blank\" rel=\"noopener\">谷歌官方文档</a>的基础上，全方位的解读DevTool的每一个面板。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc22cb834-9c50-4553-a242-f23d2332e873%2Fia_10006.png?table=block&id=a61132ce-8a83-4099-b2ed-423694f34615&width=2550&cache=v2\" alt=\"\"></p><p>我想，这无论是对于初学者的入门，还是对于已从事WEB开发的工作人员的深入，都是很有必要的。</p><h2 id=\"计划\"><a href=\"#计划\" class=\"headerlink\" title=\"计划\"></a>计划</h2><p>现计划的是每周更新一个面板的使用方法，里面将包含基本的操作和一些高级的使用技巧。</p><p>这对于我来说，无疑是一个考验，也是一次学习的机会。</p><p>加油！</p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:58 GMT+0800 (中国标准时间) --><h2 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h2><p>起初本来是看到旁边的一个同事在看<strong>Application</strong>面板的<strong>Service Workers</strong>的功能，然后想到自己虽然说是工作也接近两年了，但是Chrome开发者工具的面板自己又有多少的理解呢？</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F256e86bf-8a41-491c-8e42-e9a71ea5caf3%2Fia_10005.png?table=block&id=acab4cbd-4389-4811-9210-60d7bb3e6f88&width=1740&cache=v2\" alt=\"\"></p>","more":"<p>俗话说：工欲善其事，必先利其器。对于我们WEB开发者来说，Chrome就和我们的吃饭的工具相差无异。因此，我就想做一个系列，在<a href=\"https://developers.google.com/web/tools/chrome-devtools?hl=zh-cn\" target=\"_blank\" rel=\"noopener\">谷歌官方文档</a>的基础上，全方位的解读DevTool的每一个面板。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc22cb834-9c50-4553-a242-f23d2332e873%2Fia_10006.png?table=block&id=a61132ce-8a83-4099-b2ed-423694f34615&width=2550&cache=v2\" alt=\"\"></p><p>我想，这无论是对于初学者的入门，还是对于已从事WEB开发的工作人员的深入，都是很有必要的。</p><h2 id=\"计划\"><a href=\"#计划\" class=\"headerlink\" title=\"计划\"></a>计划</h2><p>现计划的是每周更新一个面板的使用方法，里面将包含基本的操作和一些高级的使用技巧。</p><p>这对于我来说，无疑是一个考验，也是一次学习的机会。</p><p>加油！</p><!-- rebuild by neat -->"},{"title":"Chrome Elements面板解析","abbrlink":"9430c0ea","date":"2020-05-05T03:00:03.000Z","_content":"\n### Chrome开发者工具的打开方式\n\n在开始面板分析之前，说下DevTool的打开方式。\n\n- 右键Inspect(Ctrl+Shift+I)\n- F12打开(或者光标放在地址栏F12打开)\n- Menu -> More tools -> Developer Tools\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F88d8eafe-f628-423c-b630-eb3b93d20db7%2Fia_10006.png?table=block&id=587d28c2-79d9-41bc-9709-90aacfad0854&width=1420&cache=v2)\n<!-- more -->\n### 初识面板\n在打DevTool之后选择Elements就可以打开Elements面板\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff0903299-e588-4f3a-983e-3a520dcc4db0%2Fia_10007.png?table=block&id=37e30b2e-51f3-4be8-8bd1-ab1a14b88ec7&width=3840&cache=v2)\n\n#### 面板分析\n\n最左侧面板为实际网页；在右侧的面板中，主要分为两部分，一部分是左侧的DOM Tree结构，右侧则是属性的子面板。\n\n### DOM面板使用方法\n#### 选择元素\n\n选择元素之后，右侧的DOM Tree面板会高亮此元素，底部会显示当前的DOM元素的路径，属性子面板也会展示该元素的属性。\n\n选择元素的方式有几种：\n- 在元素上右键审查\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff0a0107c-0dec-46a4-8713-2385c19262b2%2Fia_10008.png?table=block&id=5aa67908-cfab-4d75-b0db-eebd980bfcff&width=1490&cache=v2)\n\n- 使用选择工具在页面审查\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6dca281a-bfb0-4cb9-8434-efc62c7643b6%2Fia_10010.png?table=block&id=6ee4ebd3-7cda-4bf4-949e-34f05ae4c9bf&width=2910&cache=v2)\n- 在DOM Tree面板hover选中元素。此时两边的显示是及时联动的，可以及时观察，底部显示了DOM元素路径。\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F5efa9cc2-9b77-4a68-95c2-9166c1e13749%2Fia_10011.png?table=block&id=fb695df0-5f43-4677-a29d-4a966c00763b&width=2550&cache=v2)\n\n\n在元素选中之后，DOM Tree会呈现高亮状态，hover的时候在网页的实际视图也会呈现高亮。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcd43f1f3-7988-4472-af56-0b693a804b06%2FUntitled.png?table=block&id=f15d48f3-37db-423a-b6da-115223fbc456&width=2550&cache=v2)\n#### 切换元素\n在选择元素之后，可以通过键盘的**上下键**来进行上一级和下一级的选择，**左右键**可以对这个DOM节点进行展开和闭合。\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/e3e7ebe1-bd38-43bc-867a-102547d910e0/ia_10012.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120609Z&X-Amz-Expires=86400&X-Amz-Signature=c9e8bbb313c47bcaf7543c255360b562e2e624ff1bc2b43f0e81a785074bff41&X-Amz-SignedHeaders=host)\n同时，在选择了元素之后，可以直接输入$0，打印当前的元素。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4106546d-0cca-44a4-92e8-6163b0d41e91%2Fia_10013.png?table=block&id=6571821c-4275-430e-bc76-e18be5b3fb7e&width=3270&cache=v2)\n\n#### 基本编辑操作\n所有的属性编辑之后再网页都可以及时看到效果。\n##### 文本编辑\n在对应的文本上面双击可以快速选择属性，进行修改。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd5d4d239-bf16-46a0-afe3-cc196462f82f%2Fia_10014.png?table=block&id=542d3d9b-21e5-4ac7-813f-aef33e997954&width=2170&cache=v2)\n##### 属性编辑\n\n在对应的属性上面双击可以快速选择属性，进行修改。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F57890fdd-ba02-4078-a4a3-491981f1aa84%2Fia_10015.png?table=block&id=87e7e9e3-a09c-414d-bd9b-498ca8cb4144&width=1320&cache=v2)\n\n##### 元素拖拽\n选中的元素右键单击按住不放可以拖拽，DOM Tree的结构顺序被改变。\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/7baa41bd-c550-49b1-b463-f25b51450f5e/ia_10016.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120609Z&X-Amz-Expires=86400&X-Amz-Signature=a2bc98ddc3610daf6f87681a690986097861a06620fdf7972bff225d18b5cded&X-Amz-SignedHeaders=host)\n##### 元素隐藏、删除，恢复\n选中元素，按**H**键（英文输入模式下）可以切换元素的显隐，**delete**键可以直接删除DOM节点，**Ctrl+Z**可以恢复上一步的操作。\n- 显隐切换\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1c8d429c-8ec6-44fc-a379-94125b5c83dd/ia_10017.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120621Z&X-Amz-Expires=86400&X-Amz-Signature=3892966e9031bdbf6a649af02acf584203811655e3359234eafe3b206e4795f0&X-Amz-SignedHeaders=host)\n- 删除和恢复\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1efa7f5c-5c7c-4742-a979-1d9b097c9e01/ia_10018.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=eb327f563c63beaa8cc8bf82350c54cb0149fc32d2ccfde7f1530c542dceaafa&X-Amz-SignedHeaders=host)\n\n\n#### hover效果\n##### hover\nhover的时候，网页内容会随鼠标位置联动，同时如果是图片元素会显示图片的缩略图和图片地址。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6c71becd-7a80-48dd-84c2-ddfdb39ebbdc%2Fia_10019.png?table=block&id=5ddafd7b-228c-4914-ab1c-19b0a9756707&width=3270&cache=v2)\n#### 右键菜单\n当我们在DOM tree面板对元素右键的的时候会显示右键菜单。\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F65184f9a-0e24-4a94-b98f-64915a2a1d92%2Fia_10020.png?table=block&id=15c35207-cf3d-4b3b-8ef5-9f1bd4922ea4&width=710&cache=v2)\n\n接下来我们将对右键菜单一一解析。\n##### Reveal in Source panel 在资源面板显示（图片、音视频等资源会显示）\n##### Open in new tab 在新窗口打开资源（图片、音视频等资源会显示）\n##### Add attribute 为当前元素添加属性\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b09310a5-21bc-47ee-9144-b63bc4459ca7/ia_10021.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=81189b4c1b749fc133306a4c66dce059829a65cad82ff113303b34a862378c0a&X-Amz-SignedHeaders=host)\n\n##### Edit as HTML 以HTML方式编辑当前元素\n\n点击其他地方，编辑区域失去焦点就会保存\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/85345d23-ee9d-4360-804a-fd084ddc3fbb/ia_10022.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=f3fae309fbaef6b7db6a3e0c640d6e321c6e6cf2be3a70928c73b5eece811bc2&X-Amz-SignedHeaders=host)\n\n##### Delete Element 删除当前的元素，和键盘的Delete一样\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/efd268cd-4997-4531-86e9-a3cda929c3b6/ia_10023.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120609Z&X-Amz-Expires=86400&X-Amz-Signature=722d9ef878b5e7b7e89f7986e0853bc67a5377ea47fdf6248c6424a75c268c3d&X-Amz-SignedHeaders=host)\n\n##### Copy复制\n  ###### Cut element 剪切元素\n  **粘贴的时候原来元素会消失**\n  \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/72621a64-e563-4a71-8801-d704a9dbfe4b/ia_10024.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=335a92f43c280685461d4116bce16a1bf8384e12f707e8409132db7cc525b61a&X-Amz-SignedHeaders=host)\n\n  ###### Copy element 复制元素\n   **粘贴的时候原来元素不会消失**\n   \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/81d8d3ca-b889-4e8d-9f43-42673f2adfea/ia_10025.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=0437d6c12360e9a6edf9be25b1d6e496b46c2abde75510d02f441a4474484714&X-Amz-SignedHeaders=host)\n\n  ###### Paste element 粘贴元素（在已复制的情况）\n  \n  粘贴操作\n  ###### Copy outerHTML 复制序列化的HTML片段（[outerHTML](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/outerHTML)）\n  \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/cb7c71fc-02b3-49f1-9d59-c7f4ca409407/ia_10026.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=80744687ba931e5bdcbe0da088c6210c630fd36d872ca7cf5d3a76f1249cfab0&X-Amz-SignedHeaders=host)\n\n  ###### Copy selector 复制选择器（可以直接放到选择语句中使用）\n  \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/ff4cb4d4-a1e5-4aa7-a477-d0dfe5ad4449/ia_10027.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=6eecb7f0fc03e792d1f2c7974364d59dcb2e299c71d0bddf816695b260202755&X-Amz-SignedHeaders=host)\n\n  ###### Copy JS path 复制JS路径，可以直接使用\n  \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f7bf4c8a-4845-4b2c-b01e-4fbcbaabb7a9/ia_10028.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=4e12ccd9b04b8d21da12ce768078d1e6688c6ac2f5a6d1115e53b9c25dccb8f1&X-Amz-SignedHeaders=host)\n\n  ###### Copy styles 复制作用在此元素的样式\n  \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/af60e7fc-d9cb-43e1-9d9e-83ec0cfa67bc/ia_10029.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=a6c31a0cdf67b1f212622936241650df50422698b3ac13dc69879040297a5cef&X-Amz-SignedHeaders=host)\n\n  ###### Copy XPath 复制元素的XPath\n  \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/c64d41df-962e-455c-b46d-6019337faad5/ia_10030.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=b8d65dcd49ffcd70d30647872857cb2714d0573243d44f62a2114da086363dc3&X-Amz-SignedHeaders=host)\n  ###### Copy full XPath 复制元素的完整XPath\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6f6c12a3-b9cf-4afa-8823-20e4b3747e78/ia_10031.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=fd51282ee45f7e30d8f1baeba04f056247d8dda6cca23ad7eb4427b0972329f0&X-Amz-SignedHeaders=host)\n  ###### Copy link address 复制当前的连接地址（在图片等媒体元素上会显示）\n##### Force state 强制当前元素的状态 \n一共有五种\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4b2388fb-3345-4bcc-b7af-9c42df923d65%2Fia_10032.png?table=block&id=565b793b-5e90-430d-8432-6449d2469f85&width=650&cache=v2)\n(附： [全部伪类](https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes)、 [简单的demo](https://codesandbox.io/s/crimson-water-3phqw))\n  1.:active 激活状态  \n  2.:hover 虚指状态  \n  3.:focus 获得焦点状态  \n  4.:visited 已访问过的链接状态  \n  5.:focus-within 元素获得焦点或该元素的后代元素获得焦点的状态\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/35bb120a-5a45-4756-8991-266ab0b700e3/ia_10033.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120615Z&X-Amz-Expires=86400&X-Amz-Signature=e72193da02d811015b5ae94a4019a2272fc84b6f844c6ca11506a22e6c1ac26e&X-Amz-SignedHeaders=host)\n\n##### Brake on 断点\n(附：  [简单的demo](https://fewn8.csb.app/))\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F15e49d4b-e86d-49d9-80e5-e8f519332969%2Fia_10034.png?table=block&id=054d2e73-775b-48bd-8142-552ce288a545&width=850&cache=v2)\n\n一共有三种可以为**JS**修改DOM的情况打断点：\n\n1.subtree modification 子节点修改\n\n2.attribute modification 属性修改\n\n3.node removal 节点移除\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/18faba51-01a1-493e-a9df-03a0c8a06d5e/ia_10035.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=41a35647e75482fded2067ebcebbc91551ef4f46cbaf7f82926fd66eda59c55e&X-Amz-SignedHeaders=host)\n\n##### expand recursively 将此节点的每个子节点展开\n##### collapse children 将子节点全部折叠\n\n一起演示：\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/32ae82f6-ebbd-4dfd-a471-e8501bd83980/ia_10036.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120619Z&X-Amz-Expires=86400&X-Amz-Signature=133b4d91526eae6ea75531d91a27b2f858615f2937c90bc4431d029f57fd7d47&X-Amz-SignedHeaders=host)\n\n##### Scroll into view 将元素滚动到视图中\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/d0799c1b-fd0a-4010-9556-cf0164dd8148/ia_10037.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=c8c4fd7b3bb6eb785e3d909044d2f8e7ac345930c3fe9443c35c9be089bbb287&X-Amz-SignedHeaders=host)\n\n##### Focus 将在视图中高亮选择的元素，但是不一定在视图显示\n##### Store as global variable 将此元素存储为全局变量\n\n接下来就可以像操作JS一样直接操作元素。\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/278015cc-1a16-4bad-92c2-4f5597e57e09/ia_10038.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=77ba36a28c3d0a1a00916e1d76991416085da0b59849f993b845d0ed92fbf538&X-Amz-SignedHeaders=host)\n\n### 属性子面板使用方法\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F16f5024e-d6e8-4b59-9b9f-3aa7e3a00a58%2Fia_10039.png?table=block&id=25087a6c-1a18-4a68-b59a-9dc85f76adc9&width=1090&cache=v2)\n#### Styles \n当我们选中元素的时候，右侧子面板就会显示当前元素的Styles面板。这个面板主要有三个部分**Filter栏**、**样式操作栏**、**盒模型栏**\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F3297595b-b38a-4e1c-8d14-1ad328184c7f%2Fia_10040.png?table=block&id=152f1161-accc-4cd6-b02b-f20e173aac09&width=1730&cache=v2)\n##### Filter栏\n可以对元素的样式进行筛选，强制状态，切换class和增加class\n\n过滤操作\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6c571133-c5d8-4668-ad3a-e6c2c4b5384a/ia_10041.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120619Z&X-Amz-Expires=86400&X-Amz-Signature=22e7c527b96072eee3d67dd6278fae3cfd9c4605df22e85f99dc7b821ce83387&X-Amz-SignedHeaders=host)\n\n强制状态，和右键菜单的区别就是在这里还可以直接看到作用的样式\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/4200c4bc-a027-4840-bfef-7add58ee8762/ia_10042.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=d36d0b6cc601e152fca3aff9df5aaadabd888e1381f9ed723a5b2ca9f4e42657&X-Amz-SignedHeaders=host)\n\n切换、增加class\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/23556037-c6e6-4827-92a6-eb894dbd6fb5/ia_10043.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=93525c01b0c6689147bc5bf224e011b1c748ce422e6fcb31fdc60f9d7a941249&X-Amz-SignedHeaders=host)\n\n增加样式（最右侧）\n\n此处的添加可以下拉添加到已经存在的class中，或者仅仅在开发者工具中\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/57c5cc31-0928-45ba-8091-54aca212a519/ia_10044.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=c220ce054a171621e63b1ee0851664c9fa1db241453cb2053f80a458ffa88bf1&X-Amz-SignedHeaders=host)\n\n##### 样式操作栏\n选中一个元素可以出现一下的样式操作面板\n###### 样式操作栏概览\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F29761155-5970-42ef-bdbf-b2ff19d03b0a%2Fia_10045.png?table=block&id=d9ea30c7-1ae4-42e3-807e-5dc379c5a3ba&width=930&cache=v2)\n- 1：元素行内样式\n- 2：元素受class影响的样式\n- 3：浏览器默认的样式\n- 4：继承的样式，并且有标出继承自何处\n###### 操作细节\n- 右下角可以新增**文本阴影**，**盒子阴影**，**文字淹死**，**背景色**，**权重更高的class**\n- 右上角有显示具体的文件地址\n- 单击可以新增css的属性，编辑的时候会有提示\n- 双击可以款速选中\n- 前面的checkbox可以切换此条样式的作用\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/7833da09-ee99-427b-8f54-31db96b9a7b8/ia_10046.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120615Z&X-Amz-Expires=86400&X-Amz-Signature=1053b1d951b4d919327d8cf4142f5244d2e54dca9e80245d761f42a78a0f6b38&X-Amz-SignedHeaders=host)\n\n颜色选择工具\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb0011334-8bb5-489b-8146-8aed9b0f548e%2Fia_10047.png?table=block&id=6ff8e9c9-a79f-4d4b-a504-a0e785ddafba&width=500&cache=v2)\n文本阴影编辑\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F913f54a6-f09e-4210-92dc-182e1d47e9d8%2Fia_10048.png?table=block&id=abdc5b16-8f01-44cf-b670-b28a15d69327&width=510&cache=v2)\nbox-shadow工具\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2bc54da0-29fb-476c-a895-87632e76cdf2%2Fia_10049.png?table=block&id=b012611d-b88a-4add-9ebf-5cecc126aa34&width=510&cache=v2)\n##### 盒模型栏 \n见Computed面板\n\n\n#### Computed \n展示当前实际作用在元素的盒模型\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F1592f5fa-6395-4939-87a8-5d33df37cf10%2Fia_10050.png?table=block&id=db4c5abc-2d89-4477-8156-a992a48c53c2&width=920&cache=v2)\n\n\n\n一共有三个部分：盒模型，作用样式列表，字体加载\n##### 盒模型\n展示当前元素的position，margin，padding，border值，在不同的边距上面hover元素会对应的高亮。\n\n直接双击值可以直接修改。\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/54440e78-cfb4-4433-8067-ea3184f30786/ia_10051.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=3934510ac0c579649f51e849766a1fa68b3155879034b73fa6ecd2d8ec71839a&X-Amz-SignedHeaders=host)\n##### 作用样式列表\n列出作用在元素的列表，可以切换是否展示默认的样式，可以进行filter（同Styles Filter）\n\n##### 字体加载\n展示字体加载情况\n\n\n#### Event Listeners \n [练习demo](https://jd4oz.csb.app/)\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F0a6e8bef-7d15-445d-91f3-013bc0c922b3%2Fia_10052.png?table=block&id=2442ce8d-c0fa-45ad-80c8-8eefb555161e&width=1340&cache=v2)\n从左到右，分别为\n- 刷新\n- 是否显示父元素及祖先元素的事件\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/25296b3e-b51e-47f4-a524-54fe08ef7307/ia_10053.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=55d6914627194e3a2173991e2fc55eae7b24047f0cb4f4c78f173f15e752b801&X-Amz-SignedHeaders=host)\n\n- 事件监听类型选择（被动类型和非阻塞类型）\n\n Passive event listeners:[**提升页面滑动的流畅度**](https://zhuanlan.zhihu.com/p/24555031)\n\n- 框架绑定的事件监听 \n\nresolve event listeners bound with framework是否看到的是原始的代码\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/13fefdbc-9790-4b93-9ae3-b205285e4744/ia_10054.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=0713760ed0d6d4d93743e6ed99c506b007347fb82d1eb41ec88e287b1ee5b6c6&X-Amz-SignedHeaders=host)\n\n\n下面就是绑定元素和具体的代码位置，key是绑定事件名,点击remove可以解绑对应的事件。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc0b06af8-617b-40d6-8c58-1de49afc19c5%2Fia_10055.png?table=block&id=f908f270-1246-4d13-ba60-317ecc1e1e21&width=770&cache=v2)\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/73cd58a7-6f8d-444e-bfbc-6c7c1f179897/ia_10056.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=22d750e3d75f5113498278d7c59fe5a13277f30aa5bb9948c41298e290eb477c&X-Amz-SignedHeaders=host)\n\n\n#### DOM Breakpoints \n展示出在右键菜单中所打的断点\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/71ce8ed2-9dd0-4b6d-8168-c62791ad0e0b/ia_10057.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=acaf0e19e1ebc918939f762d01081a281d1588310aba04bf112e759332fa0d10&X-Amz-SignedHeaders=host)\n\n#### Properties \n展示所选中元素的各种属性\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F45431f4e-b5a5-44b1-b37b-d7ae3620ac0f%2Fia_10058.png?table=block&id=d2cb1394-a07e-464e-ad0d-552886f2b3ad&width=1620&cache=v2)\n如图列举出了当前节点的：\n- img#hplogo的属性\n- [图片元素的属性](https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLImageElement)\n- [元素的属性](https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement)\n- [Node的属性](https://developer.mozilla.org/zh-CN/docs/Web/API/Node)\n- [EventTarget的属性](https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget)\n- [Object的属性](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object)\n\n如果有需要就可以展开详细查看\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd0fe2a65-8198-4724-802b-8c55161ba1ca%2Fia_10059.png?table=block&id=8925aad2-04cf-4275-88dd-539ad58c108c&width=1320&cache=v2)\n\n\n#### Accessibility\n可访问性，[计算机辅助功能](https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BE%85%E5%8A%A9%E5%8A%9F%E8%83%BD)、[无障碍访问](https://developer.mozilla.org/zh-CN/docs/Web/Accessibility/ARIA)\n\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F01540e2a-37d6-4099-a905-4dbba2e902e0%2Fia_10060.png?table=block&id=b97767e2-1016-42c4-af21-d55eeddfb728&width=3560&cache=v2)\n\n从上往下依次为：\n- 可访问树\n\n可访问性树是DOM树的子集。它仅包含DOM树中与在屏幕阅读器中显示页面内容相关且有用的元素。\n- 可访问属性\n\nARIA属性可确保屏幕阅读器拥有他们需要的所有信息，以正确表示页面的内容\n- 最终渲染的属性，计算的可访问性属性\n\n### 结语\n以上，就是Chrome Elements面板的全部内容，如有错误，还望各位看官斧正。\n\n预告：Chrome Console面板进行中\n","source":"_posts/Chrome-elements.md","raw":"---\ntitle: Chrome Elements面板解析\ntags:\n  - Chrome\nabbrlink: 9430c0ea\ndate: 2020-05-05 11:00:03\n---\n\n### Chrome开发者工具的打开方式\n\n在开始面板分析之前，说下DevTool的打开方式。\n\n- 右键Inspect(Ctrl+Shift+I)\n- F12打开(或者光标放在地址栏F12打开)\n- Menu -> More tools -> Developer Tools\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F88d8eafe-f628-423c-b630-eb3b93d20db7%2Fia_10006.png?table=block&id=587d28c2-79d9-41bc-9709-90aacfad0854&width=1420&cache=v2)\n<!-- more -->\n### 初识面板\n在打DevTool之后选择Elements就可以打开Elements面板\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff0903299-e588-4f3a-983e-3a520dcc4db0%2Fia_10007.png?table=block&id=37e30b2e-51f3-4be8-8bd1-ab1a14b88ec7&width=3840&cache=v2)\n\n#### 面板分析\n\n最左侧面板为实际网页；在右侧的面板中，主要分为两部分，一部分是左侧的DOM Tree结构，右侧则是属性的子面板。\n\n### DOM面板使用方法\n#### 选择元素\n\n选择元素之后，右侧的DOM Tree面板会高亮此元素，底部会显示当前的DOM元素的路径，属性子面板也会展示该元素的属性。\n\n选择元素的方式有几种：\n- 在元素上右键审查\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff0a0107c-0dec-46a4-8713-2385c19262b2%2Fia_10008.png?table=block&id=5aa67908-cfab-4d75-b0db-eebd980bfcff&width=1490&cache=v2)\n\n- 使用选择工具在页面审查\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6dca281a-bfb0-4cb9-8434-efc62c7643b6%2Fia_10010.png?table=block&id=6ee4ebd3-7cda-4bf4-949e-34f05ae4c9bf&width=2910&cache=v2)\n- 在DOM Tree面板hover选中元素。此时两边的显示是及时联动的，可以及时观察，底部显示了DOM元素路径。\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F5efa9cc2-9b77-4a68-95c2-9166c1e13749%2Fia_10011.png?table=block&id=fb695df0-5f43-4677-a29d-4a966c00763b&width=2550&cache=v2)\n\n\n在元素选中之后，DOM Tree会呈现高亮状态，hover的时候在网页的实际视图也会呈现高亮。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcd43f1f3-7988-4472-af56-0b693a804b06%2FUntitled.png?table=block&id=f15d48f3-37db-423a-b6da-115223fbc456&width=2550&cache=v2)\n#### 切换元素\n在选择元素之后，可以通过键盘的**上下键**来进行上一级和下一级的选择，**左右键**可以对这个DOM节点进行展开和闭合。\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/e3e7ebe1-bd38-43bc-867a-102547d910e0/ia_10012.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120609Z&X-Amz-Expires=86400&X-Amz-Signature=c9e8bbb313c47bcaf7543c255360b562e2e624ff1bc2b43f0e81a785074bff41&X-Amz-SignedHeaders=host)\n同时，在选择了元素之后，可以直接输入$0，打印当前的元素。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4106546d-0cca-44a4-92e8-6163b0d41e91%2Fia_10013.png?table=block&id=6571821c-4275-430e-bc76-e18be5b3fb7e&width=3270&cache=v2)\n\n#### 基本编辑操作\n所有的属性编辑之后再网页都可以及时看到效果。\n##### 文本编辑\n在对应的文本上面双击可以快速选择属性，进行修改。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd5d4d239-bf16-46a0-afe3-cc196462f82f%2Fia_10014.png?table=block&id=542d3d9b-21e5-4ac7-813f-aef33e997954&width=2170&cache=v2)\n##### 属性编辑\n\n在对应的属性上面双击可以快速选择属性，进行修改。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F57890fdd-ba02-4078-a4a3-491981f1aa84%2Fia_10015.png?table=block&id=87e7e9e3-a09c-414d-bd9b-498ca8cb4144&width=1320&cache=v2)\n\n##### 元素拖拽\n选中的元素右键单击按住不放可以拖拽，DOM Tree的结构顺序被改变。\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/7baa41bd-c550-49b1-b463-f25b51450f5e/ia_10016.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120609Z&X-Amz-Expires=86400&X-Amz-Signature=a2bc98ddc3610daf6f87681a690986097861a06620fdf7972bff225d18b5cded&X-Amz-SignedHeaders=host)\n##### 元素隐藏、删除，恢复\n选中元素，按**H**键（英文输入模式下）可以切换元素的显隐，**delete**键可以直接删除DOM节点，**Ctrl+Z**可以恢复上一步的操作。\n- 显隐切换\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1c8d429c-8ec6-44fc-a379-94125b5c83dd/ia_10017.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120621Z&X-Amz-Expires=86400&X-Amz-Signature=3892966e9031bdbf6a649af02acf584203811655e3359234eafe3b206e4795f0&X-Amz-SignedHeaders=host)\n- 删除和恢复\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1efa7f5c-5c7c-4742-a979-1d9b097c9e01/ia_10018.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=eb327f563c63beaa8cc8bf82350c54cb0149fc32d2ccfde7f1530c542dceaafa&X-Amz-SignedHeaders=host)\n\n\n#### hover效果\n##### hover\nhover的时候，网页内容会随鼠标位置联动，同时如果是图片元素会显示图片的缩略图和图片地址。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6c71becd-7a80-48dd-84c2-ddfdb39ebbdc%2Fia_10019.png?table=block&id=5ddafd7b-228c-4914-ab1c-19b0a9756707&width=3270&cache=v2)\n#### 右键菜单\n当我们在DOM tree面板对元素右键的的时候会显示右键菜单。\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F65184f9a-0e24-4a94-b98f-64915a2a1d92%2Fia_10020.png?table=block&id=15c35207-cf3d-4b3b-8ef5-9f1bd4922ea4&width=710&cache=v2)\n\n接下来我们将对右键菜单一一解析。\n##### Reveal in Source panel 在资源面板显示（图片、音视频等资源会显示）\n##### Open in new tab 在新窗口打开资源（图片、音视频等资源会显示）\n##### Add attribute 为当前元素添加属性\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b09310a5-21bc-47ee-9144-b63bc4459ca7/ia_10021.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=81189b4c1b749fc133306a4c66dce059829a65cad82ff113303b34a862378c0a&X-Amz-SignedHeaders=host)\n\n##### Edit as HTML 以HTML方式编辑当前元素\n\n点击其他地方，编辑区域失去焦点就会保存\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/85345d23-ee9d-4360-804a-fd084ddc3fbb/ia_10022.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=f3fae309fbaef6b7db6a3e0c640d6e321c6e6cf2be3a70928c73b5eece811bc2&X-Amz-SignedHeaders=host)\n\n##### Delete Element 删除当前的元素，和键盘的Delete一样\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/efd268cd-4997-4531-86e9-a3cda929c3b6/ia_10023.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120609Z&X-Amz-Expires=86400&X-Amz-Signature=722d9ef878b5e7b7e89f7986e0853bc67a5377ea47fdf6248c6424a75c268c3d&X-Amz-SignedHeaders=host)\n\n##### Copy复制\n  ###### Cut element 剪切元素\n  **粘贴的时候原来元素会消失**\n  \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/72621a64-e563-4a71-8801-d704a9dbfe4b/ia_10024.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=335a92f43c280685461d4116bce16a1bf8384e12f707e8409132db7cc525b61a&X-Amz-SignedHeaders=host)\n\n  ###### Copy element 复制元素\n   **粘贴的时候原来元素不会消失**\n   \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/81d8d3ca-b889-4e8d-9f43-42673f2adfea/ia_10025.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=0437d6c12360e9a6edf9be25b1d6e496b46c2abde75510d02f441a4474484714&X-Amz-SignedHeaders=host)\n\n  ###### Paste element 粘贴元素（在已复制的情况）\n  \n  粘贴操作\n  ###### Copy outerHTML 复制序列化的HTML片段（[outerHTML](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/outerHTML)）\n  \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/cb7c71fc-02b3-49f1-9d59-c7f4ca409407/ia_10026.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=80744687ba931e5bdcbe0da088c6210c630fd36d872ca7cf5d3a76f1249cfab0&X-Amz-SignedHeaders=host)\n\n  ###### Copy selector 复制选择器（可以直接放到选择语句中使用）\n  \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/ff4cb4d4-a1e5-4aa7-a477-d0dfe5ad4449/ia_10027.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=6eecb7f0fc03e792d1f2c7974364d59dcb2e299c71d0bddf816695b260202755&X-Amz-SignedHeaders=host)\n\n  ###### Copy JS path 复制JS路径，可以直接使用\n  \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f7bf4c8a-4845-4b2c-b01e-4fbcbaabb7a9/ia_10028.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=4e12ccd9b04b8d21da12ce768078d1e6688c6ac2f5a6d1115e53b9c25dccb8f1&X-Amz-SignedHeaders=host)\n\n  ###### Copy styles 复制作用在此元素的样式\n  \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/af60e7fc-d9cb-43e1-9d9e-83ec0cfa67bc/ia_10029.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=a6c31a0cdf67b1f212622936241650df50422698b3ac13dc69879040297a5cef&X-Amz-SignedHeaders=host)\n\n  ###### Copy XPath 复制元素的XPath\n  \n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/c64d41df-962e-455c-b46d-6019337faad5/ia_10030.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=b8d65dcd49ffcd70d30647872857cb2714d0573243d44f62a2114da086363dc3&X-Amz-SignedHeaders=host)\n  ###### Copy full XPath 复制元素的完整XPath\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6f6c12a3-b9cf-4afa-8823-20e4b3747e78/ia_10031.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=fd51282ee45f7e30d8f1baeba04f056247d8dda6cca23ad7eb4427b0972329f0&X-Amz-SignedHeaders=host)\n  ###### Copy link address 复制当前的连接地址（在图片等媒体元素上会显示）\n##### Force state 强制当前元素的状态 \n一共有五种\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4b2388fb-3345-4bcc-b7af-9c42df923d65%2Fia_10032.png?table=block&id=565b793b-5e90-430d-8432-6449d2469f85&width=650&cache=v2)\n(附： [全部伪类](https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes)、 [简单的demo](https://codesandbox.io/s/crimson-water-3phqw))\n  1.:active 激活状态  \n  2.:hover 虚指状态  \n  3.:focus 获得焦点状态  \n  4.:visited 已访问过的链接状态  \n  5.:focus-within 元素获得焦点或该元素的后代元素获得焦点的状态\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/35bb120a-5a45-4756-8991-266ab0b700e3/ia_10033.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120615Z&X-Amz-Expires=86400&X-Amz-Signature=e72193da02d811015b5ae94a4019a2272fc84b6f844c6ca11506a22e6c1ac26e&X-Amz-SignedHeaders=host)\n\n##### Brake on 断点\n(附：  [简单的demo](https://fewn8.csb.app/))\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F15e49d4b-e86d-49d9-80e5-e8f519332969%2Fia_10034.png?table=block&id=054d2e73-775b-48bd-8142-552ce288a545&width=850&cache=v2)\n\n一共有三种可以为**JS**修改DOM的情况打断点：\n\n1.subtree modification 子节点修改\n\n2.attribute modification 属性修改\n\n3.node removal 节点移除\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/18faba51-01a1-493e-a9df-03a0c8a06d5e/ia_10035.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=41a35647e75482fded2067ebcebbc91551ef4f46cbaf7f82926fd66eda59c55e&X-Amz-SignedHeaders=host)\n\n##### expand recursively 将此节点的每个子节点展开\n##### collapse children 将子节点全部折叠\n\n一起演示：\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/32ae82f6-ebbd-4dfd-a471-e8501bd83980/ia_10036.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120619Z&X-Amz-Expires=86400&X-Amz-Signature=133b4d91526eae6ea75531d91a27b2f858615f2937c90bc4431d029f57fd7d47&X-Amz-SignedHeaders=host)\n\n##### Scroll into view 将元素滚动到视图中\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/d0799c1b-fd0a-4010-9556-cf0164dd8148/ia_10037.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=c8c4fd7b3bb6eb785e3d909044d2f8e7ac345930c3fe9443c35c9be089bbb287&X-Amz-SignedHeaders=host)\n\n##### Focus 将在视图中高亮选择的元素，但是不一定在视图显示\n##### Store as global variable 将此元素存储为全局变量\n\n接下来就可以像操作JS一样直接操作元素。\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/278015cc-1a16-4bad-92c2-4f5597e57e09/ia_10038.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=77ba36a28c3d0a1a00916e1d76991416085da0b59849f993b845d0ed92fbf538&X-Amz-SignedHeaders=host)\n\n### 属性子面板使用方法\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F16f5024e-d6e8-4b59-9b9f-3aa7e3a00a58%2Fia_10039.png?table=block&id=25087a6c-1a18-4a68-b59a-9dc85f76adc9&width=1090&cache=v2)\n#### Styles \n当我们选中元素的时候，右侧子面板就会显示当前元素的Styles面板。这个面板主要有三个部分**Filter栏**、**样式操作栏**、**盒模型栏**\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F3297595b-b38a-4e1c-8d14-1ad328184c7f%2Fia_10040.png?table=block&id=152f1161-accc-4cd6-b02b-f20e173aac09&width=1730&cache=v2)\n##### Filter栏\n可以对元素的样式进行筛选，强制状态，切换class和增加class\n\n过滤操作\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6c571133-c5d8-4668-ad3a-e6c2c4b5384a/ia_10041.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120619Z&X-Amz-Expires=86400&X-Amz-Signature=22e7c527b96072eee3d67dd6278fae3cfd9c4605df22e85f99dc7b821ce83387&X-Amz-SignedHeaders=host)\n\n强制状态，和右键菜单的区别就是在这里还可以直接看到作用的样式\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/4200c4bc-a027-4840-bfef-7add58ee8762/ia_10042.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=d36d0b6cc601e152fca3aff9df5aaadabd888e1381f9ed723a5b2ca9f4e42657&X-Amz-SignedHeaders=host)\n\n切换、增加class\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/23556037-c6e6-4827-92a6-eb894dbd6fb5/ia_10043.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=93525c01b0c6689147bc5bf224e011b1c748ce422e6fcb31fdc60f9d7a941249&X-Amz-SignedHeaders=host)\n\n增加样式（最右侧）\n\n此处的添加可以下拉添加到已经存在的class中，或者仅仅在开发者工具中\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/57c5cc31-0928-45ba-8091-54aca212a519/ia_10044.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=c220ce054a171621e63b1ee0851664c9fa1db241453cb2053f80a458ffa88bf1&X-Amz-SignedHeaders=host)\n\n##### 样式操作栏\n选中一个元素可以出现一下的样式操作面板\n###### 样式操作栏概览\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F29761155-5970-42ef-bdbf-b2ff19d03b0a%2Fia_10045.png?table=block&id=d9ea30c7-1ae4-42e3-807e-5dc379c5a3ba&width=930&cache=v2)\n- 1：元素行内样式\n- 2：元素受class影响的样式\n- 3：浏览器默认的样式\n- 4：继承的样式，并且有标出继承自何处\n###### 操作细节\n- 右下角可以新增**文本阴影**，**盒子阴影**，**文字淹死**，**背景色**，**权重更高的class**\n- 右上角有显示具体的文件地址\n- 单击可以新增css的属性，编辑的时候会有提示\n- 双击可以款速选中\n- 前面的checkbox可以切换此条样式的作用\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/7833da09-ee99-427b-8f54-31db96b9a7b8/ia_10046.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120615Z&X-Amz-Expires=86400&X-Amz-Signature=1053b1d951b4d919327d8cf4142f5244d2e54dca9e80245d761f42a78a0f6b38&X-Amz-SignedHeaders=host)\n\n颜色选择工具\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb0011334-8bb5-489b-8146-8aed9b0f548e%2Fia_10047.png?table=block&id=6ff8e9c9-a79f-4d4b-a504-a0e785ddafba&width=500&cache=v2)\n文本阴影编辑\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F913f54a6-f09e-4210-92dc-182e1d47e9d8%2Fia_10048.png?table=block&id=abdc5b16-8f01-44cf-b670-b28a15d69327&width=510&cache=v2)\nbox-shadow工具\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2bc54da0-29fb-476c-a895-87632e76cdf2%2Fia_10049.png?table=block&id=b012611d-b88a-4add-9ebf-5cecc126aa34&width=510&cache=v2)\n##### 盒模型栏 \n见Computed面板\n\n\n#### Computed \n展示当前实际作用在元素的盒模型\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F1592f5fa-6395-4939-87a8-5d33df37cf10%2Fia_10050.png?table=block&id=db4c5abc-2d89-4477-8156-a992a48c53c2&width=920&cache=v2)\n\n\n\n一共有三个部分：盒模型，作用样式列表，字体加载\n##### 盒模型\n展示当前元素的position，margin，padding，border值，在不同的边距上面hover元素会对应的高亮。\n\n直接双击值可以直接修改。\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/54440e78-cfb4-4433-8067-ea3184f30786/ia_10051.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=3934510ac0c579649f51e849766a1fa68b3155879034b73fa6ecd2d8ec71839a&X-Amz-SignedHeaders=host)\n##### 作用样式列表\n列出作用在元素的列表，可以切换是否展示默认的样式，可以进行filter（同Styles Filter）\n\n##### 字体加载\n展示字体加载情况\n\n\n#### Event Listeners \n [练习demo](https://jd4oz.csb.app/)\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F0a6e8bef-7d15-445d-91f3-013bc0c922b3%2Fia_10052.png?table=block&id=2442ce8d-c0fa-45ad-80c8-8eefb555161e&width=1340&cache=v2)\n从左到右，分别为\n- 刷新\n- 是否显示父元素及祖先元素的事件\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/25296b3e-b51e-47f4-a524-54fe08ef7307/ia_10053.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=55d6914627194e3a2173991e2fc55eae7b24047f0cb4f4c78f173f15e752b801&X-Amz-SignedHeaders=host)\n\n- 事件监听类型选择（被动类型和非阻塞类型）\n\n Passive event listeners:[**提升页面滑动的流畅度**](https://zhuanlan.zhihu.com/p/24555031)\n\n- 框架绑定的事件监听 \n\nresolve event listeners bound with framework是否看到的是原始的代码\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/13fefdbc-9790-4b93-9ae3-b205285e4744/ia_10054.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=0713760ed0d6d4d93743e6ed99c506b007347fb82d1eb41ec88e287b1ee5b6c6&X-Amz-SignedHeaders=host)\n\n\n下面就是绑定元素和具体的代码位置，key是绑定事件名,点击remove可以解绑对应的事件。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc0b06af8-617b-40d6-8c58-1de49afc19c5%2Fia_10055.png?table=block&id=f908f270-1246-4d13-ba60-317ecc1e1e21&width=770&cache=v2)\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/73cd58a7-6f8d-444e-bfbc-6c7c1f179897/ia_10056.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=22d750e3d75f5113498278d7c59fe5a13277f30aa5bb9948c41298e290eb477c&X-Amz-SignedHeaders=host)\n\n\n#### DOM Breakpoints \n展示出在右键菜单中所打的断点\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/71ce8ed2-9dd0-4b6d-8168-c62791ad0e0b/ia_10057.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=acaf0e19e1ebc918939f762d01081a281d1588310aba04bf112e759332fa0d10&X-Amz-SignedHeaders=host)\n\n#### Properties \n展示所选中元素的各种属性\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F45431f4e-b5a5-44b1-b37b-d7ae3620ac0f%2Fia_10058.png?table=block&id=d2cb1394-a07e-464e-ad0d-552886f2b3ad&width=1620&cache=v2)\n如图列举出了当前节点的：\n- img#hplogo的属性\n- [图片元素的属性](https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLImageElement)\n- [元素的属性](https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement)\n- [Node的属性](https://developer.mozilla.org/zh-CN/docs/Web/API/Node)\n- [EventTarget的属性](https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget)\n- [Object的属性](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object)\n\n如果有需要就可以展开详细查看\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd0fe2a65-8198-4724-802b-8c55161ba1ca%2Fia_10059.png?table=block&id=8925aad2-04cf-4275-88dd-539ad58c108c&width=1320&cache=v2)\n\n\n#### Accessibility\n可访问性，[计算机辅助功能](https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BE%85%E5%8A%A9%E5%8A%9F%E8%83%BD)、[无障碍访问](https://developer.mozilla.org/zh-CN/docs/Web/Accessibility/ARIA)\n\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F01540e2a-37d6-4099-a905-4dbba2e902e0%2Fia_10060.png?table=block&id=b97767e2-1016-42c4-af21-d55eeddfb728&width=3560&cache=v2)\n\n从上往下依次为：\n- 可访问树\n\n可访问性树是DOM树的子集。它仅包含DOM树中与在屏幕阅读器中显示页面内容相关且有用的元素。\n- 可访问属性\n\nARIA属性可确保屏幕阅读器拥有他们需要的所有信息，以正确表示页面的内容\n- 最终渲染的属性，计算的可访问性属性\n\n### 结语\n以上，就是Chrome Elements面板的全部内容，如有错误，还望各位看官斧正。\n\n预告：Chrome Console面板进行中\n","slug":"Chrome-elements","published":1,"updated":"2020-08-02T12:23:31.428Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnar0006vwtf911zcwhr","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:58 GMT+0800 (中国标准时间) --><h3 id=\"Chrome开发者工具的打开方式\"><a href=\"#Chrome开发者工具的打开方式\" class=\"headerlink\" title=\"Chrome开发者工具的打开方式\"></a>Chrome开发者工具的打开方式</h3><p>在开始面板分析之前，说下DevTool的打开方式。</p><ul><li>右键Inspect(Ctrl+Shift+I)</li><li>F12打开(或者光标放在地址栏F12打开)</li><li>Menu -&gt; More tools -&gt; Developer Tools</li></ul><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F88d8eafe-f628-423c-b630-eb3b93d20db7%2Fia_10006.png?table=block&id=587d28c2-79d9-41bc-9709-90aacfad0854&width=1420&cache=v2\" alt=\"\"></p><a id=\"more\"></a><h3 id=\"初识面板\"><a href=\"#初识面板\" class=\"headerlink\" title=\"初识面板\"></a>初识面板</h3><p>在打DevTool之后选择Elements就可以打开Elements面板<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff0903299-e588-4f3a-983e-3a520dcc4db0%2Fia_10007.png?table=block&id=37e30b2e-51f3-4be8-8bd1-ab1a14b88ec7&width=3840&cache=v2\" alt=\"\"></p><h4 id=\"面板分析\"><a href=\"#面板分析\" class=\"headerlink\" title=\"面板分析\"></a>面板分析</h4><p>最左侧面板为实际网页；在右侧的面板中，主要分为两部分，一部分是左侧的DOM Tree结构，右侧则是属性的子面板。</p><h3 id=\"DOM面板使用方法\"><a href=\"#DOM面板使用方法\" class=\"headerlink\" title=\"DOM面板使用方法\"></a>DOM面板使用方法</h3><h4 id=\"选择元素\"><a href=\"#选择元素\" class=\"headerlink\" title=\"选择元素\"></a>选择元素</h4><p>选择元素之后，右侧的DOM Tree面板会高亮此元素，底部会显示当前的DOM元素的路径，属性子面板也会展示该元素的属性。</p><p>选择元素的方式有几种：</p><ul><li>在元素上右键审查</li></ul><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff0a0107c-0dec-46a4-8713-2385c19262b2%2Fia_10008.png?table=block&id=5aa67908-cfab-4d75-b0db-eebd980bfcff&width=1490&cache=v2\" alt=\"\"></p><ul><li>使用选择工具在页面审查</li></ul><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6dca281a-bfb0-4cb9-8434-efc62c7643b6%2Fia_10010.png?table=block&id=6ee4ebd3-7cda-4bf4-949e-34f05ae4c9bf&width=2910&cache=v2\" alt=\"\"></p><ul><li>在DOM Tree面板hover选中元素。此时两边的显示是及时联动的，可以及时观察，底部显示了DOM元素路径。</li></ul><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F5efa9cc2-9b77-4a68-95c2-9166c1e13749%2Fia_10011.png?table=block&id=fb695df0-5f43-4677-a29d-4a966c00763b&width=2550&cache=v2\" alt=\"\"></p><p>在元素选中之后，DOM Tree会呈现高亮状态，hover的时候在网页的实际视图也会呈现高亮。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcd43f1f3-7988-4472-af56-0b693a804b06%2FUntitled.png?table=block&id=f15d48f3-37db-423a-b6da-115223fbc456&width=2550&cache=v2\" alt=\"\"></p><h4 id=\"切换元素\"><a href=\"#切换元素\" class=\"headerlink\" title=\"切换元素\"></a>切换元素</h4><p>在选择元素之后，可以通过键盘的<strong>上下键</strong>来进行上一级和下一级的选择，<strong>左右键</strong>可以对这个DOM节点进行展开和闭合。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/e3e7ebe1-bd38-43bc-867a-102547d910e0/ia_10012.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120609Z&X-Amz-Expires=86400&X-Amz-Signature=c9e8bbb313c47bcaf7543c255360b562e2e624ff1bc2b43f0e81a785074bff41&X-Amz-SignedHeaders=host\" alt=\"\"><br>同时，在选择了元素之后，可以直接输入$0，打印当前的元素。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4106546d-0cca-44a4-92e8-6163b0d41e91%2Fia_10013.png?table=block&id=6571821c-4275-430e-bc76-e18be5b3fb7e&width=3270&cache=v2\" alt=\"\"></p><h4 id=\"基本编辑操作\"><a href=\"#基本编辑操作\" class=\"headerlink\" title=\"基本编辑操作\"></a>基本编辑操作</h4><p>所有的属性编辑之后再网页都可以及时看到效果。</p><h5 id=\"文本编辑\"><a href=\"#文本编辑\" class=\"headerlink\" title=\"文本编辑\"></a>文本编辑</h5><p>在对应的文本上面双击可以快速选择属性，进行修改。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd5d4d239-bf16-46a0-afe3-cc196462f82f%2Fia_10014.png?table=block&id=542d3d9b-21e5-4ac7-813f-aef33e997954&width=2170&cache=v2\" alt=\"\"></p><h5 id=\"属性编辑\"><a href=\"#属性编辑\" class=\"headerlink\" title=\"属性编辑\"></a>属性编辑</h5><p>在对应的属性上面双击可以快速选择属性，进行修改。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F57890fdd-ba02-4078-a4a3-491981f1aa84%2Fia_10015.png?table=block&id=87e7e9e3-a09c-414d-bd9b-498ca8cb4144&width=1320&cache=v2\" alt=\"\"></p><h5 id=\"元素拖拽\"><a href=\"#元素拖拽\" class=\"headerlink\" title=\"元素拖拽\"></a>元素拖拽</h5><p>选中的元素右键单击按住不放可以拖拽，DOM Tree的结构顺序被改变。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/7baa41bd-c550-49b1-b463-f25b51450f5e/ia_10016.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120609Z&X-Amz-Expires=86400&X-Amz-Signature=a2bc98ddc3610daf6f87681a690986097861a06620fdf7972bff225d18b5cded&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"元素隐藏、删除，恢复\"><a href=\"#元素隐藏、删除，恢复\" class=\"headerlink\" title=\"元素隐藏、删除，恢复\"></a>元素隐藏、删除，恢复</h5><p>选中元素，按<strong>H</strong>键（英文输入模式下）可以切换元素的显隐，<strong>delete</strong>键可以直接删除DOM节点，<strong>Ctrl+Z</strong>可以恢复上一步的操作。</p><ul><li>显隐切换<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1c8d429c-8ec6-44fc-a379-94125b5c83dd/ia_10017.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120621Z&X-Amz-Expires=86400&X-Amz-Signature=3892966e9031bdbf6a649af02acf584203811655e3359234eafe3b206e4795f0&X-Amz-SignedHeaders=host\" alt=\"\"></li><li>删除和恢复</li></ul><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1efa7f5c-5c7c-4742-a979-1d9b097c9e01/ia_10018.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=eb327f563c63beaa8cc8bf82350c54cb0149fc32d2ccfde7f1530c542dceaafa&X-Amz-SignedHeaders=host\" alt=\"\"></p><h4 id=\"hover效果\"><a href=\"#hover效果\" class=\"headerlink\" title=\"hover效果\"></a>hover效果</h4><h5 id=\"hover\"><a href=\"#hover\" class=\"headerlink\" title=\"hover\"></a>hover</h5><p>hover的时候，网页内容会随鼠标位置联动，同时如果是图片元素会显示图片的缩略图和图片地址。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6c71becd-7a80-48dd-84c2-ddfdb39ebbdc%2Fia_10019.png?table=block&id=5ddafd7b-228c-4914-ab1c-19b0a9756707&width=3270&cache=v2\" alt=\"\"></p><h4 id=\"右键菜单\"><a href=\"#右键菜单\" class=\"headerlink\" title=\"右键菜单\"></a>右键菜单</h4><p>当我们在DOM tree面板对元素右键的的时候会显示右键菜单。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F65184f9a-0e24-4a94-b98f-64915a2a1d92%2Fia_10020.png?table=block&id=15c35207-cf3d-4b3b-8ef5-9f1bd4922ea4&width=710&cache=v2\" alt=\"\"></p><p>接下来我们将对右键菜单一一解析。</p><h5 id=\"Reveal-in-Source-panel-在资源面板显示（图片、音视频等资源会显示）\"><a href=\"#Reveal-in-Source-panel-在资源面板显示（图片、音视频等资源会显示）\" class=\"headerlink\" title=\"Reveal in Source panel 在资源面板显示（图片、音视频等资源会显示）\"></a>Reveal in Source panel 在资源面板显示（图片、音视频等资源会显示）</h5><h5 id=\"Open-in-new-tab-在新窗口打开资源（图片、音视频等资源会显示）\"><a href=\"#Open-in-new-tab-在新窗口打开资源（图片、音视频等资源会显示）\" class=\"headerlink\" title=\"Open in new tab 在新窗口打开资源（图片、音视频等资源会显示）\"></a>Open in new tab 在新窗口打开资源（图片、音视频等资源会显示）</h5><h5 id=\"Add-attribute-为当前元素添加属性\"><a href=\"#Add-attribute-为当前元素添加属性\" class=\"headerlink\" title=\"Add attribute 为当前元素添加属性\"></a>Add attribute 为当前元素添加属性</h5><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b09310a5-21bc-47ee-9144-b63bc4459ca7/ia_10021.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=81189b4c1b749fc133306a4c66dce059829a65cad82ff113303b34a862378c0a&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"Edit-as-HTML-以HTML方式编辑当前元素\"><a href=\"#Edit-as-HTML-以HTML方式编辑当前元素\" class=\"headerlink\" title=\"Edit as HTML 以HTML方式编辑当前元素\"></a>Edit as HTML 以HTML方式编辑当前元素</h5><p>点击其他地方，编辑区域失去焦点就会保存<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/85345d23-ee9d-4360-804a-fd084ddc3fbb/ia_10022.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=f3fae309fbaef6b7db6a3e0c640d6e321c6e6cf2be3a70928c73b5eece811bc2&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"Delete-Element-删除当前的元素，和键盘的Delete一样\"><a href=\"#Delete-Element-删除当前的元素，和键盘的Delete一样\" class=\"headerlink\" title=\"Delete Element 删除当前的元素，和键盘的Delete一样\"></a>Delete Element 删除当前的元素，和键盘的Delete一样</h5><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/efd268cd-4997-4531-86e9-a3cda929c3b6/ia_10023.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120609Z&X-Amz-Expires=86400&X-Amz-Signature=722d9ef878b5e7b7e89f7986e0853bc67a5377ea47fdf6248c6424a75c268c3d&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"Copy复制\"><a href=\"#Copy复制\" class=\"headerlink\" title=\"Copy复制\"></a>Copy复制</h5><h6 id=\"Cut-element-剪切元素\"><a href=\"#Cut-element-剪切元素\" class=\"headerlink\" title=\"Cut element 剪切元素\"></a>Cut element 剪切元素</h6><p><strong>粘贴的时候原来元素会消失</strong></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/72621a64-e563-4a71-8801-d704a9dbfe4b/ia_10024.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=335a92f43c280685461d4116bce16a1bf8384e12f707e8409132db7cc525b61a&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-element-复制元素\"><a href=\"#Copy-element-复制元素\" class=\"headerlink\" title=\"Copy element 复制元素\"></a>Copy element 复制元素</h6><p><strong>粘贴的时候原来元素不会消失</strong></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/81d8d3ca-b889-4e8d-9f43-42673f2adfea/ia_10025.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=0437d6c12360e9a6edf9be25b1d6e496b46c2abde75510d02f441a4474484714&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Paste-element-粘贴元素（在已复制的情况）\"><a href=\"#Paste-element-粘贴元素（在已复制的情况）\" class=\"headerlink\" title=\"Paste element 粘贴元素（在已复制的情况）\"></a>Paste element 粘贴元素（在已复制的情况）</h6><p>粘贴操作</p><h6 id=\"Copy-outerHTML-复制序列化的HTML片段（outerHTML）\"><a href=\"#Copy-outerHTML-复制序列化的HTML片段（outerHTML）\" class=\"headerlink\" title=\"Copy outerHTML 复制序列化的HTML片段（outerHTML）\"></a>Copy outerHTML 复制序列化的HTML片段（<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/outerHTML\" target=\"_blank\" rel=\"noopener\">outerHTML</a>）</h6><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/cb7c71fc-02b3-49f1-9d59-c7f4ca409407/ia_10026.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=80744687ba931e5bdcbe0da088c6210c630fd36d872ca7cf5d3a76f1249cfab0&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-selector-复制选择器（可以直接放到选择语句中使用）\"><a href=\"#Copy-selector-复制选择器（可以直接放到选择语句中使用）\" class=\"headerlink\" title=\"Copy selector 复制选择器（可以直接放到选择语句中使用）\"></a>Copy selector 复制选择器（可以直接放到选择语句中使用）</h6><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/ff4cb4d4-a1e5-4aa7-a477-d0dfe5ad4449/ia_10027.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=6eecb7f0fc03e792d1f2c7974364d59dcb2e299c71d0bddf816695b260202755&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-JS-path-复制JS路径，可以直接使用\"><a href=\"#Copy-JS-path-复制JS路径，可以直接使用\" class=\"headerlink\" title=\"Copy JS path 复制JS路径，可以直接使用\"></a>Copy JS path 复制JS路径，可以直接使用</h6><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f7bf4c8a-4845-4b2c-b01e-4fbcbaabb7a9/ia_10028.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=4e12ccd9b04b8d21da12ce768078d1e6688c6ac2f5a6d1115e53b9c25dccb8f1&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-styles-复制作用在此元素的样式\"><a href=\"#Copy-styles-复制作用在此元素的样式\" class=\"headerlink\" title=\"Copy styles 复制作用在此元素的样式\"></a>Copy styles 复制作用在此元素的样式</h6><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/af60e7fc-d9cb-43e1-9d9e-83ec0cfa67bc/ia_10029.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=a6c31a0cdf67b1f212622936241650df50422698b3ac13dc69879040297a5cef&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-XPath-复制元素的XPath\"><a href=\"#Copy-XPath-复制元素的XPath\" class=\"headerlink\" title=\"Copy XPath 复制元素的XPath\"></a>Copy XPath 复制元素的XPath</h6><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/c64d41df-962e-455c-b46d-6019337faad5/ia_10030.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=b8d65dcd49ffcd70d30647872857cb2714d0573243d44f62a2114da086363dc3&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-full-XPath-复制元素的完整XPath\"><a href=\"#Copy-full-XPath-复制元素的完整XPath\" class=\"headerlink\" title=\"Copy full XPath 复制元素的完整XPath\"></a>Copy full XPath 复制元素的完整XPath</h6><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6f6c12a3-b9cf-4afa-8823-20e4b3747e78/ia_10031.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=fd51282ee45f7e30d8f1baeba04f056247d8dda6cca23ad7eb4427b0972329f0&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-link-address-复制当前的连接地址（在图片等媒体元素上会显示）\"><a href=\"#Copy-link-address-复制当前的连接地址（在图片等媒体元素上会显示）\" class=\"headerlink\" title=\"Copy link address 复制当前的连接地址（在图片等媒体元素上会显示）\"></a>Copy link address 复制当前的连接地址（在图片等媒体元素上会显示）</h6><h5 id=\"Force-state-强制当前元素的状态\"><a href=\"#Force-state-强制当前元素的状态\" class=\"headerlink\" title=\"Force state 强制当前元素的状态\"></a>Force state 强制当前元素的状态</h5><p>一共有五种<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4b2388fb-3345-4bcc-b7af-9c42df923d65%2Fia_10032.png?table=block&id=565b793b-5e90-430d-8432-6449d2469f85&width=650&cache=v2\" alt=\"\"><br>(附： <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes\" target=\"_blank\" rel=\"noopener\">全部伪类</a>、 <a href=\"https://codesandbox.io/s/crimson-water-3phqw\" target=\"_blank\" rel=\"noopener\">简单的demo</a>)<br>1.:active 激活状态<br>2.:hover 虚指状态<br>3.:focus 获得焦点状态<br>4.:visited 已访问过的链接状态<br>5.:focus-within 元素获得焦点或该元素的后代元素获得焦点的状态<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/35bb120a-5a45-4756-8991-266ab0b700e3/ia_10033.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120615Z&X-Amz-Expires=86400&X-Amz-Signature=e72193da02d811015b5ae94a4019a2272fc84b6f844c6ca11506a22e6c1ac26e&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"Brake-on-断点\"><a href=\"#Brake-on-断点\" class=\"headerlink\" title=\"Brake on 断点\"></a>Brake on 断点</h5><p>(附： <a href=\"https://fewn8.csb.app/\" target=\"_blank\" rel=\"noopener\">简单的demo</a>)</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F15e49d4b-e86d-49d9-80e5-e8f519332969%2Fia_10034.png?table=block&id=054d2e73-775b-48bd-8142-552ce288a545&width=850&cache=v2\" alt=\"\"></p><p>一共有三种可以为<strong>JS</strong>修改DOM的情况打断点：</p><p>1.subtree modification 子节点修改</p><p>2.attribute modification 属性修改</p><p>3.node removal 节点移除<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/18faba51-01a1-493e-a9df-03a0c8a06d5e/ia_10035.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=41a35647e75482fded2067ebcebbc91551ef4f46cbaf7f82926fd66eda59c55e&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"expand-recursively-将此节点的每个子节点展开\"><a href=\"#expand-recursively-将此节点的每个子节点展开\" class=\"headerlink\" title=\"expand recursively 将此节点的每个子节点展开\"></a>expand recursively 将此节点的每个子节点展开</h5><h5 id=\"collapse-children-将子节点全部折叠\"><a href=\"#collapse-children-将子节点全部折叠\" class=\"headerlink\" title=\"collapse children 将子节点全部折叠\"></a>collapse children 将子节点全部折叠</h5><p>一起演示：<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/32ae82f6-ebbd-4dfd-a471-e8501bd83980/ia_10036.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120619Z&X-Amz-Expires=86400&X-Amz-Signature=133b4d91526eae6ea75531d91a27b2f858615f2937c90bc4431d029f57fd7d47&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"Scroll-into-view-将元素滚动到视图中\"><a href=\"#Scroll-into-view-将元素滚动到视图中\" class=\"headerlink\" title=\"Scroll into view 将元素滚动到视图中\"></a>Scroll into view 将元素滚动到视图中</h5><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/d0799c1b-fd0a-4010-9556-cf0164dd8148/ia_10037.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=c8c4fd7b3bb6eb785e3d909044d2f8e7ac345930c3fe9443c35c9be089bbb287&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"Focus-将在视图中高亮选择的元素，但是不一定在视图显示\"><a href=\"#Focus-将在视图中高亮选择的元素，但是不一定在视图显示\" class=\"headerlink\" title=\"Focus 将在视图中高亮选择的元素，但是不一定在视图显示\"></a>Focus 将在视图中高亮选择的元素，但是不一定在视图显示</h5><h5 id=\"Store-as-global-variable-将此元素存储为全局变量\"><a href=\"#Store-as-global-variable-将此元素存储为全局变量\" class=\"headerlink\" title=\"Store as global variable 将此元素存储为全局变量\"></a>Store as global variable 将此元素存储为全局变量</h5><p>接下来就可以像操作JS一样直接操作元素。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/278015cc-1a16-4bad-92c2-4f5597e57e09/ia_10038.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=77ba36a28c3d0a1a00916e1d76991416085da0b59849f993b845d0ed92fbf538&X-Amz-SignedHeaders=host\" alt=\"\"></p><h3 id=\"属性子面板使用方法\"><a href=\"#属性子面板使用方法\" class=\"headerlink\" title=\"属性子面板使用方法\"></a>属性子面板使用方法</h3><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F16f5024e-d6e8-4b59-9b9f-3aa7e3a00a58%2Fia_10039.png?table=block&id=25087a6c-1a18-4a68-b59a-9dc85f76adc9&width=1090&cache=v2\" alt=\"\"></p><h4 id=\"Styles\"><a href=\"#Styles\" class=\"headerlink\" title=\"Styles\"></a>Styles</h4><p>当我们选中元素的时候，右侧子面板就会显示当前元素的Styles面板。这个面板主要有三个部分<strong>Filter栏</strong>、<strong>样式操作栏</strong>、<strong>盒模型栏</strong></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F3297595b-b38a-4e1c-8d14-1ad328184c7f%2Fia_10040.png?table=block&id=152f1161-accc-4cd6-b02b-f20e173aac09&width=1730&cache=v2\" alt=\"\"></p><h5 id=\"Filter栏\"><a href=\"#Filter栏\" class=\"headerlink\" title=\"Filter栏\"></a>Filter栏</h5><p>可以对元素的样式进行筛选，强制状态，切换class和增加class</p><p>过滤操作<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6c571133-c5d8-4668-ad3a-e6c2c4b5384a/ia_10041.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120619Z&X-Amz-Expires=86400&X-Amz-Signature=22e7c527b96072eee3d67dd6278fae3cfd9c4605df22e85f99dc7b821ce83387&X-Amz-SignedHeaders=host\" alt=\"\"></p><p>强制状态，和右键菜单的区别就是在这里还可以直接看到作用的样式<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/4200c4bc-a027-4840-bfef-7add58ee8762/ia_10042.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=d36d0b6cc601e152fca3aff9df5aaadabd888e1381f9ed723a5b2ca9f4e42657&X-Amz-SignedHeaders=host\" alt=\"\"></p><p>切换、增加class<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/23556037-c6e6-4827-92a6-eb894dbd6fb5/ia_10043.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=93525c01b0c6689147bc5bf224e011b1c748ce422e6fcb31fdc60f9d7a941249&X-Amz-SignedHeaders=host\" alt=\"\"></p><p>增加样式（最右侧）</p><p>此处的添加可以下拉添加到已经存在的class中，或者仅仅在开发者工具中<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/57c5cc31-0928-45ba-8091-54aca212a519/ia_10044.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=c220ce054a171621e63b1ee0851664c9fa1db241453cb2053f80a458ffa88bf1&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"样式操作栏\"><a href=\"#样式操作栏\" class=\"headerlink\" title=\"样式操作栏\"></a>样式操作栏</h5><p>选中一个元素可以出现一下的样式操作面板</p><h6 id=\"样式操作栏概览\"><a href=\"#样式操作栏概览\" class=\"headerlink\" title=\"样式操作栏概览\"></a>样式操作栏概览</h6><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F29761155-5970-42ef-bdbf-b2ff19d03b0a%2Fia_10045.png?table=block&id=d9ea30c7-1ae4-42e3-807e-5dc379c5a3ba&width=930&cache=v2\" alt=\"\"></p><ul><li>1：元素行内样式</li><li>2：元素受class影响的样式</li><li>3：浏览器默认的样式</li><li>4：继承的样式，并且有标出继承自何处<h6 id=\"操作细节\"><a href=\"#操作细节\" class=\"headerlink\" title=\"操作细节\"></a>操作细节</h6></li><li>右下角可以新增<strong>文本阴影</strong>，<strong>盒子阴影</strong>，<strong>文字淹死</strong>，<strong>背景色</strong>，<strong>权重更高的class</strong></li><li>右上角有显示具体的文件地址</li><li>单击可以新增css的属性，编辑的时候会有提示</li><li>双击可以款速选中</li><li>前面的checkbox可以切换此条样式的作用</li></ul><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/7833da09-ee99-427b-8f54-31db96b9a7b8/ia_10046.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120615Z&X-Amz-Expires=86400&X-Amz-Signature=1053b1d951b4d919327d8cf4142f5244d2e54dca9e80245d761f42a78a0f6b38&X-Amz-SignedHeaders=host\" alt=\"\"></p><p>颜色选择工具<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb0011334-8bb5-489b-8146-8aed9b0f548e%2Fia_10047.png?table=block&id=6ff8e9c9-a79f-4d4b-a504-a0e785ddafba&width=500&cache=v2\" alt=\"\"><br>文本阴影编辑<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F913f54a6-f09e-4210-92dc-182e1d47e9d8%2Fia_10048.png?table=block&id=abdc5b16-8f01-44cf-b670-b28a15d69327&width=510&cache=v2\" alt=\"\"><br>box-shadow工具<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2bc54da0-29fb-476c-a895-87632e76cdf2%2Fia_10049.png?table=block&id=b012611d-b88a-4add-9ebf-5cecc126aa34&width=510&cache=v2\" alt=\"\"></p><h5 id=\"盒模型栏\"><a href=\"#盒模型栏\" class=\"headerlink\" title=\"盒模型栏\"></a>盒模型栏</h5><p>见Computed面板</p><h4 id=\"Computed\"><a href=\"#Computed\" class=\"headerlink\" title=\"Computed\"></a>Computed</h4><p>展示当前实际作用在元素的盒模型</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F1592f5fa-6395-4939-87a8-5d33df37cf10%2Fia_10050.png?table=block&id=db4c5abc-2d89-4477-8156-a992a48c53c2&width=920&cache=v2\" alt=\"\"></p><p>一共有三个部分：盒模型，作用样式列表，字体加载</p><h5 id=\"盒模型\"><a href=\"#盒模型\" class=\"headerlink\" title=\"盒模型\"></a>盒模型</h5><p>展示当前元素的position，margin，padding，border值，在不同的边距上面hover元素会对应的高亮。</p><p>直接双击值可以直接修改。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/54440e78-cfb4-4433-8067-ea3184f30786/ia_10051.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=3934510ac0c579649f51e849766a1fa68b3155879034b73fa6ecd2d8ec71839a&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"作用样式列表\"><a href=\"#作用样式列表\" class=\"headerlink\" title=\"作用样式列表\"></a>作用样式列表</h5><p>列出作用在元素的列表，可以切换是否展示默认的样式，可以进行filter（同Styles Filter）</p><h5 id=\"字体加载\"><a href=\"#字体加载\" class=\"headerlink\" title=\"字体加载\"></a>字体加载</h5><p>展示字体加载情况</p><h4 id=\"Event-Listeners\"><a href=\"#Event-Listeners\" class=\"headerlink\" title=\"Event Listeners\"></a>Event Listeners</h4><p><a href=\"https://jd4oz.csb.app/\" target=\"_blank\" rel=\"noopener\">练习demo</a><br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F0a6e8bef-7d15-445d-91f3-013bc0c922b3%2Fia_10052.png?table=block&id=2442ce8d-c0fa-45ad-80c8-8eefb555161e&width=1340&cache=v2\" alt=\"\"><br>从左到右，分别为</p><ul><li><p>刷新</p></li><li><p>是否显示父元素及祖先元素的事件<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/25296b3e-b51e-47f4-a524-54fe08ef7307/ia_10053.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=55d6914627194e3a2173991e2fc55eae7b24047f0cb4f4c78f173f15e752b801&X-Amz-SignedHeaders=host\" alt=\"\"></p></li><li><p>事件监听类型选择（被动类型和非阻塞类型）</p><p>Passive event listeners:<a href=\"https://zhuanlan.zhihu.com/p/24555031\" target=\"_blank\" rel=\"noopener\"><strong>提升页面滑动的流畅度</strong></a></p></li><li><p>框架绑定的事件监听</p></li></ul><p>resolve event listeners bound with framework是否看到的是原始的代码<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/13fefdbc-9790-4b93-9ae3-b205285e4744/ia_10054.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=0713760ed0d6d4d93743e6ed99c506b007347fb82d1eb41ec88e287b1ee5b6c6&X-Amz-SignedHeaders=host\" alt=\"\"></p><p>下面就是绑定元素和具体的代码位置，key是绑定事件名,点击remove可以解绑对应的事件。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc0b06af8-617b-40d6-8c58-1de49afc19c5%2Fia_10055.png?table=block&id=f908f270-1246-4d13-ba60-317ecc1e1e21&width=770&cache=v2\" alt=\"\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/73cd58a7-6f8d-444e-bfbc-6c7c1f179897/ia_10056.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=22d750e3d75f5113498278d7c59fe5a13277f30aa5bb9948c41298e290eb477c&X-Amz-SignedHeaders=host\" alt=\"\"></p><h4 id=\"DOM-Breakpoints\"><a href=\"#DOM-Breakpoints\" class=\"headerlink\" title=\"DOM Breakpoints\"></a>DOM Breakpoints</h4><p>展示出在右键菜单中所打的断点</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/71ce8ed2-9dd0-4b6d-8168-c62791ad0e0b/ia_10057.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=acaf0e19e1ebc918939f762d01081a281d1588310aba04bf112e759332fa0d10&X-Amz-SignedHeaders=host\" alt=\"\"></p><h4 id=\"Properties\"><a href=\"#Properties\" class=\"headerlink\" title=\"Properties\"></a>Properties</h4><p>展示所选中元素的各种属性<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F45431f4e-b5a5-44b1-b37b-d7ae3620ac0f%2Fia_10058.png?table=block&id=d2cb1394-a07e-464e-ad0d-552886f2b3ad&width=1620&cache=v2\" alt=\"\"><br>如图列举出了当前节点的：</p><ul><li>img#hplogo的属性</li><li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLImageElement\" target=\"_blank\" rel=\"noopener\">图片元素的属性</a></li><li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement\" target=\"_blank\" rel=\"noopener\">元素的属性</a></li><li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Node\" target=\"_blank\" rel=\"noopener\">Node的属性</a></li><li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget\" target=\"_blank\" rel=\"noopener\">EventTarget的属性</a></li><li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\" target=\"_blank\" rel=\"noopener\">Object的属性</a></li></ul><p>如果有需要就可以展开详细查看<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd0fe2a65-8198-4724-802b-8c55161ba1ca%2Fia_10059.png?table=block&id=8925aad2-04cf-4275-88dd-539ad58c108c&width=1320&cache=v2\" alt=\"\"></p><h4 id=\"Accessibility\"><a href=\"#Accessibility\" class=\"headerlink\" title=\"Accessibility\"></a>Accessibility</h4><p>可访问性，<a href=\"https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BE%85%E5%8A%A9%E5%8A%9F%E8%83%BD\" target=\"_blank\" rel=\"noopener\">计算机辅助功能</a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Accessibility/ARIA\" target=\"_blank\" rel=\"noopener\">无障碍访问</a></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F01540e2a-37d6-4099-a905-4dbba2e902e0%2Fia_10060.png?table=block&id=b97767e2-1016-42c4-af21-d55eeddfb728&width=3560&cache=v2\" alt=\"\"></p><p>从上往下依次为：</p><ul><li>可访问树</li></ul><p>可访问性树是DOM树的子集。它仅包含DOM树中与在屏幕阅读器中显示页面内容相关且有用的元素。</p><ul><li>可访问属性</li></ul><p>ARIA属性可确保屏幕阅读器拥有他们需要的所有信息，以正确表示页面的内容</p><ul><li>最终渲染的属性，计算的可访问性属性</li></ul><h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p>以上，就是Chrome Elements面板的全部内容，如有错误，还望各位看官斧正。</p><p>预告：Chrome Console面板进行中</p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:58 GMT+0800 (中国标准时间) --><h3 id=\"Chrome开发者工具的打开方式\"><a href=\"#Chrome开发者工具的打开方式\" class=\"headerlink\" title=\"Chrome开发者工具的打开方式\"></a>Chrome开发者工具的打开方式</h3><p>在开始面板分析之前，说下DevTool的打开方式。</p><ul><li>右键Inspect(Ctrl+Shift+I)</li><li>F12打开(或者光标放在地址栏F12打开)</li><li>Menu -&gt; More tools -&gt; Developer Tools</li></ul><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F88d8eafe-f628-423c-b630-eb3b93d20db7%2Fia_10006.png?table=block&id=587d28c2-79d9-41bc-9709-90aacfad0854&width=1420&cache=v2\" alt=\"\"></p>","more":"<h3 id=\"初识面板\"><a href=\"#初识面板\" class=\"headerlink\" title=\"初识面板\"></a>初识面板</h3><p>在打DevTool之后选择Elements就可以打开Elements面板<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff0903299-e588-4f3a-983e-3a520dcc4db0%2Fia_10007.png?table=block&id=37e30b2e-51f3-4be8-8bd1-ab1a14b88ec7&width=3840&cache=v2\" alt=\"\"></p><h4 id=\"面板分析\"><a href=\"#面板分析\" class=\"headerlink\" title=\"面板分析\"></a>面板分析</h4><p>最左侧面板为实际网页；在右侧的面板中，主要分为两部分，一部分是左侧的DOM Tree结构，右侧则是属性的子面板。</p><h3 id=\"DOM面板使用方法\"><a href=\"#DOM面板使用方法\" class=\"headerlink\" title=\"DOM面板使用方法\"></a>DOM面板使用方法</h3><h4 id=\"选择元素\"><a href=\"#选择元素\" class=\"headerlink\" title=\"选择元素\"></a>选择元素</h4><p>选择元素之后，右侧的DOM Tree面板会高亮此元素，底部会显示当前的DOM元素的路径，属性子面板也会展示该元素的属性。</p><p>选择元素的方式有几种：</p><ul><li>在元素上右键审查</li></ul><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff0a0107c-0dec-46a4-8713-2385c19262b2%2Fia_10008.png?table=block&id=5aa67908-cfab-4d75-b0db-eebd980bfcff&width=1490&cache=v2\" alt=\"\"></p><ul><li>使用选择工具在页面审查</li></ul><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6dca281a-bfb0-4cb9-8434-efc62c7643b6%2Fia_10010.png?table=block&id=6ee4ebd3-7cda-4bf4-949e-34f05ae4c9bf&width=2910&cache=v2\" alt=\"\"></p><ul><li>在DOM Tree面板hover选中元素。此时两边的显示是及时联动的，可以及时观察，底部显示了DOM元素路径。</li></ul><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F5efa9cc2-9b77-4a68-95c2-9166c1e13749%2Fia_10011.png?table=block&id=fb695df0-5f43-4677-a29d-4a966c00763b&width=2550&cache=v2\" alt=\"\"></p><p>在元素选中之后，DOM Tree会呈现高亮状态，hover的时候在网页的实际视图也会呈现高亮。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcd43f1f3-7988-4472-af56-0b693a804b06%2FUntitled.png?table=block&id=f15d48f3-37db-423a-b6da-115223fbc456&width=2550&cache=v2\" alt=\"\"></p><h4 id=\"切换元素\"><a href=\"#切换元素\" class=\"headerlink\" title=\"切换元素\"></a>切换元素</h4><p>在选择元素之后，可以通过键盘的<strong>上下键</strong>来进行上一级和下一级的选择，<strong>左右键</strong>可以对这个DOM节点进行展开和闭合。<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/e3e7ebe1-bd38-43bc-867a-102547d910e0/ia_10012.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120609Z&X-Amz-Expires=86400&X-Amz-Signature=c9e8bbb313c47bcaf7543c255360b562e2e624ff1bc2b43f0e81a785074bff41&X-Amz-SignedHeaders=host\" alt=\"\"><br>同时，在选择了元素之后，可以直接输入$0，打印当前的元素。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4106546d-0cca-44a4-92e8-6163b0d41e91%2Fia_10013.png?table=block&id=6571821c-4275-430e-bc76-e18be5b3fb7e&width=3270&cache=v2\" alt=\"\"></p><h4 id=\"基本编辑操作\"><a href=\"#基本编辑操作\" class=\"headerlink\" title=\"基本编辑操作\"></a>基本编辑操作</h4><p>所有的属性编辑之后再网页都可以及时看到效果。</p><h5 id=\"文本编辑\"><a href=\"#文本编辑\" class=\"headerlink\" title=\"文本编辑\"></a>文本编辑</h5><p>在对应的文本上面双击可以快速选择属性，进行修改。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd5d4d239-bf16-46a0-afe3-cc196462f82f%2Fia_10014.png?table=block&id=542d3d9b-21e5-4ac7-813f-aef33e997954&width=2170&cache=v2\" alt=\"\"></p><h5 id=\"属性编辑\"><a href=\"#属性编辑\" class=\"headerlink\" title=\"属性编辑\"></a>属性编辑</h5><p>在对应的属性上面双击可以快速选择属性，进行修改。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F57890fdd-ba02-4078-a4a3-491981f1aa84%2Fia_10015.png?table=block&id=87e7e9e3-a09c-414d-bd9b-498ca8cb4144&width=1320&cache=v2\" alt=\"\"></p><h5 id=\"元素拖拽\"><a href=\"#元素拖拽\" class=\"headerlink\" title=\"元素拖拽\"></a>元素拖拽</h5><p>选中的元素右键单击按住不放可以拖拽，DOM Tree的结构顺序被改变。<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/7baa41bd-c550-49b1-b463-f25b51450f5e/ia_10016.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120609Z&X-Amz-Expires=86400&X-Amz-Signature=a2bc98ddc3610daf6f87681a690986097861a06620fdf7972bff225d18b5cded&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"元素隐藏、删除，恢复\"><a href=\"#元素隐藏、删除，恢复\" class=\"headerlink\" title=\"元素隐藏、删除，恢复\"></a>元素隐藏、删除，恢复</h5><p>选中元素，按<strong>H</strong>键（英文输入模式下）可以切换元素的显隐，<strong>delete</strong>键可以直接删除DOM节点，<strong>Ctrl+Z</strong>可以恢复上一步的操作。</p><ul><li>显隐切换<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1c8d429c-8ec6-44fc-a379-94125b5c83dd/ia_10017.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120621Z&X-Amz-Expires=86400&X-Amz-Signature=3892966e9031bdbf6a649af02acf584203811655e3359234eafe3b206e4795f0&X-Amz-SignedHeaders=host\" alt=\"\"></li><li>删除和恢复</li></ul><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1efa7f5c-5c7c-4742-a979-1d9b097c9e01/ia_10018.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=eb327f563c63beaa8cc8bf82350c54cb0149fc32d2ccfde7f1530c542dceaafa&X-Amz-SignedHeaders=host\" alt=\"\"></p><h4 id=\"hover效果\"><a href=\"#hover效果\" class=\"headerlink\" title=\"hover效果\"></a>hover效果</h4><h5 id=\"hover\"><a href=\"#hover\" class=\"headerlink\" title=\"hover\"></a>hover</h5><p>hover的时候，网页内容会随鼠标位置联动，同时如果是图片元素会显示图片的缩略图和图片地址。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6c71becd-7a80-48dd-84c2-ddfdb39ebbdc%2Fia_10019.png?table=block&id=5ddafd7b-228c-4914-ab1c-19b0a9756707&width=3270&cache=v2\" alt=\"\"></p><h4 id=\"右键菜单\"><a href=\"#右键菜单\" class=\"headerlink\" title=\"右键菜单\"></a>右键菜单</h4><p>当我们在DOM tree面板对元素右键的的时候会显示右键菜单。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F65184f9a-0e24-4a94-b98f-64915a2a1d92%2Fia_10020.png?table=block&id=15c35207-cf3d-4b3b-8ef5-9f1bd4922ea4&width=710&cache=v2\" alt=\"\"></p><p>接下来我们将对右键菜单一一解析。</p><h5 id=\"Reveal-in-Source-panel-在资源面板显示（图片、音视频等资源会显示）\"><a href=\"#Reveal-in-Source-panel-在资源面板显示（图片、音视频等资源会显示）\" class=\"headerlink\" title=\"Reveal in Source panel 在资源面板显示（图片、音视频等资源会显示）\"></a>Reveal in Source panel 在资源面板显示（图片、音视频等资源会显示）</h5><h5 id=\"Open-in-new-tab-在新窗口打开资源（图片、音视频等资源会显示）\"><a href=\"#Open-in-new-tab-在新窗口打开资源（图片、音视频等资源会显示）\" class=\"headerlink\" title=\"Open in new tab 在新窗口打开资源（图片、音视频等资源会显示）\"></a>Open in new tab 在新窗口打开资源（图片、音视频等资源会显示）</h5><h5 id=\"Add-attribute-为当前元素添加属性\"><a href=\"#Add-attribute-为当前元素添加属性\" class=\"headerlink\" title=\"Add attribute 为当前元素添加属性\"></a>Add attribute 为当前元素添加属性</h5><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b09310a5-21bc-47ee-9144-b63bc4459ca7/ia_10021.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=81189b4c1b749fc133306a4c66dce059829a65cad82ff113303b34a862378c0a&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"Edit-as-HTML-以HTML方式编辑当前元素\"><a href=\"#Edit-as-HTML-以HTML方式编辑当前元素\" class=\"headerlink\" title=\"Edit as HTML 以HTML方式编辑当前元素\"></a>Edit as HTML 以HTML方式编辑当前元素</h5><p>点击其他地方，编辑区域失去焦点就会保存<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/85345d23-ee9d-4360-804a-fd084ddc3fbb/ia_10022.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=f3fae309fbaef6b7db6a3e0c640d6e321c6e6cf2be3a70928c73b5eece811bc2&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"Delete-Element-删除当前的元素，和键盘的Delete一样\"><a href=\"#Delete-Element-删除当前的元素，和键盘的Delete一样\" class=\"headerlink\" title=\"Delete Element 删除当前的元素，和键盘的Delete一样\"></a>Delete Element 删除当前的元素，和键盘的Delete一样</h5><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/efd268cd-4997-4531-86e9-a3cda929c3b6/ia_10023.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120609Z&X-Amz-Expires=86400&X-Amz-Signature=722d9ef878b5e7b7e89f7986e0853bc67a5377ea47fdf6248c6424a75c268c3d&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"Copy复制\"><a href=\"#Copy复制\" class=\"headerlink\" title=\"Copy复制\"></a>Copy复制</h5><h6 id=\"Cut-element-剪切元素\"><a href=\"#Cut-element-剪切元素\" class=\"headerlink\" title=\"Cut element 剪切元素\"></a>Cut element 剪切元素</h6><p><strong>粘贴的时候原来元素会消失</strong></p><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/72621a64-e563-4a71-8801-d704a9dbfe4b/ia_10024.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=335a92f43c280685461d4116bce16a1bf8384e12f707e8409132db7cc525b61a&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-element-复制元素\"><a href=\"#Copy-element-复制元素\" class=\"headerlink\" title=\"Copy element 复制元素\"></a>Copy element 复制元素</h6><p><strong>粘贴的时候原来元素不会消失</strong></p><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/81d8d3ca-b889-4e8d-9f43-42673f2adfea/ia_10025.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=0437d6c12360e9a6edf9be25b1d6e496b46c2abde75510d02f441a4474484714&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Paste-element-粘贴元素（在已复制的情况）\"><a href=\"#Paste-element-粘贴元素（在已复制的情况）\" class=\"headerlink\" title=\"Paste element 粘贴元素（在已复制的情况）\"></a>Paste element 粘贴元素（在已复制的情况）</h6><p>粘贴操作</p><h6 id=\"Copy-outerHTML-复制序列化的HTML片段（outerHTML）\"><a href=\"#Copy-outerHTML-复制序列化的HTML片段（outerHTML）\" class=\"headerlink\" title=\"Copy outerHTML 复制序列化的HTML片段（outerHTML）\"></a>Copy outerHTML 复制序列化的HTML片段（<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/outerHTML\" target=\"_blank\" rel=\"noopener\">outerHTML</a>）</h6><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/cb7c71fc-02b3-49f1-9d59-c7f4ca409407/ia_10026.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=80744687ba931e5bdcbe0da088c6210c630fd36d872ca7cf5d3a76f1249cfab0&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-selector-复制选择器（可以直接放到选择语句中使用）\"><a href=\"#Copy-selector-复制选择器（可以直接放到选择语句中使用）\" class=\"headerlink\" title=\"Copy selector 复制选择器（可以直接放到选择语句中使用）\"></a>Copy selector 复制选择器（可以直接放到选择语句中使用）</h6><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/ff4cb4d4-a1e5-4aa7-a477-d0dfe5ad4449/ia_10027.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=6eecb7f0fc03e792d1f2c7974364d59dcb2e299c71d0bddf816695b260202755&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-JS-path-复制JS路径，可以直接使用\"><a href=\"#Copy-JS-path-复制JS路径，可以直接使用\" class=\"headerlink\" title=\"Copy JS path 复制JS路径，可以直接使用\"></a>Copy JS path 复制JS路径，可以直接使用</h6><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f7bf4c8a-4845-4b2c-b01e-4fbcbaabb7a9/ia_10028.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=4e12ccd9b04b8d21da12ce768078d1e6688c6ac2f5a6d1115e53b9c25dccb8f1&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-styles-复制作用在此元素的样式\"><a href=\"#Copy-styles-复制作用在此元素的样式\" class=\"headerlink\" title=\"Copy styles 复制作用在此元素的样式\"></a>Copy styles 复制作用在此元素的样式</h6><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/af60e7fc-d9cb-43e1-9d9e-83ec0cfa67bc/ia_10029.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=a6c31a0cdf67b1f212622936241650df50422698b3ac13dc69879040297a5cef&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-XPath-复制元素的XPath\"><a href=\"#Copy-XPath-复制元素的XPath\" class=\"headerlink\" title=\"Copy XPath 复制元素的XPath\"></a>Copy XPath 复制元素的XPath</h6><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/c64d41df-962e-455c-b46d-6019337faad5/ia_10030.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=b8d65dcd49ffcd70d30647872857cb2714d0573243d44f62a2114da086363dc3&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-full-XPath-复制元素的完整XPath\"><a href=\"#Copy-full-XPath-复制元素的完整XPath\" class=\"headerlink\" title=\"Copy full XPath 复制元素的完整XPath\"></a>Copy full XPath 复制元素的完整XPath</h6><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6f6c12a3-b9cf-4afa-8823-20e4b3747e78/ia_10031.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=fd51282ee45f7e30d8f1baeba04f056247d8dda6cca23ad7eb4427b0972329f0&X-Amz-SignedHeaders=host\" alt=\"\"></p><h6 id=\"Copy-link-address-复制当前的连接地址（在图片等媒体元素上会显示）\"><a href=\"#Copy-link-address-复制当前的连接地址（在图片等媒体元素上会显示）\" class=\"headerlink\" title=\"Copy link address 复制当前的连接地址（在图片等媒体元素上会显示）\"></a>Copy link address 复制当前的连接地址（在图片等媒体元素上会显示）</h6><h5 id=\"Force-state-强制当前元素的状态\"><a href=\"#Force-state-强制当前元素的状态\" class=\"headerlink\" title=\"Force state 强制当前元素的状态\"></a>Force state 强制当前元素的状态</h5><p>一共有五种<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4b2388fb-3345-4bcc-b7af-9c42df923d65%2Fia_10032.png?table=block&id=565b793b-5e90-430d-8432-6449d2469f85&width=650&cache=v2\" alt=\"\"><br>(附： <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes\" target=\"_blank\" rel=\"noopener\">全部伪类</a>、 <a href=\"https://codesandbox.io/s/crimson-water-3phqw\" target=\"_blank\" rel=\"noopener\">简单的demo</a>)<br>1.:active 激活状态<br>2.:hover 虚指状态<br>3.:focus 获得焦点状态<br>4.:visited 已访问过的链接状态<br>5.:focus-within 元素获得焦点或该元素的后代元素获得焦点的状态<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/35bb120a-5a45-4756-8991-266ab0b700e3/ia_10033.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120615Z&X-Amz-Expires=86400&X-Amz-Signature=e72193da02d811015b5ae94a4019a2272fc84b6f844c6ca11506a22e6c1ac26e&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"Brake-on-断点\"><a href=\"#Brake-on-断点\" class=\"headerlink\" title=\"Brake on 断点\"></a>Brake on 断点</h5><p>(附： <a href=\"https://fewn8.csb.app/\" target=\"_blank\" rel=\"noopener\">简单的demo</a>)</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F15e49d4b-e86d-49d9-80e5-e8f519332969%2Fia_10034.png?table=block&id=054d2e73-775b-48bd-8142-552ce288a545&width=850&cache=v2\" alt=\"\"></p><p>一共有三种可以为<strong>JS</strong>修改DOM的情况打断点：</p><p>1.subtree modification 子节点修改</p><p>2.attribute modification 属性修改</p><p>3.node removal 节点移除<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/18faba51-01a1-493e-a9df-03a0c8a06d5e/ia_10035.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=41a35647e75482fded2067ebcebbc91551ef4f46cbaf7f82926fd66eda59c55e&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"expand-recursively-将此节点的每个子节点展开\"><a href=\"#expand-recursively-将此节点的每个子节点展开\" class=\"headerlink\" title=\"expand recursively 将此节点的每个子节点展开\"></a>expand recursively 将此节点的每个子节点展开</h5><h5 id=\"collapse-children-将子节点全部折叠\"><a href=\"#collapse-children-将子节点全部折叠\" class=\"headerlink\" title=\"collapse children 将子节点全部折叠\"></a>collapse children 将子节点全部折叠</h5><p>一起演示：<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/32ae82f6-ebbd-4dfd-a471-e8501bd83980/ia_10036.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120619Z&X-Amz-Expires=86400&X-Amz-Signature=133b4d91526eae6ea75531d91a27b2f858615f2937c90bc4431d029f57fd7d47&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"Scroll-into-view-将元素滚动到视图中\"><a href=\"#Scroll-into-view-将元素滚动到视图中\" class=\"headerlink\" title=\"Scroll into view 将元素滚动到视图中\"></a>Scroll into view 将元素滚动到视图中</h5><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/d0799c1b-fd0a-4010-9556-cf0164dd8148/ia_10037.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=c8c4fd7b3bb6eb785e3d909044d2f8e7ac345930c3fe9443c35c9be089bbb287&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"Focus-将在视图中高亮选择的元素，但是不一定在视图显示\"><a href=\"#Focus-将在视图中高亮选择的元素，但是不一定在视图显示\" class=\"headerlink\" title=\"Focus 将在视图中高亮选择的元素，但是不一定在视图显示\"></a>Focus 将在视图中高亮选择的元素，但是不一定在视图显示</h5><h5 id=\"Store-as-global-variable-将此元素存储为全局变量\"><a href=\"#Store-as-global-variable-将此元素存储为全局变量\" class=\"headerlink\" title=\"Store as global variable 将此元素存储为全局变量\"></a>Store as global variable 将此元素存储为全局变量</h5><p>接下来就可以像操作JS一样直接操作元素。<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/278015cc-1a16-4bad-92c2-4f5597e57e09/ia_10038.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=77ba36a28c3d0a1a00916e1d76991416085da0b59849f993b845d0ed92fbf538&X-Amz-SignedHeaders=host\" alt=\"\"></p><h3 id=\"属性子面板使用方法\"><a href=\"#属性子面板使用方法\" class=\"headerlink\" title=\"属性子面板使用方法\"></a>属性子面板使用方法</h3><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F16f5024e-d6e8-4b59-9b9f-3aa7e3a00a58%2Fia_10039.png?table=block&id=25087a6c-1a18-4a68-b59a-9dc85f76adc9&width=1090&cache=v2\" alt=\"\"></p><h4 id=\"Styles\"><a href=\"#Styles\" class=\"headerlink\" title=\"Styles\"></a>Styles</h4><p>当我们选中元素的时候，右侧子面板就会显示当前元素的Styles面板。这个面板主要有三个部分<strong>Filter栏</strong>、<strong>样式操作栏</strong>、<strong>盒模型栏</strong></p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F3297595b-b38a-4e1c-8d14-1ad328184c7f%2Fia_10040.png?table=block&id=152f1161-accc-4cd6-b02b-f20e173aac09&width=1730&cache=v2\" alt=\"\"></p><h5 id=\"Filter栏\"><a href=\"#Filter栏\" class=\"headerlink\" title=\"Filter栏\"></a>Filter栏</h5><p>可以对元素的样式进行筛选，强制状态，切换class和增加class</p><p>过滤操作<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6c571133-c5d8-4668-ad3a-e6c2c4b5384a/ia_10041.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120619Z&X-Amz-Expires=86400&X-Amz-Signature=22e7c527b96072eee3d67dd6278fae3cfd9c4605df22e85f99dc7b821ce83387&X-Amz-SignedHeaders=host\" alt=\"\"></p><p>强制状态，和右键菜单的区别就是在这里还可以直接看到作用的样式<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/4200c4bc-a027-4840-bfef-7add58ee8762/ia_10042.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=d36d0b6cc601e152fca3aff9df5aaadabd888e1381f9ed723a5b2ca9f4e42657&X-Amz-SignedHeaders=host\" alt=\"\"></p><p>切换、增加class<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/23556037-c6e6-4827-92a6-eb894dbd6fb5/ia_10043.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120608Z&X-Amz-Expires=86400&X-Amz-Signature=93525c01b0c6689147bc5bf224e011b1c748ce422e6fcb31fdc60f9d7a941249&X-Amz-SignedHeaders=host\" alt=\"\"></p><p>增加样式（最右侧）</p><p>此处的添加可以下拉添加到已经存在的class中，或者仅仅在开发者工具中<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/57c5cc31-0928-45ba-8091-54aca212a519/ia_10044.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120611Z&X-Amz-Expires=86400&X-Amz-Signature=c220ce054a171621e63b1ee0851664c9fa1db241453cb2053f80a458ffa88bf1&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"样式操作栏\"><a href=\"#样式操作栏\" class=\"headerlink\" title=\"样式操作栏\"></a>样式操作栏</h5><p>选中一个元素可以出现一下的样式操作面板</p><h6 id=\"样式操作栏概览\"><a href=\"#样式操作栏概览\" class=\"headerlink\" title=\"样式操作栏概览\"></a>样式操作栏概览</h6><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F29761155-5970-42ef-bdbf-b2ff19d03b0a%2Fia_10045.png?table=block&id=d9ea30c7-1ae4-42e3-807e-5dc379c5a3ba&width=930&cache=v2\" alt=\"\"></p><ul><li>1：元素行内样式</li><li>2：元素受class影响的样式</li><li>3：浏览器默认的样式</li><li>4：继承的样式，并且有标出继承自何处<h6 id=\"操作细节\"><a href=\"#操作细节\" class=\"headerlink\" title=\"操作细节\"></a>操作细节</h6></li><li>右下角可以新增<strong>文本阴影</strong>，<strong>盒子阴影</strong>，<strong>文字淹死</strong>，<strong>背景色</strong>，<strong>权重更高的class</strong></li><li>右上角有显示具体的文件地址</li><li>单击可以新增css的属性，编辑的时候会有提示</li><li>双击可以款速选中</li><li>前面的checkbox可以切换此条样式的作用</li></ul><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/7833da09-ee99-427b-8f54-31db96b9a7b8/ia_10046.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120615Z&X-Amz-Expires=86400&X-Amz-Signature=1053b1d951b4d919327d8cf4142f5244d2e54dca9e80245d761f42a78a0f6b38&X-Amz-SignedHeaders=host\" alt=\"\"></p><p>颜色选择工具<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb0011334-8bb5-489b-8146-8aed9b0f548e%2Fia_10047.png?table=block&id=6ff8e9c9-a79f-4d4b-a504-a0e785ddafba&width=500&cache=v2\" alt=\"\"><br>文本阴影编辑<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F913f54a6-f09e-4210-92dc-182e1d47e9d8%2Fia_10048.png?table=block&id=abdc5b16-8f01-44cf-b670-b28a15d69327&width=510&cache=v2\" alt=\"\"><br>box-shadow工具<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2bc54da0-29fb-476c-a895-87632e76cdf2%2Fia_10049.png?table=block&id=b012611d-b88a-4add-9ebf-5cecc126aa34&width=510&cache=v2\" alt=\"\"></p><h5 id=\"盒模型栏\"><a href=\"#盒模型栏\" class=\"headerlink\" title=\"盒模型栏\"></a>盒模型栏</h5><p>见Computed面板</p><h4 id=\"Computed\"><a href=\"#Computed\" class=\"headerlink\" title=\"Computed\"></a>Computed</h4><p>展示当前实际作用在元素的盒模型</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F1592f5fa-6395-4939-87a8-5d33df37cf10%2Fia_10050.png?table=block&id=db4c5abc-2d89-4477-8156-a992a48c53c2&width=920&cache=v2\" alt=\"\"></p><p>一共有三个部分：盒模型，作用样式列表，字体加载</p><h5 id=\"盒模型\"><a href=\"#盒模型\" class=\"headerlink\" title=\"盒模型\"></a>盒模型</h5><p>展示当前元素的position，margin，padding，border值，在不同的边距上面hover元素会对应的高亮。</p><p>直接双击值可以直接修改。<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/54440e78-cfb4-4433-8067-ea3184f30786/ia_10051.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=3934510ac0c579649f51e849766a1fa68b3155879034b73fa6ecd2d8ec71839a&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"作用样式列表\"><a href=\"#作用样式列表\" class=\"headerlink\" title=\"作用样式列表\"></a>作用样式列表</h5><p>列出作用在元素的列表，可以切换是否展示默认的样式，可以进行filter（同Styles Filter）</p><h5 id=\"字体加载\"><a href=\"#字体加载\" class=\"headerlink\" title=\"字体加载\"></a>字体加载</h5><p>展示字体加载情况</p><h4 id=\"Event-Listeners\"><a href=\"#Event-Listeners\" class=\"headerlink\" title=\"Event Listeners\"></a>Event Listeners</h4><p><a href=\"https://jd4oz.csb.app/\" target=\"_blank\" rel=\"noopener\">练习demo</a><br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F0a6e8bef-7d15-445d-91f3-013bc0c922b3%2Fia_10052.png?table=block&id=2442ce8d-c0fa-45ad-80c8-8eefb555161e&width=1340&cache=v2\" alt=\"\"><br>从左到右，分别为</p><ul><li><p>刷新</p></li><li><p>是否显示父元素及祖先元素的事件<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/25296b3e-b51e-47f4-a524-54fe08ef7307/ia_10053.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=55d6914627194e3a2173991e2fc55eae7b24047f0cb4f4c78f173f15e752b801&X-Amz-SignedHeaders=host\" alt=\"\"></p></li><li><p>事件监听类型选择（被动类型和非阻塞类型）</p><p>Passive event listeners:<a href=\"https://zhuanlan.zhihu.com/p/24555031\" target=\"_blank\" rel=\"noopener\"><strong>提升页面滑动的流畅度</strong></a></p></li><li><p>框架绑定的事件监听</p></li></ul><p>resolve event listeners bound with framework是否看到的是原始的代码<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/13fefdbc-9790-4b93-9ae3-b205285e4744/ia_10054.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=0713760ed0d6d4d93743e6ed99c506b007347fb82d1eb41ec88e287b1ee5b6c6&X-Amz-SignedHeaders=host\" alt=\"\"></p><p>下面就是绑定元素和具体的代码位置，key是绑定事件名,点击remove可以解绑对应的事件。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc0b06af8-617b-40d6-8c58-1de49afc19c5%2Fia_10055.png?table=block&id=f908f270-1246-4d13-ba60-317ecc1e1e21&width=770&cache=v2\" alt=\"\"></p><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/73cd58a7-6f8d-444e-bfbc-6c7c1f179897/ia_10056.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=22d750e3d75f5113498278d7c59fe5a13277f30aa5bb9948c41298e290eb477c&X-Amz-SignedHeaders=host\" alt=\"\"></p><h4 id=\"DOM-Breakpoints\"><a href=\"#DOM-Breakpoints\" class=\"headerlink\" title=\"DOM Breakpoints\"></a>DOM Breakpoints</h4><p>展示出在右键菜单中所打的断点</p><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/71ce8ed2-9dd0-4b6d-8168-c62791ad0e0b/ia_10057.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T120613Z&X-Amz-Expires=86400&X-Amz-Signature=acaf0e19e1ebc918939f762d01081a281d1588310aba04bf112e759332fa0d10&X-Amz-SignedHeaders=host\" alt=\"\"></p><h4 id=\"Properties\"><a href=\"#Properties\" class=\"headerlink\" title=\"Properties\"></a>Properties</h4><p>展示所选中元素的各种属性<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F45431f4e-b5a5-44b1-b37b-d7ae3620ac0f%2Fia_10058.png?table=block&id=d2cb1394-a07e-464e-ad0d-552886f2b3ad&width=1620&cache=v2\" alt=\"\"><br>如图列举出了当前节点的：</p><ul><li>img#hplogo的属性</li><li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLImageElement\" target=\"_blank\" rel=\"noopener\">图片元素的属性</a></li><li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement\" target=\"_blank\" rel=\"noopener\">元素的属性</a></li><li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Node\" target=\"_blank\" rel=\"noopener\">Node的属性</a></li><li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget\" target=\"_blank\" rel=\"noopener\">EventTarget的属性</a></li><li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\" target=\"_blank\" rel=\"noopener\">Object的属性</a></li></ul><p>如果有需要就可以展开详细查看<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd0fe2a65-8198-4724-802b-8c55161ba1ca%2Fia_10059.png?table=block&id=8925aad2-04cf-4275-88dd-539ad58c108c&width=1320&cache=v2\" alt=\"\"></p><h4 id=\"Accessibility\"><a href=\"#Accessibility\" class=\"headerlink\" title=\"Accessibility\"></a>Accessibility</h4><p>可访问性，<a href=\"https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BE%85%E5%8A%A9%E5%8A%9F%E8%83%BD\" target=\"_blank\" rel=\"noopener\">计算机辅助功能</a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Accessibility/ARIA\" target=\"_blank\" rel=\"noopener\">无障碍访问</a></p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F01540e2a-37d6-4099-a905-4dbba2e902e0%2Fia_10060.png?table=block&id=b97767e2-1016-42c4-af21-d55eeddfb728&width=3560&cache=v2\" alt=\"\"></p><p>从上往下依次为：</p><ul><li>可访问树</li></ul><p>可访问性树是DOM树的子集。它仅包含DOM树中与在屏幕阅读器中显示页面内容相关且有用的元素。</p><ul><li>可访问属性</li></ul><p>ARIA属性可确保屏幕阅读器拥有他们需要的所有信息，以正确表示页面的内容</p><ul><li>最终渲染的属性，计算的可访问性属性</li></ul><h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p>以上，就是Chrome Elements面板的全部内容，如有错误，还望各位看官斧正。</p><p>预告：Chrome Console面板进行中</p><!-- rebuild by neat -->"},{"title":"Chrome Network面板解析","abbrlink":"1eb8bb25","date":"2020-06-14T11:15:20.000Z","_content":"\nChrome Console 面板解析\n\n## Network 打开方式\n\n- 在控制台打开的情况选择 Network 按钮\n- 输入快捷键`Ctrl+Shift+P`，再输入 `Network`\n\n## 初识面板\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F622cb9e7-efb7-42dd-9944-5eeaaa4e0650%2Fia_10006.png?table=block&id=dc9f2389-ec3f-43d3-b97c-c079ff0bdb8b&width=2020&cache=v2)\n\n<!-- more -->\n\n## 工具栏\n\n工具栏差不多有十个按钮，每个按钮都有不同的功能。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F96aea266-307e-403b-a251-8b7c7f9a3374%2Fia_10007.png?table=block&id=c819fc83-e6a1-42fa-a4b3-5bc76b013bf1&width=2300&cache=v2)\n\n### 启用网络记录\n\n控制是否开启记录网络请求，高亮时开启。\n\n### 清除请求日志\n\n清除当前的网络请求列表\n\n### 请求过滤\n\n点击此按钮会出现过滤栏，接下来对过滤栏进行分析\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F877cc805-6cea-4da5-8e14-7273f25fb593%2Fia_10008.png?table=block&id=59dd5dc0-f3f4-4461-bada-502c407b193d&width=2300&cache=v2)\n\n#### 过滤输入框\n\n#### 类型过滤\n##### Hide Data URLs\n含义：前缀为 data: 协议的URL，其允许内容创建者向文档中嵌入小文件。简单的例子：用base64展示图片\n[demo](https://www.w3docs.com/tools/code-editor/10848)\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6339bef4-35ad-4b87-93b7-0f9fe70e2e82/ia_10009.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115551Z&X-Amz-Expires=86400&X-Amz-Signature=50b0c34f68b5fd4a7118506a72c1068330494a2e050bc3ffd2407385890e3d92&X-Amz-SignedHeaders=host)\n##### 具体类型\n后面展示了一些具体的类型All(全部)、XHR(XMLHttpRequest和fetch)、CSS(样式表)、Img(图片资源)、Media(媒体资源)、Font(字体资源)、WS(WebSocket)、MainFest()\n\n\n### 请求搜索\n\n### 保留请求日志\n\n### 禁用缓存\n\n### 网络情况模拟\n\n### 请求文件的导入导出\n\n### 设置\n\n## 信息总览栏\n\n## 请求区\n","source":"_posts/Chrome-network.md","raw":"---\ntitle: Chrome Network面板解析\nabbrlink: 1eb8bb25\ndate: 2020-06-14 19:15:20\ntags:\n  - Chrome\n---\n\nChrome Console 面板解析\n\n## Network 打开方式\n\n- 在控制台打开的情况选择 Network 按钮\n- 输入快捷键`Ctrl+Shift+P`，再输入 `Network`\n\n## 初识面板\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F622cb9e7-efb7-42dd-9944-5eeaaa4e0650%2Fia_10006.png?table=block&id=dc9f2389-ec3f-43d3-b97c-c079ff0bdb8b&width=2020&cache=v2)\n\n<!-- more -->\n\n## 工具栏\n\n工具栏差不多有十个按钮，每个按钮都有不同的功能。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F96aea266-307e-403b-a251-8b7c7f9a3374%2Fia_10007.png?table=block&id=c819fc83-e6a1-42fa-a4b3-5bc76b013bf1&width=2300&cache=v2)\n\n### 启用网络记录\n\n控制是否开启记录网络请求，高亮时开启。\n\n### 清除请求日志\n\n清除当前的网络请求列表\n\n### 请求过滤\n\n点击此按钮会出现过滤栏，接下来对过滤栏进行分析\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F877cc805-6cea-4da5-8e14-7273f25fb593%2Fia_10008.png?table=block&id=59dd5dc0-f3f4-4461-bada-502c407b193d&width=2300&cache=v2)\n\n#### 过滤输入框\n\n#### 类型过滤\n##### Hide Data URLs\n含义：前缀为 data: 协议的URL，其允许内容创建者向文档中嵌入小文件。简单的例子：用base64展示图片\n[demo](https://www.w3docs.com/tools/code-editor/10848)\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6339bef4-35ad-4b87-93b7-0f9fe70e2e82/ia_10009.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115551Z&X-Amz-Expires=86400&X-Amz-Signature=50b0c34f68b5fd4a7118506a72c1068330494a2e050bc3ffd2407385890e3d92&X-Amz-SignedHeaders=host)\n##### 具体类型\n后面展示了一些具体的类型All(全部)、XHR(XMLHttpRequest和fetch)、CSS(样式表)、Img(图片资源)、Media(媒体资源)、Font(字体资源)、WS(WebSocket)、MainFest()\n\n\n### 请求搜索\n\n### 保留请求日志\n\n### 禁用缓存\n\n### 网络情况模拟\n\n### 请求文件的导入导出\n\n### 设置\n\n## 信息总览栏\n\n## 请求区\n","slug":"Chrome-network","published":1,"updated":"2020-08-02T11:56:39.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnbg0007vwtf3jxh69xa","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:58 GMT+0800 (中国标准时间) --><p>Chrome Console 面板解析</p><h2 id=\"Network-打开方式\"><a href=\"#Network-打开方式\" class=\"headerlink\" title=\"Network 打开方式\"></a>Network 打开方式</h2><ul><li>在控制台打开的情况选择 Network 按钮</li><li>输入快捷键<code>Ctrl+Shift+P</code>，再输入 <code>Network</code></li></ul><h2 id=\"初识面板\"><a href=\"#初识面板\" class=\"headerlink\" title=\"初识面板\"></a>初识面板</h2><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F622cb9e7-efb7-42dd-9944-5eeaaa4e0650%2Fia_10006.png?table=block&id=dc9f2389-ec3f-43d3-b97c-c079ff0bdb8b&width=2020&cache=v2\" alt=\"\"></p><a id=\"more\"></a><h2 id=\"工具栏\"><a href=\"#工具栏\" class=\"headerlink\" title=\"工具栏\"></a>工具栏</h2><p>工具栏差不多有十个按钮，每个按钮都有不同的功能。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F96aea266-307e-403b-a251-8b7c7f9a3374%2Fia_10007.png?table=block&id=c819fc83-e6a1-42fa-a4b3-5bc76b013bf1&width=2300&cache=v2\" alt=\"\"></p><h3 id=\"启用网络记录\"><a href=\"#启用网络记录\" class=\"headerlink\" title=\"启用网络记录\"></a>启用网络记录</h3><p>控制是否开启记录网络请求，高亮时开启。</p><h3 id=\"清除请求日志\"><a href=\"#清除请求日志\" class=\"headerlink\" title=\"清除请求日志\"></a>清除请求日志</h3><p>清除当前的网络请求列表</p><h3 id=\"请求过滤\"><a href=\"#请求过滤\" class=\"headerlink\" title=\"请求过滤\"></a>请求过滤</h3><p>点击此按钮会出现过滤栏，接下来对过滤栏进行分析</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F877cc805-6cea-4da5-8e14-7273f25fb593%2Fia_10008.png?table=block&id=59dd5dc0-f3f4-4461-bada-502c407b193d&width=2300&cache=v2\" alt=\"\"></p><h4 id=\"过滤输入框\"><a href=\"#过滤输入框\" class=\"headerlink\" title=\"过滤输入框\"></a>过滤输入框</h4><h4 id=\"类型过滤\"><a href=\"#类型过滤\" class=\"headerlink\" title=\"类型过滤\"></a>类型过滤</h4><h5 id=\"Hide-Data-URLs\"><a href=\"#Hide-Data-URLs\" class=\"headerlink\" title=\"Hide Data URLs\"></a>Hide Data URLs</h5><p>含义：前缀为 data: 协议的URL，其允许内容创建者向文档中嵌入小文件。简单的例子：用base64展示图片<br><a href=\"https://www.w3docs.com/tools/code-editor/10848\" target=\"_blank\" rel=\"noopener\">demo</a><br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6339bef4-35ad-4b87-93b7-0f9fe70e2e82/ia_10009.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115551Z&X-Amz-Expires=86400&X-Amz-Signature=50b0c34f68b5fd4a7118506a72c1068330494a2e050bc3ffd2407385890e3d92&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"具体类型\"><a href=\"#具体类型\" class=\"headerlink\" title=\"具体类型\"></a>具体类型</h5><p>后面展示了一些具体的类型All(全部)、XHR(XMLHttpRequest和fetch)、CSS(样式表)、Img(图片资源)、Media(媒体资源)、Font(字体资源)、WS(WebSocket)、MainFest()</p><h3 id=\"请求搜索\"><a href=\"#请求搜索\" class=\"headerlink\" title=\"请求搜索\"></a>请求搜索</h3><h3 id=\"保留请求日志\"><a href=\"#保留请求日志\" class=\"headerlink\" title=\"保留请求日志\"></a>保留请求日志</h3><h3 id=\"禁用缓存\"><a href=\"#禁用缓存\" class=\"headerlink\" title=\"禁用缓存\"></a>禁用缓存</h3><h3 id=\"网络情况模拟\"><a href=\"#网络情况模拟\" class=\"headerlink\" title=\"网络情况模拟\"></a>网络情况模拟</h3><h3 id=\"请求文件的导入导出\"><a href=\"#请求文件的导入导出\" class=\"headerlink\" title=\"请求文件的导入导出\"></a>请求文件的导入导出</h3><h3 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h3><h2 id=\"信息总览栏\"><a href=\"#信息总览栏\" class=\"headerlink\" title=\"信息总览栏\"></a>信息总览栏</h2><h2 id=\"请求区\"><a href=\"#请求区\" class=\"headerlink\" title=\"请求区\"></a>请求区</h2><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:58 GMT+0800 (中国标准时间) --><p>Chrome Console 面板解析</p><h2 id=\"Network-打开方式\"><a href=\"#Network-打开方式\" class=\"headerlink\" title=\"Network 打开方式\"></a>Network 打开方式</h2><ul><li>在控制台打开的情况选择 Network 按钮</li><li>输入快捷键<code>Ctrl+Shift+P</code>，再输入 <code>Network</code></li></ul><h2 id=\"初识面板\"><a href=\"#初识面板\" class=\"headerlink\" title=\"初识面板\"></a>初识面板</h2><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F622cb9e7-efb7-42dd-9944-5eeaaa4e0650%2Fia_10006.png?table=block&id=dc9f2389-ec3f-43d3-b97c-c079ff0bdb8b&width=2020&cache=v2\" alt=\"\"></p>","more":"<h2 id=\"工具栏\"><a href=\"#工具栏\" class=\"headerlink\" title=\"工具栏\"></a>工具栏</h2><p>工具栏差不多有十个按钮，每个按钮都有不同的功能。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F96aea266-307e-403b-a251-8b7c7f9a3374%2Fia_10007.png?table=block&id=c819fc83-e6a1-42fa-a4b3-5bc76b013bf1&width=2300&cache=v2\" alt=\"\"></p><h3 id=\"启用网络记录\"><a href=\"#启用网络记录\" class=\"headerlink\" title=\"启用网络记录\"></a>启用网络记录</h3><p>控制是否开启记录网络请求，高亮时开启。</p><h3 id=\"清除请求日志\"><a href=\"#清除请求日志\" class=\"headerlink\" title=\"清除请求日志\"></a>清除请求日志</h3><p>清除当前的网络请求列表</p><h3 id=\"请求过滤\"><a href=\"#请求过滤\" class=\"headerlink\" title=\"请求过滤\"></a>请求过滤</h3><p>点击此按钮会出现过滤栏，接下来对过滤栏进行分析</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F877cc805-6cea-4da5-8e14-7273f25fb593%2Fia_10008.png?table=block&id=59dd5dc0-f3f4-4461-bada-502c407b193d&width=2300&cache=v2\" alt=\"\"></p><h4 id=\"过滤输入框\"><a href=\"#过滤输入框\" class=\"headerlink\" title=\"过滤输入框\"></a>过滤输入框</h4><h4 id=\"类型过滤\"><a href=\"#类型过滤\" class=\"headerlink\" title=\"类型过滤\"></a>类型过滤</h4><h5 id=\"Hide-Data-URLs\"><a href=\"#Hide-Data-URLs\" class=\"headerlink\" title=\"Hide Data URLs\"></a>Hide Data URLs</h5><p>含义：前缀为 data: 协议的URL，其允许内容创建者向文档中嵌入小文件。简单的例子：用base64展示图片<br><a href=\"https://www.w3docs.com/tools/code-editor/10848\" target=\"_blank\" rel=\"noopener\">demo</a><br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6339bef4-35ad-4b87-93b7-0f9fe70e2e82/ia_10009.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115551Z&X-Amz-Expires=86400&X-Amz-Signature=50b0c34f68b5fd4a7118506a72c1068330494a2e050bc3ffd2407385890e3d92&X-Amz-SignedHeaders=host\" alt=\"\"></p><h5 id=\"具体类型\"><a href=\"#具体类型\" class=\"headerlink\" title=\"具体类型\"></a>具体类型</h5><p>后面展示了一些具体的类型All(全部)、XHR(XMLHttpRequest和fetch)、CSS(样式表)、Img(图片资源)、Media(媒体资源)、Font(字体资源)、WS(WebSocket)、MainFest()</p><h3 id=\"请求搜索\"><a href=\"#请求搜索\" class=\"headerlink\" title=\"请求搜索\"></a>请求搜索</h3><h3 id=\"保留请求日志\"><a href=\"#保留请求日志\" class=\"headerlink\" title=\"保留请求日志\"></a>保留请求日志</h3><h3 id=\"禁用缓存\"><a href=\"#禁用缓存\" class=\"headerlink\" title=\"禁用缓存\"></a>禁用缓存</h3><h3 id=\"网络情况模拟\"><a href=\"#网络情况模拟\" class=\"headerlink\" title=\"网络情况模拟\"></a>网络情况模拟</h3><h3 id=\"请求文件的导入导出\"><a href=\"#请求文件的导入导出\" class=\"headerlink\" title=\"请求文件的导入导出\"></a>请求文件的导入导出</h3><h3 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h3><h2 id=\"信息总览栏\"><a href=\"#信息总览栏\" class=\"headerlink\" title=\"信息总览栏\"></a>信息总览栏</h2><h2 id=\"请求区\"><a href=\"#请求区\" class=\"headerlink\" title=\"请求区\"></a>请求区</h2><!-- rebuild by neat -->"},{"title":"Chrome Console面板解析","abbrlink":"f9dc4616","date":"2020-06-04T14:48:15.000Z","_content":"\n### Console 面板的打开方式\n\n- 在控制台打开的情况选择 console 按钮\n- 在 DevTool 的其他面板按 ESC 键打开面板（在开发者工具获得焦点的情况下）\n- 在右上角的菜单打开（setting--show--console--drawer）\n- 输入快捷键`Ctrl+Shift+P`，再输入 `Console`\n  ![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8ba63b12-9011-4489-b75d-32e70931f245/ia_10006.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=1e26fd27ec4bc21bcf8bc186962d9afeaecad3bc8c051bcdd7bea728cf847e20&X-Amz-SignedHeaders=host)\n\n<!-- more -->\n\n### 初识面板\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7470e1fc-93f0-492c-9cea-c11b7068fd42%2Fia_10007.png?table=block&id=62bf3817-6748-4b5d-9518-a9b547867b96&width=1920&cache=v2)\n\n#### 面板分析\n\n上面部分为工具栏\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F56d70051-22cb-4c15-abf3-ca8c6029b9e8%2Fia_10008.png?table=block&id=9ca55a30-451c-4b8c-a9a7-fe4c87edb887&width=1930&cache=v2)\n\n下面部分为命令区\n\n### 工具栏使用方法\n\n#### 展开关闭侧边栏\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/034a84f7-ff09-405e-b6af-06de66942d03/ia_10009.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=851b378ec7adbca42c456284dea0d4388a5a799e36bf932986a47c9c09a67444&X-Amz-SignedHeaders=host)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe8420630-3a03-4d41-8c17-2d1063e314c7%2Fia_10010.png?table=block&id=6740a6fd-97b5-4578-ae55-0445061ee7e4&width=680&cache=v2)\n\n点击可以切换侧边栏的展示和隐藏，点击一栏可以对命令区的进行过滤。默认是以关闭的，就不会对信息进行过滤。\n\n左侧的分类栏目主要由以下几类:\n\n- message\n  全部的信息，就是未分类的信息，是以下信息的综合。\n- user message\n- errors\n  日志级别为 error 的日志\n- warning\n  日志级别为 warning 的日志\n- info\n  日志级别为 info 的日志\n- verbose\n  日志级别为 verbose(冗长) 的日志\n\n前面会显示该栏目总的日志数量，具体的信息会显示在该栏目的子栏目上，比如文件路径，产生日志数量，文件名等\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F30bf9c56-64a7-44bb-baf6-abfceed31b25%2Fia_10011.png?table=block&id=5e7f4801-3e35-4ca4-93f6-1727bf458708&width=700&cache=v2)\n点击对应的消息会在右侧展示过滤的结果。\n\n#### 清空命令行\n\n\n\n点击这个图标<img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F55c4ba90-12e5-4c8d-a444-d8ffb6b7f358%2Fia_2100000923.png?table=block&id=1ae230a7-f71a-45be-9951-8d43de1c045d&width=50&cache=v2\" width=\"26px\" style=\"display:inline;\" class=\"nofancybox\"/>可以清空命令行\n\n列举出可以清空命令行的一些操作\n\n- 右键菜单 Clear Console\n- 在命令行输入 clear()\n- js 调用 console.clear()\n- 快捷键`Ctrl + L`\n\n#### 上下文选择\n\n默认的上下文环境为 top，也就是当前网页打开的环境。你也可以选择切换为你需要你的环境\n\n比如在[这个 iframe 页面](https://7q43c.csb.app/)，你就可以切换环境为 iframe 的环境。\n\n源代码:[源代码 1](https://codesandbox.io/s/upbeat-frog-c6n68?file=/index.html)和[源代码 2](https://codesandbox.io/s/focused-tesla-7q43c?file=/index.html)\n\n当我进入 iframe 的上下文的时候就可以打印出 iframe 里面的数据\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/fdf54ba8-dd56-4935-91a7-48e27e925e69/ia_10012.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=b8423d8019790b366f5b5bdd6d0e4e362cde07b8944d266fe6628196277fd106&X-Amz-SignedHeaders=host)\n\n#### 实时表达式\n\nLive Expressions 实时执行的表达式,可以创建多个表达式，失去焦点就会保存，创建之后也可以删除。\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b1aa84a6-3ab9-422f-baa9-c418116ad139/ia_10013.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115737Z&X-Amz-Expires=86400&X-Amz-Signature=b8685e3549955cb117e7f972ce598da2cb7dd0eee955908e92301c4e5fdaeb96&X-Amz-SignedHeaders=host)\n\n#### 过滤选项\n\n可以输入文本、正则等对打印的信息进行搜索和过滤。\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/215c7214-05c2-4942-9a87-8178f6d3963b/ia_10014.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115741Z&X-Amz-Expires=86400&X-Amz-Signature=afc8c7784fb56c4fc1510841bbebba79c83669142da5881f49dc72d6ec52a0ff&X-Amz-SignedHeaders=host)\n\n#### 打印级别过滤\n\n打印级别过滤有如下选项：\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffc4a5e0a-2696-4f9c-880a-84e39248de52%2Fia_10015.png?table=block&id=43688014-9914-4393-a871-6bbac1d767a1&width=410&cache=v2)\n\n> Default: 默认为警告信息和错误\n> Verbose: 冗长的的打印\n> 其余为常规的信息、警告、错误级别\n\n当过滤级别不是全部展示的话会在右侧显示被隐藏的条数。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffa7b507d-e454-42b5-ad81-3b2258214889%2Fia_10016.png?table=block&id=a35c0070-26d1-447c-affd-cf56d6649f5c&width=760&cache=v2)\n\n#### 设置\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F397dfef1-b042-4c2f-927b-9f0a56425e83%2Fia_10017.png?table=block&id=3a8c1228-853c-42c4-9ddf-8bf3029abc2b&width=1650&cache=v2)\n\n- Hide Network\n\n  是否对有关网络的日志进行隐藏\n  ![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8707384d-69e4-4cce-9cd5-e967263c4196/ia_10018.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=4f67283fda5edcbfd75d6da5df7d7a3c9ec75c138a6ffeafae410dbf65d38940&X-Amz-SignedHeaders=host)\n\n- Log XmlHttpRequests\n\n  是否打印 XHR 请求\n  ![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/391789bb-5628-456a-bb19-d0e41c47eec9/ia_10019.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=22889ab308ca051dd3433ff47784ff13320f826aade3050f3216aafcaced029e&X-Amz-SignedHeaders=host)\n\n- Preserve Log\n  是否保留日志，每次刷新是否自动清空日志。\n- Selected Context Only\n  是否只显示当前的上下文环境的日志信息\n  ![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8c250f18-9319-48c7-990e-91352f122ee2/ia_10020.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=23a1f71fe038c887a07bd2082d4f25e0f092dca12fa8387d7ea444a407cf8447&X-Amz-SignedHeaders=host)\n\n- Group Similar\n\n* Eager Evaluation\n\n  及时显示执行结果\n  ![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b670800f-02cb-4ea7-85d5-f2723abe5385/ia_10021.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115737Z&X-Amz-Expires=86400&X-Amz-Signature=768c3aed17c957d1050ea17ab04e3686d417e03e9c1e44c11e2df61ef25715b7&X-Amz-SignedHeaders=host)\n\n- Autocomplete From History\n\n  根据历史记录自动完成命令\n  ![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f6512128-e4e9-4c64-abc0-345a15018d17/ia_10022.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=c3daf203f4632020f01d5c68314c0b5413f48be192d8fef281234b6f87b135f8&X-Amz-SignedHeaders=host)\n\n- Group Similar\n  相同日志归到一个组里面，此选项在禁用日志时间戳事才有效\n- Evaluate triggers user activation\n\n### 命令区使用方法\n\n#### 基本使用\n\n- 上一行输入，下一行输出结果\n- 键盘的上线键可根据历史记录自动补全\n\n#### 右键菜单\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7d8dea17-f9cd-498c-b270-c5178fdd89a6%2Fia_2100000900.png?table=block&id=2e591d09-3b01-41ec-a1b9-4f3565cd8995&width=360&cache=v2)\n\n- Clear console\n\n  清空命令区    \n\n- Clear console history\n\n  清空历史记录，这时上下键的补全将失效\n\n- Save as\n \n  存储当前的日志信息\n\n#### Console Api\n  参看[MDN 文档](https://developer.mozilla.org/zh-CN/docs/Web/API/Console)和[谷歌文档](https://developers.google.com/web/tools/chrome-devtools/console/api)\n\n#### Console 工具库 Api\n\n整理自[谷歌文档](https://developers.google.com/web/tools/chrome-devtools/console/utilities)\n\n| 语句              | 效果                                                                                                                                     |\n| ----------------- | ---------------------------------------------------------------------------------------------------------------------------------------- |\n| $_                | 返回最近执行的结果                                                                                                                       |\n| $0-$4             | 日志历史的最近五个DOM元素                                                                                                                |\n| $                 | document.querySelector(如果引用了jquery等库，就会被覆盖为引入的库)                                                                                                                   |\n| $$                | document.querySelectorAll                                                                                                                |\n| $x                | $x(path) 返回与给定XPath表达式匹配的DOM元素数组。                                                                                        |\n| clear             | 清除控制台                                                                                                                               |\n| copy              | copy(object) 将指定对象的字符串表示形式复制到剪贴板。                                                                                    |\n| debug             | 当调用指定的函数时，调试器将被调用并在Sources面板上的函数内部中断，从而逐步执行代码并进行调试。                                          |\n| dir               | dir(object)显示所有指定对象属性的对象样式列表。此方法是Console API console.dir()方法的别名。                                             |\n| dirxml            | dirxml(object)打印指定对象的XML表示形式。此方法等效于 console.dirxml（）方法。                                                           |\n| inspect           | inspect(object/function) 打开并在适当的面板中选择指定的元素或对象：DOM元素的Elements面板或JavaScript堆对象的Profiles面板。               |\n| getEventListeners | getEventListeners(object)返回在指定对象上注册的事件                                                                                      |\n| keys              | keys(object)返回一个数组，其中包含属于指定对象的属性的名称                                                                               |\n| monitor           | 调用指定的函数时，一条消息会记录到控制台，该消息指示函数名称以及调用该函数时传递给该函数的参数。                                         |\n| monitorEvents     | 当指定对象上发生指定事件之一时，事件对象将记录到控制台。您可以指定要监视的单个事件，事件数组或映射到预定义事件集合的一般事件“类型”之一。 |\n\n\n### 参考资源\n> https://developers.google.com/web/tools/chrome-devtools/console/utilities\n> https://developer.mozilla.org/zh-CN/docs/Web/API/Console\n> https://segmentfault.com/a/1190000002511877\n> https://zhuanlan.zhihu.com/p/80751021\n","source":"_posts/Chrome-console.md","raw":"---\ntitle: Chrome Console面板解析\ntags:\n  - Chrome\nabbrlink: f9dc4616\ndate: 2020-06-04 22:48:15\n---\n\n### Console 面板的打开方式\n\n- 在控制台打开的情况选择 console 按钮\n- 在 DevTool 的其他面板按 ESC 键打开面板（在开发者工具获得焦点的情况下）\n- 在右上角的菜单打开（setting--show--console--drawer）\n- 输入快捷键`Ctrl+Shift+P`，再输入 `Console`\n  ![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8ba63b12-9011-4489-b75d-32e70931f245/ia_10006.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=1e26fd27ec4bc21bcf8bc186962d9afeaecad3bc8c051bcdd7bea728cf847e20&X-Amz-SignedHeaders=host)\n\n<!-- more -->\n\n### 初识面板\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7470e1fc-93f0-492c-9cea-c11b7068fd42%2Fia_10007.png?table=block&id=62bf3817-6748-4b5d-9518-a9b547867b96&width=1920&cache=v2)\n\n#### 面板分析\n\n上面部分为工具栏\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F56d70051-22cb-4c15-abf3-ca8c6029b9e8%2Fia_10008.png?table=block&id=9ca55a30-451c-4b8c-a9a7-fe4c87edb887&width=1930&cache=v2)\n\n下面部分为命令区\n\n### 工具栏使用方法\n\n#### 展开关闭侧边栏\n\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/034a84f7-ff09-405e-b6af-06de66942d03/ia_10009.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=851b378ec7adbca42c456284dea0d4388a5a799e36bf932986a47c9c09a67444&X-Amz-SignedHeaders=host)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe8420630-3a03-4d41-8c17-2d1063e314c7%2Fia_10010.png?table=block&id=6740a6fd-97b5-4578-ae55-0445061ee7e4&width=680&cache=v2)\n\n点击可以切换侧边栏的展示和隐藏，点击一栏可以对命令区的进行过滤。默认是以关闭的，就不会对信息进行过滤。\n\n左侧的分类栏目主要由以下几类:\n\n- message\n  全部的信息，就是未分类的信息，是以下信息的综合。\n- user message\n- errors\n  日志级别为 error 的日志\n- warning\n  日志级别为 warning 的日志\n- info\n  日志级别为 info 的日志\n- verbose\n  日志级别为 verbose(冗长) 的日志\n\n前面会显示该栏目总的日志数量，具体的信息会显示在该栏目的子栏目上，比如文件路径，产生日志数量，文件名等\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F30bf9c56-64a7-44bb-baf6-abfceed31b25%2Fia_10011.png?table=block&id=5e7f4801-3e35-4ca4-93f6-1727bf458708&width=700&cache=v2)\n点击对应的消息会在右侧展示过滤的结果。\n\n#### 清空命令行\n\n\n\n点击这个图标<img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F55c4ba90-12e5-4c8d-a444-d8ffb6b7f358%2Fia_2100000923.png?table=block&id=1ae230a7-f71a-45be-9951-8d43de1c045d&width=50&cache=v2\" width=\"26px\" style=\"display:inline;\" class=\"nofancybox\"/>可以清空命令行\n\n列举出可以清空命令行的一些操作\n\n- 右键菜单 Clear Console\n- 在命令行输入 clear()\n- js 调用 console.clear()\n- 快捷键`Ctrl + L`\n\n#### 上下文选择\n\n默认的上下文环境为 top，也就是当前网页打开的环境。你也可以选择切换为你需要你的环境\n\n比如在[这个 iframe 页面](https://7q43c.csb.app/)，你就可以切换环境为 iframe 的环境。\n\n源代码:[源代码 1](https://codesandbox.io/s/upbeat-frog-c6n68?file=/index.html)和[源代码 2](https://codesandbox.io/s/focused-tesla-7q43c?file=/index.html)\n\n当我进入 iframe 的上下文的时候就可以打印出 iframe 里面的数据\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/fdf54ba8-dd56-4935-91a7-48e27e925e69/ia_10012.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=b8423d8019790b366f5b5bdd6d0e4e362cde07b8944d266fe6628196277fd106&X-Amz-SignedHeaders=host)\n\n#### 实时表达式\n\nLive Expressions 实时执行的表达式,可以创建多个表达式，失去焦点就会保存，创建之后也可以删除。\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b1aa84a6-3ab9-422f-baa9-c418116ad139/ia_10013.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115737Z&X-Amz-Expires=86400&X-Amz-Signature=b8685e3549955cb117e7f972ce598da2cb7dd0eee955908e92301c4e5fdaeb96&X-Amz-SignedHeaders=host)\n\n#### 过滤选项\n\n可以输入文本、正则等对打印的信息进行搜索和过滤。\n![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/215c7214-05c2-4942-9a87-8178f6d3963b/ia_10014.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115741Z&X-Amz-Expires=86400&X-Amz-Signature=afc8c7784fb56c4fc1510841bbebba79c83669142da5881f49dc72d6ec52a0ff&X-Amz-SignedHeaders=host)\n\n#### 打印级别过滤\n\n打印级别过滤有如下选项：\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffc4a5e0a-2696-4f9c-880a-84e39248de52%2Fia_10015.png?table=block&id=43688014-9914-4393-a871-6bbac1d767a1&width=410&cache=v2)\n\n> Default: 默认为警告信息和错误\n> Verbose: 冗长的的打印\n> 其余为常规的信息、警告、错误级别\n\n当过滤级别不是全部展示的话会在右侧显示被隐藏的条数。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffa7b507d-e454-42b5-ad81-3b2258214889%2Fia_10016.png?table=block&id=a35c0070-26d1-447c-affd-cf56d6649f5c&width=760&cache=v2)\n\n#### 设置\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F397dfef1-b042-4c2f-927b-9f0a56425e83%2Fia_10017.png?table=block&id=3a8c1228-853c-42c4-9ddf-8bf3029abc2b&width=1650&cache=v2)\n\n- Hide Network\n\n  是否对有关网络的日志进行隐藏\n  ![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8707384d-69e4-4cce-9cd5-e967263c4196/ia_10018.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=4f67283fda5edcbfd75d6da5df7d7a3c9ec75c138a6ffeafae410dbf65d38940&X-Amz-SignedHeaders=host)\n\n- Log XmlHttpRequests\n\n  是否打印 XHR 请求\n  ![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/391789bb-5628-456a-bb19-d0e41c47eec9/ia_10019.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=22889ab308ca051dd3433ff47784ff13320f826aade3050f3216aafcaced029e&X-Amz-SignedHeaders=host)\n\n- Preserve Log\n  是否保留日志，每次刷新是否自动清空日志。\n- Selected Context Only\n  是否只显示当前的上下文环境的日志信息\n  ![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8c250f18-9319-48c7-990e-91352f122ee2/ia_10020.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=23a1f71fe038c887a07bd2082d4f25e0f092dca12fa8387d7ea444a407cf8447&X-Amz-SignedHeaders=host)\n\n- Group Similar\n\n* Eager Evaluation\n\n  及时显示执行结果\n  ![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b670800f-02cb-4ea7-85d5-f2723abe5385/ia_10021.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115737Z&X-Amz-Expires=86400&X-Amz-Signature=768c3aed17c957d1050ea17ab04e3686d417e03e9c1e44c11e2df61ef25715b7&X-Amz-SignedHeaders=host)\n\n- Autocomplete From History\n\n  根据历史记录自动完成命令\n  ![](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f6512128-e4e9-4c64-abc0-345a15018d17/ia_10022.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=c3daf203f4632020f01d5c68314c0b5413f48be192d8fef281234b6f87b135f8&X-Amz-SignedHeaders=host)\n\n- Group Similar\n  相同日志归到一个组里面，此选项在禁用日志时间戳事才有效\n- Evaluate triggers user activation\n\n### 命令区使用方法\n\n#### 基本使用\n\n- 上一行输入，下一行输出结果\n- 键盘的上线键可根据历史记录自动补全\n\n#### 右键菜单\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7d8dea17-f9cd-498c-b270-c5178fdd89a6%2Fia_2100000900.png?table=block&id=2e591d09-3b01-41ec-a1b9-4f3565cd8995&width=360&cache=v2)\n\n- Clear console\n\n  清空命令区    \n\n- Clear console history\n\n  清空历史记录，这时上下键的补全将失效\n\n- Save as\n \n  存储当前的日志信息\n\n#### Console Api\n  参看[MDN 文档](https://developer.mozilla.org/zh-CN/docs/Web/API/Console)和[谷歌文档](https://developers.google.com/web/tools/chrome-devtools/console/api)\n\n#### Console 工具库 Api\n\n整理自[谷歌文档](https://developers.google.com/web/tools/chrome-devtools/console/utilities)\n\n| 语句              | 效果                                                                                                                                     |\n| ----------------- | ---------------------------------------------------------------------------------------------------------------------------------------- |\n| $_                | 返回最近执行的结果                                                                                                                       |\n| $0-$4             | 日志历史的最近五个DOM元素                                                                                                                |\n| $                 | document.querySelector(如果引用了jquery等库，就会被覆盖为引入的库)                                                                                                                   |\n| $$                | document.querySelectorAll                                                                                                                |\n| $x                | $x(path) 返回与给定XPath表达式匹配的DOM元素数组。                                                                                        |\n| clear             | 清除控制台                                                                                                                               |\n| copy              | copy(object) 将指定对象的字符串表示形式复制到剪贴板。                                                                                    |\n| debug             | 当调用指定的函数时，调试器将被调用并在Sources面板上的函数内部中断，从而逐步执行代码并进行调试。                                          |\n| dir               | dir(object)显示所有指定对象属性的对象样式列表。此方法是Console API console.dir()方法的别名。                                             |\n| dirxml            | dirxml(object)打印指定对象的XML表示形式。此方法等效于 console.dirxml（）方法。                                                           |\n| inspect           | inspect(object/function) 打开并在适当的面板中选择指定的元素或对象：DOM元素的Elements面板或JavaScript堆对象的Profiles面板。               |\n| getEventListeners | getEventListeners(object)返回在指定对象上注册的事件                                                                                      |\n| keys              | keys(object)返回一个数组，其中包含属于指定对象的属性的名称                                                                               |\n| monitor           | 调用指定的函数时，一条消息会记录到控制台，该消息指示函数名称以及调用该函数时传递给该函数的参数。                                         |\n| monitorEvents     | 当指定对象上发生指定事件之一时，事件对象将记录到控制台。您可以指定要监视的单个事件，事件数组或映射到预定义事件集合的一般事件“类型”之一。 |\n\n\n### 参考资源\n> https://developers.google.com/web/tools/chrome-devtools/console/utilities\n> https://developer.mozilla.org/zh-CN/docs/Web/API/Console\n> https://segmentfault.com/a/1190000002511877\n> https://zhuanlan.zhihu.com/p/80751021\n","slug":"Chrome-console","published":1,"updated":"2020-08-02T12:02:23.492Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnbi0008vwtf6nnn0ti6","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h3 id=\"Console-面板的打开方式\"><a href=\"#Console-面板的打开方式\" class=\"headerlink\" title=\"Console 面板的打开方式\"></a>Console 面板的打开方式</h3><ul><li>在控制台打开的情况选择 console 按钮</li><li>在 DevTool 的其他面板按 ESC 键打开面板（在开发者工具获得焦点的情况下）</li><li>在右上角的菜单打开（setting–show–console–drawer）</li><li>输入快捷键<code>Ctrl+Shift+P</code>，再输入 <code>Console</code><br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8ba63b12-9011-4489-b75d-32e70931f245/ia_10006.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=1e26fd27ec4bc21bcf8bc186962d9afeaecad3bc8c051bcdd7bea728cf847e20&X-Amz-SignedHeaders=host\" alt=\"\"></li></ul><a id=\"more\"></a><h3 id=\"初识面板\"><a href=\"#初识面板\" class=\"headerlink\" title=\"初识面板\"></a>初识面板</h3><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7470e1fc-93f0-492c-9cea-c11b7068fd42%2Fia_10007.png?table=block&id=62bf3817-6748-4b5d-9518-a9b547867b96&width=1920&cache=v2\" alt=\"\"></p><h4 id=\"面板分析\"><a href=\"#面板分析\" class=\"headerlink\" title=\"面板分析\"></a>面板分析</h4><p>上面部分为工具栏<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F56d70051-22cb-4c15-abf3-ca8c6029b9e8%2Fia_10008.png?table=block&id=9ca55a30-451c-4b8c-a9a7-fe4c87edb887&width=1930&cache=v2\" alt=\"\"></p><p>下面部分为命令区</p><h3 id=\"工具栏使用方法\"><a href=\"#工具栏使用方法\" class=\"headerlink\" title=\"工具栏使用方法\"></a>工具栏使用方法</h3><h4 id=\"展开关闭侧边栏\"><a href=\"#展开关闭侧边栏\" class=\"headerlink\" title=\"展开关闭侧边栏\"></a>展开关闭侧边栏</h4><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/034a84f7-ff09-405e-b6af-06de66942d03/ia_10009.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=851b378ec7adbca42c456284dea0d4388a5a799e36bf932986a47c9c09a67444&X-Amz-SignedHeaders=host\" alt=\"\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe8420630-3a03-4d41-8c17-2d1063e314c7%2Fia_10010.png?table=block&id=6740a6fd-97b5-4578-ae55-0445061ee7e4&width=680&cache=v2\" alt=\"\"></p><p>点击可以切换侧边栏的展示和隐藏，点击一栏可以对命令区的进行过滤。默认是以关闭的，就不会对信息进行过滤。</p><p>左侧的分类栏目主要由以下几类:</p><ul><li>message<br>全部的信息，就是未分类的信息，是以下信息的综合。</li><li>user message</li><li>errors<br>日志级别为 error 的日志</li><li>warning<br>日志级别为 warning 的日志</li><li>info<br>日志级别为 info 的日志</li><li>verbose<br>日志级别为 verbose(冗长) 的日志</li></ul><p>前面会显示该栏目总的日志数量，具体的信息会显示在该栏目的子栏目上，比如文件路径，产生日志数量，文件名等</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F30bf9c56-64a7-44bb-baf6-abfceed31b25%2Fia_10011.png?table=block&id=5e7f4801-3e35-4ca4-93f6-1727bf458708&width=700&cache=v2\" alt=\"\"><br>点击对应的消息会在右侧展示过滤的结果。</p><h4 id=\"清空命令行\"><a href=\"#清空命令行\" class=\"headerlink\" title=\"清空命令行\"></a>清空命令行</h4><p>点击这个图标<img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F55c4ba90-12e5-4c8d-a444-d8ffb6b7f358%2Fia_2100000923.png?table=block&id=1ae230a7-f71a-45be-9951-8d43de1c045d&width=50&cache=v2\" width=\"26px\" style=\"display:inline\" class=\"nofancybox\">可以清空命令行</p><p>列举出可以清空命令行的一些操作</p><ul><li>右键菜单 Clear Console</li><li>在命令行输入 clear()</li><li>js 调用 console.clear()</li><li>快捷键<code>Ctrl + L</code></li></ul><h4 id=\"上下文选择\"><a href=\"#上下文选择\" class=\"headerlink\" title=\"上下文选择\"></a>上下文选择</h4><p>默认的上下文环境为 top，也就是当前网页打开的环境。你也可以选择切换为你需要你的环境</p><p>比如在<a href=\"https://7q43c.csb.app/\" target=\"_blank\" rel=\"noopener\">这个 iframe 页面</a>，你就可以切换环境为 iframe 的环境。</p><p>源代码:<a href=\"https://codesandbox.io/s/upbeat-frog-c6n68?file=/index.html\" target=\"_blank\" rel=\"noopener\">源代码 1</a>和<a href=\"https://codesandbox.io/s/focused-tesla-7q43c?file=/index.html\" target=\"_blank\" rel=\"noopener\">源代码 2</a></p><p>当我进入 iframe 的上下文的时候就可以打印出 iframe 里面的数据<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/fdf54ba8-dd56-4935-91a7-48e27e925e69/ia_10012.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=b8423d8019790b366f5b5bdd6d0e4e362cde07b8944d266fe6628196277fd106&X-Amz-SignedHeaders=host\" alt=\"\"></p><h4 id=\"实时表达式\"><a href=\"#实时表达式\" class=\"headerlink\" title=\"实时表达式\"></a>实时表达式</h4><p>Live Expressions 实时执行的表达式,可以创建多个表达式，失去焦点就会保存，创建之后也可以删除。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b1aa84a6-3ab9-422f-baa9-c418116ad139/ia_10013.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115737Z&X-Amz-Expires=86400&X-Amz-Signature=b8685e3549955cb117e7f972ce598da2cb7dd0eee955908e92301c4e5fdaeb96&X-Amz-SignedHeaders=host\" alt=\"\"></p><h4 id=\"过滤选项\"><a href=\"#过滤选项\" class=\"headerlink\" title=\"过滤选项\"></a>过滤选项</h4><p>可以输入文本、正则等对打印的信息进行搜索和过滤。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/215c7214-05c2-4942-9a87-8178f6d3963b/ia_10014.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115741Z&X-Amz-Expires=86400&X-Amz-Signature=afc8c7784fb56c4fc1510841bbebba79c83669142da5881f49dc72d6ec52a0ff&X-Amz-SignedHeaders=host\" alt=\"\"></p><h4 id=\"打印级别过滤\"><a href=\"#打印级别过滤\" class=\"headerlink\" title=\"打印级别过滤\"></a>打印级别过滤</h4><p>打印级别过滤有如下选项：<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffc4a5e0a-2696-4f9c-880a-84e39248de52%2Fia_10015.png?table=block&id=43688014-9914-4393-a871-6bbac1d767a1&width=410&cache=v2\" alt=\"\"></p><blockquote><p>Default: 默认为警告信息和错误<br>Verbose: 冗长的的打印<br>其余为常规的信息、警告、错误级别</p></blockquote><p>当过滤级别不是全部展示的话会在右侧显示被隐藏的条数。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffa7b507d-e454-42b5-ad81-3b2258214889%2Fia_10016.png?table=block&id=a35c0070-26d1-447c-affd-cf56d6649f5c&width=760&cache=v2\" alt=\"\"></p><h4 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h4><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F397dfef1-b042-4c2f-927b-9f0a56425e83%2Fia_10017.png?table=block&id=3a8c1228-853c-42c4-9ddf-8bf3029abc2b&width=1650&cache=v2\" alt=\"\"></p><ul><li><p>Hide Network</p><p>是否对有关网络的日志进行隐藏<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8707384d-69e4-4cce-9cd5-e967263c4196/ia_10018.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=4f67283fda5edcbfd75d6da5df7d7a3c9ec75c138a6ffeafae410dbf65d38940&X-Amz-SignedHeaders=host\" alt=\"\"></p></li><li><p>Log XmlHttpRequests</p><p>是否打印 XHR 请求<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/391789bb-5628-456a-bb19-d0e41c47eec9/ia_10019.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=22889ab308ca051dd3433ff47784ff13320f826aade3050f3216aafcaced029e&X-Amz-SignedHeaders=host\" alt=\"\"></p></li><li><p>Preserve Log<br>是否保留日志，每次刷新是否自动清空日志。</p></li><li><p>Selected Context Only<br>是否只显示当前的上下文环境的日志信息<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8c250f18-9319-48c7-990e-91352f122ee2/ia_10020.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=23a1f71fe038c887a07bd2082d4f25e0f092dca12fa8387d7ea444a407cf8447&X-Amz-SignedHeaders=host\" alt=\"\"></p></li><li><p>Group Similar</p></li></ul><ul><li><p>Eager Evaluation</p><p>及时显示执行结果<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b670800f-02cb-4ea7-85d5-f2723abe5385/ia_10021.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115737Z&X-Amz-Expires=86400&X-Amz-Signature=768c3aed17c957d1050ea17ab04e3686d417e03e9c1e44c11e2df61ef25715b7&X-Amz-SignedHeaders=host\" alt=\"\"></p></li></ul><ul><li><p>Autocomplete From History</p><p>根据历史记录自动完成命令<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f6512128-e4e9-4c64-abc0-345a15018d17/ia_10022.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=c3daf203f4632020f01d5c68314c0b5413f48be192d8fef281234b6f87b135f8&X-Amz-SignedHeaders=host\" alt=\"\"></p></li><li><p>Group Similar<br>相同日志归到一个组里面，此选项在禁用日志时间戳事才有效</p></li><li><p>Evaluate triggers user activation</p></li></ul><h3 id=\"命令区使用方法\"><a href=\"#命令区使用方法\" class=\"headerlink\" title=\"命令区使用方法\"></a>命令区使用方法</h3><h4 id=\"基本使用\"><a href=\"#基本使用\" class=\"headerlink\" title=\"基本使用\"></a>基本使用</h4><ul><li>上一行输入，下一行输出结果</li><li>键盘的上线键可根据历史记录自动补全</li></ul><h4 id=\"右键菜单\"><a href=\"#右键菜单\" class=\"headerlink\" title=\"右键菜单\"></a>右键菜单</h4><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7d8dea17-f9cd-498c-b270-c5178fdd89a6%2Fia_2100000900.png?table=block&id=2e591d09-3b01-41ec-a1b9-4f3565cd8995&width=360&cache=v2\" alt=\"\"></p><ul><li><p>Clear console</p><p>清空命令区</p></li><li><p>Clear console history</p><p>清空历史记录，这时上下键的补全将失效</p></li><li><p>Save as</p><p>存储当前的日志信息</p></li></ul><h4 id=\"Console-Api\"><a href=\"#Console-Api\" class=\"headerlink\" title=\"Console Api\"></a>Console Api</h4><p>参看<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console\" target=\"_blank\" rel=\"noopener\">MDN 文档</a>和<a href=\"https://developers.google.com/web/tools/chrome-devtools/console/api\" target=\"_blank\" rel=\"noopener\">谷歌文档</a></p><h4 id=\"Console-工具库-Api\"><a href=\"#Console-工具库-Api\" class=\"headerlink\" title=\"Console 工具库 Api\"></a>Console 工具库 Api</h4><p>整理自<a href=\"https://developers.google.com/web/tools/chrome-devtools/console/utilities\" target=\"_blank\" rel=\"noopener\">谷歌文档</a></p><table><thead><tr><th>语句</th><th>效果</th></tr></thead><tbody><tr><td>$_</td><td>返回最近执行的结果</td></tr><tr><td>$0-$4</td><td>日志历史的最近五个DOM元素</td></tr><tr><td>$</td><td>document.querySelector(如果引用了jquery等库，就会被覆盖为引入的库)</td></tr><tr><td>$$</td><td>document.querySelectorAll</td></tr><tr><td>$x</td><td>$x(path) 返回与给定XPath表达式匹配的DOM元素数组。</td></tr><tr><td>clear</td><td>清除控制台</td></tr><tr><td>copy</td><td>copy(object) 将指定对象的字符串表示形式复制到剪贴板。</td></tr><tr><td>debug</td><td>当调用指定的函数时，调试器将被调用并在Sources面板上的函数内部中断，从而逐步执行代码并进行调试。</td></tr><tr><td>dir</td><td>dir(object)显示所有指定对象属性的对象样式列表。此方法是Console API console.dir()方法的别名。</td></tr><tr><td>dirxml</td><td>dirxml(object)打印指定对象的XML表示形式。此方法等效于 console.dirxml（）方法。</td></tr><tr><td>inspect</td><td>inspect(object/function) 打开并在适当的面板中选择指定的元素或对象：DOM元素的Elements面板或JavaScript堆对象的Profiles面板。</td></tr><tr><td>getEventListeners</td><td>getEventListeners(object)返回在指定对象上注册的事件</td></tr><tr><td>keys</td><td>keys(object)返回一个数组，其中包含属于指定对象的属性的名称</td></tr><tr><td>monitor</td><td>调用指定的函数时，一条消息会记录到控制台，该消息指示函数名称以及调用该函数时传递给该函数的参数。</td></tr><tr><td>monitorEvents</td><td>当指定对象上发生指定事件之一时，事件对象将记录到控制台。您可以指定要监视的单个事件，事件数组或映射到预定义事件集合的一般事件“类型”之一。</td></tr></tbody></table><h3 id=\"参考资源\"><a href=\"#参考资源\" class=\"headerlink\" title=\"参考资源\"></a>参考资源</h3><blockquote><p><a href=\"https://developers.google.com/web/tools/chrome-devtools/console/utilities\" target=\"_blank\" rel=\"noopener\">https://developers.google.com/web/tools/chrome-devtools/console/utilities</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-CN/docs/Web/API/Console</a><br><a href=\"https://segmentfault.com/a/1190000002511877\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000002511877</a><br><a href=\"https://zhuanlan.zhihu.com/p/80751021\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/p/80751021</a></p></blockquote><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h3 id=\"Console-面板的打开方式\"><a href=\"#Console-面板的打开方式\" class=\"headerlink\" title=\"Console 面板的打开方式\"></a>Console 面板的打开方式</h3><ul><li>在控制台打开的情况选择 console 按钮</li><li>在 DevTool 的其他面板按 ESC 键打开面板（在开发者工具获得焦点的情况下）</li><li>在右上角的菜单打开（setting–show–console–drawer）</li><li>输入快捷键<code>Ctrl+Shift+P</code>，再输入 <code>Console</code><br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8ba63b12-9011-4489-b75d-32e70931f245/ia_10006.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=1e26fd27ec4bc21bcf8bc186962d9afeaecad3bc8c051bcdd7bea728cf847e20&X-Amz-SignedHeaders=host\" alt=\"\"></li></ul>","more":"<h3 id=\"初识面板\"><a href=\"#初识面板\" class=\"headerlink\" title=\"初识面板\"></a>初识面板</h3><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7470e1fc-93f0-492c-9cea-c11b7068fd42%2Fia_10007.png?table=block&id=62bf3817-6748-4b5d-9518-a9b547867b96&width=1920&cache=v2\" alt=\"\"></p><h4 id=\"面板分析\"><a href=\"#面板分析\" class=\"headerlink\" title=\"面板分析\"></a>面板分析</h4><p>上面部分为工具栏<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F56d70051-22cb-4c15-abf3-ca8c6029b9e8%2Fia_10008.png?table=block&id=9ca55a30-451c-4b8c-a9a7-fe4c87edb887&width=1930&cache=v2\" alt=\"\"></p><p>下面部分为命令区</p><h3 id=\"工具栏使用方法\"><a href=\"#工具栏使用方法\" class=\"headerlink\" title=\"工具栏使用方法\"></a>工具栏使用方法</h3><h4 id=\"展开关闭侧边栏\"><a href=\"#展开关闭侧边栏\" class=\"headerlink\" title=\"展开关闭侧边栏\"></a>展开关闭侧边栏</h4><p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/034a84f7-ff09-405e-b6af-06de66942d03/ia_10009.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=851b378ec7adbca42c456284dea0d4388a5a799e36bf932986a47c9c09a67444&X-Amz-SignedHeaders=host\" alt=\"\"></p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe8420630-3a03-4d41-8c17-2d1063e314c7%2Fia_10010.png?table=block&id=6740a6fd-97b5-4578-ae55-0445061ee7e4&width=680&cache=v2\" alt=\"\"></p><p>点击可以切换侧边栏的展示和隐藏，点击一栏可以对命令区的进行过滤。默认是以关闭的，就不会对信息进行过滤。</p><p>左侧的分类栏目主要由以下几类:</p><ul><li>message<br>全部的信息，就是未分类的信息，是以下信息的综合。</li><li>user message</li><li>errors<br>日志级别为 error 的日志</li><li>warning<br>日志级别为 warning 的日志</li><li>info<br>日志级别为 info 的日志</li><li>verbose<br>日志级别为 verbose(冗长) 的日志</li></ul><p>前面会显示该栏目总的日志数量，具体的信息会显示在该栏目的子栏目上，比如文件路径，产生日志数量，文件名等</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F30bf9c56-64a7-44bb-baf6-abfceed31b25%2Fia_10011.png?table=block&id=5e7f4801-3e35-4ca4-93f6-1727bf458708&width=700&cache=v2\" alt=\"\"><br>点击对应的消息会在右侧展示过滤的结果。</p><h4 id=\"清空命令行\"><a href=\"#清空命令行\" class=\"headerlink\" title=\"清空命令行\"></a>清空命令行</h4><p>点击这个图标<img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F55c4ba90-12e5-4c8d-a444-d8ffb6b7f358%2Fia_2100000923.png?table=block&id=1ae230a7-f71a-45be-9951-8d43de1c045d&width=50&cache=v2\" width=\"26px\" style=\"display:inline\" class=\"nofancybox\">可以清空命令行</p><p>列举出可以清空命令行的一些操作</p><ul><li>右键菜单 Clear Console</li><li>在命令行输入 clear()</li><li>js 调用 console.clear()</li><li>快捷键<code>Ctrl + L</code></li></ul><h4 id=\"上下文选择\"><a href=\"#上下文选择\" class=\"headerlink\" title=\"上下文选择\"></a>上下文选择</h4><p>默认的上下文环境为 top，也就是当前网页打开的环境。你也可以选择切换为你需要你的环境</p><p>比如在<a href=\"https://7q43c.csb.app/\" target=\"_blank\" rel=\"noopener\">这个 iframe 页面</a>，你就可以切换环境为 iframe 的环境。</p><p>源代码:<a href=\"https://codesandbox.io/s/upbeat-frog-c6n68?file=/index.html\" target=\"_blank\" rel=\"noopener\">源代码 1</a>和<a href=\"https://codesandbox.io/s/focused-tesla-7q43c?file=/index.html\" target=\"_blank\" rel=\"noopener\">源代码 2</a></p><p>当我进入 iframe 的上下文的时候就可以打印出 iframe 里面的数据<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/fdf54ba8-dd56-4935-91a7-48e27e925e69/ia_10012.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=b8423d8019790b366f5b5bdd6d0e4e362cde07b8944d266fe6628196277fd106&X-Amz-SignedHeaders=host\" alt=\"\"></p><h4 id=\"实时表达式\"><a href=\"#实时表达式\" class=\"headerlink\" title=\"实时表达式\"></a>实时表达式</h4><p>Live Expressions 实时执行的表达式,可以创建多个表达式，失去焦点就会保存，创建之后也可以删除。<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b1aa84a6-3ab9-422f-baa9-c418116ad139/ia_10013.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115737Z&X-Amz-Expires=86400&X-Amz-Signature=b8685e3549955cb117e7f972ce598da2cb7dd0eee955908e92301c4e5fdaeb96&X-Amz-SignedHeaders=host\" alt=\"\"></p><h4 id=\"过滤选项\"><a href=\"#过滤选项\" class=\"headerlink\" title=\"过滤选项\"></a>过滤选项</h4><p>可以输入文本、正则等对打印的信息进行搜索和过滤。<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/215c7214-05c2-4942-9a87-8178f6d3963b/ia_10014.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115741Z&X-Amz-Expires=86400&X-Amz-Signature=afc8c7784fb56c4fc1510841bbebba79c83669142da5881f49dc72d6ec52a0ff&X-Amz-SignedHeaders=host\" alt=\"\"></p><h4 id=\"打印级别过滤\"><a href=\"#打印级别过滤\" class=\"headerlink\" title=\"打印级别过滤\"></a>打印级别过滤</h4><p>打印级别过滤有如下选项：<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffc4a5e0a-2696-4f9c-880a-84e39248de52%2Fia_10015.png?table=block&id=43688014-9914-4393-a871-6bbac1d767a1&width=410&cache=v2\" alt=\"\"></p><blockquote><p>Default: 默认为警告信息和错误<br>Verbose: 冗长的的打印<br>其余为常规的信息、警告、错误级别</p></blockquote><p>当过滤级别不是全部展示的话会在右侧显示被隐藏的条数。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ffa7b507d-e454-42b5-ad81-3b2258214889%2Fia_10016.png?table=block&id=a35c0070-26d1-447c-affd-cf56d6649f5c&width=760&cache=v2\" alt=\"\"></p><h4 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h4><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F397dfef1-b042-4c2f-927b-9f0a56425e83%2Fia_10017.png?table=block&id=3a8c1228-853c-42c4-9ddf-8bf3029abc2b&width=1650&cache=v2\" alt=\"\"></p><ul><li><p>Hide Network</p><p>是否对有关网络的日志进行隐藏<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8707384d-69e4-4cce-9cd5-e967263c4196/ia_10018.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=4f67283fda5edcbfd75d6da5df7d7a3c9ec75c138a6ffeafae410dbf65d38940&X-Amz-SignedHeaders=host\" alt=\"\"></p></li><li><p>Log XmlHttpRequests</p><p>是否打印 XHR 请求<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/391789bb-5628-456a-bb19-d0e41c47eec9/ia_10019.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=22889ab308ca051dd3433ff47784ff13320f826aade3050f3216aafcaced029e&X-Amz-SignedHeaders=host\" alt=\"\"></p></li><li><p>Preserve Log<br>是否保留日志，每次刷新是否自动清空日志。</p></li><li><p>Selected Context Only<br>是否只显示当前的上下文环境的日志信息<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8c250f18-9319-48c7-990e-91352f122ee2/ia_10020.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=23a1f71fe038c887a07bd2082d4f25e0f092dca12fa8387d7ea444a407cf8447&X-Amz-SignedHeaders=host\" alt=\"\"></p></li><li><p>Group Similar</p></li></ul><ul><li><p>Eager Evaluation</p><p>及时显示执行结果<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/b670800f-02cb-4ea7-85d5-f2723abe5385/ia_10021.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115737Z&X-Amz-Expires=86400&X-Amz-Signature=768c3aed17c957d1050ea17ab04e3686d417e03e9c1e44c11e2df61ef25715b7&X-Amz-SignedHeaders=host\" alt=\"\"></p></li></ul><ul><li><p>Autocomplete From History</p><p>根据历史记录自动完成命令<br><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/f6512128-e4e9-4c64-abc0-345a15018d17/ia_10022.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20200802%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20200802T115738Z&X-Amz-Expires=86400&X-Amz-Signature=c3daf203f4632020f01d5c68314c0b5413f48be192d8fef281234b6f87b135f8&X-Amz-SignedHeaders=host\" alt=\"\"></p></li><li><p>Group Similar<br>相同日志归到一个组里面，此选项在禁用日志时间戳事才有效</p></li><li><p>Evaluate triggers user activation</p></li></ul><h3 id=\"命令区使用方法\"><a href=\"#命令区使用方法\" class=\"headerlink\" title=\"命令区使用方法\"></a>命令区使用方法</h3><h4 id=\"基本使用\"><a href=\"#基本使用\" class=\"headerlink\" title=\"基本使用\"></a>基本使用</h4><ul><li>上一行输入，下一行输出结果</li><li>键盘的上线键可根据历史记录自动补全</li></ul><h4 id=\"右键菜单\"><a href=\"#右键菜单\" class=\"headerlink\" title=\"右键菜单\"></a>右键菜单</h4><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7d8dea17-f9cd-498c-b270-c5178fdd89a6%2Fia_2100000900.png?table=block&id=2e591d09-3b01-41ec-a1b9-4f3565cd8995&width=360&cache=v2\" alt=\"\"></p><ul><li><p>Clear console</p><p>清空命令区</p></li><li><p>Clear console history</p><p>清空历史记录，这时上下键的补全将失效</p></li><li><p>Save as</p><p>存储当前的日志信息</p></li></ul><h4 id=\"Console-Api\"><a href=\"#Console-Api\" class=\"headerlink\" title=\"Console Api\"></a>Console Api</h4><p>参看<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console\" target=\"_blank\" rel=\"noopener\">MDN 文档</a>和<a href=\"https://developers.google.com/web/tools/chrome-devtools/console/api\" target=\"_blank\" rel=\"noopener\">谷歌文档</a></p><h4 id=\"Console-工具库-Api\"><a href=\"#Console-工具库-Api\" class=\"headerlink\" title=\"Console 工具库 Api\"></a>Console 工具库 Api</h4><p>整理自<a href=\"https://developers.google.com/web/tools/chrome-devtools/console/utilities\" target=\"_blank\" rel=\"noopener\">谷歌文档</a></p><table><thead><tr><th>语句</th><th>效果</th></tr></thead><tbody><tr><td>$_</td><td>返回最近执行的结果</td></tr><tr><td>$0-$4</td><td>日志历史的最近五个DOM元素</td></tr><tr><td>$</td><td>document.querySelector(如果引用了jquery等库，就会被覆盖为引入的库)</td></tr><tr><td>$$</td><td>document.querySelectorAll</td></tr><tr><td>$x</td><td>$x(path) 返回与给定XPath表达式匹配的DOM元素数组。</td></tr><tr><td>clear</td><td>清除控制台</td></tr><tr><td>copy</td><td>copy(object) 将指定对象的字符串表示形式复制到剪贴板。</td></tr><tr><td>debug</td><td>当调用指定的函数时，调试器将被调用并在Sources面板上的函数内部中断，从而逐步执行代码并进行调试。</td></tr><tr><td>dir</td><td>dir(object)显示所有指定对象属性的对象样式列表。此方法是Console API console.dir()方法的别名。</td></tr><tr><td>dirxml</td><td>dirxml(object)打印指定对象的XML表示形式。此方法等效于 console.dirxml（）方法。</td></tr><tr><td>inspect</td><td>inspect(object/function) 打开并在适当的面板中选择指定的元素或对象：DOM元素的Elements面板或JavaScript堆对象的Profiles面板。</td></tr><tr><td>getEventListeners</td><td>getEventListeners(object)返回在指定对象上注册的事件</td></tr><tr><td>keys</td><td>keys(object)返回一个数组，其中包含属于指定对象的属性的名称</td></tr><tr><td>monitor</td><td>调用指定的函数时，一条消息会记录到控制台，该消息指示函数名称以及调用该函数时传递给该函数的参数。</td></tr><tr><td>monitorEvents</td><td>当指定对象上发生指定事件之一时，事件对象将记录到控制台。您可以指定要监视的单个事件，事件数组或映射到预定义事件集合的一般事件“类型”之一。</td></tr></tbody></table><h3 id=\"参考资源\"><a href=\"#参考资源\" class=\"headerlink\" title=\"参考资源\"></a>参考资源</h3><blockquote><p><a href=\"https://developers.google.com/web/tools/chrome-devtools/console/utilities\" target=\"_blank\" rel=\"noopener\">https://developers.google.com/web/tools/chrome-devtools/console/utilities</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-CN/docs/Web/API/Console</a><br><a href=\"https://segmentfault.com/a/1190000002511877\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000002511877</a><br><a href=\"https://zhuanlan.zhihu.com/p/80751021\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/p/80751021</a></p></blockquote><!-- rebuild by neat -->"},{"title":"Your connection is not private | 您的连接不是私密连接的解决办法","abbrlink":"610b560b","date":"2020-06-19T03:41:33.000Z","_content":"\n随着 Chrome 的升级会推荐使用 https 的模式开发，当我们使用 https 的模式进行开发时让然会出现以下提示：\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F77decc5a-0cc6-4b9c-b9fe-6a6ee024a37a%2Fia_10006.png?table=block&id=72b9e9cf-f2a0-448f-9efc-1e49592b5c73&width=1340&cache=v2)\n\n<!-- more -->\n\n我们发现点击高级仍旧无法找到可以访问的方式（已经将域名屏蔽）\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6264bad2-5a8c-4e09-a3c6-edc6c4f96810%2Fia_10007.png?table=block&id=07b766db-4bb2-4027-9819-69a586dd210c&width=1320&cache=v2)\n\n## 解决办法\n\n原来在 Chrome 会对`HSTS`进行检查，但是也增加了一个 hack 来**承认有风险的情况**下访问网页，那就是输入**thisisunsafe**。不用管，直接在页面输入，而不是在地址栏，直接输入这一句就可以了。\n\n## 源代码\n\nChrome 相关的的[源代码地址](https://chromium.googlesource.com/chromium/src/+/master/components/security_interstitials/core/browser/resources/interstitial_large.js)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa8a09a55-9c77-449a-a414-ded26c9029e2%2Fia_10008.png?table=block&id=c88d20f5-826b-4dab-b6b5-b2adf6cf7fef&width=2500&cache=v2)\n也不用管大小写，直接输入就是了。\n\n## 参考\n\n> https://dev.to/gautamkrishnar/quickbits-1-skipping-the-chrome-your-connection-is-not-private-warning-4kp1\n> https://stackoverflow.com/questions/35274659/does-using-badidea-or-thisisunsafe-to-bypass-a-chrome-certificate-hsts-error\n> https://chromium.googlesource.com/chromium/src/+/master/components/security_interstitials/core/browser/resources/interstitial_large.js\n","source":"_posts/Your-connection-is-not-private-解决办法.md","raw":"---\ntitle: Your connection is not private | 您的连接不是私密连接的解决办法\nabbrlink: 610b560b\ndate: 2020-06-19 11:41:33\ntags:\n  - Chrome\n---\n\n随着 Chrome 的升级会推荐使用 https 的模式开发，当我们使用 https 的模式进行开发时让然会出现以下提示：\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F77decc5a-0cc6-4b9c-b9fe-6a6ee024a37a%2Fia_10006.png?table=block&id=72b9e9cf-f2a0-448f-9efc-1e49592b5c73&width=1340&cache=v2)\n\n<!-- more -->\n\n我们发现点击高级仍旧无法找到可以访问的方式（已经将域名屏蔽）\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6264bad2-5a8c-4e09-a3c6-edc6c4f96810%2Fia_10007.png?table=block&id=07b766db-4bb2-4027-9819-69a586dd210c&width=1320&cache=v2)\n\n## 解决办法\n\n原来在 Chrome 会对`HSTS`进行检查，但是也增加了一个 hack 来**承认有风险的情况**下访问网页，那就是输入**thisisunsafe**。不用管，直接在页面输入，而不是在地址栏，直接输入这一句就可以了。\n\n## 源代码\n\nChrome 相关的的[源代码地址](https://chromium.googlesource.com/chromium/src/+/master/components/security_interstitials/core/browser/resources/interstitial_large.js)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa8a09a55-9c77-449a-a414-ded26c9029e2%2Fia_10008.png?table=block&id=c88d20f5-826b-4dab-b6b5-b2adf6cf7fef&width=2500&cache=v2)\n也不用管大小写，直接输入就是了。\n\n## 参考\n\n> https://dev.to/gautamkrishnar/quickbits-1-skipping-the-chrome-your-connection-is-not-private-warning-4kp1\n> https://stackoverflow.com/questions/35274659/does-using-badidea-or-thisisunsafe-to-bypass-a-chrome-certificate-hsts-error\n> https://chromium.googlesource.com/chromium/src/+/master/components/security_interstitials/core/browser/resources/interstitial_large.js\n","slug":"Your-connection-is-not-private-解决办法","published":1,"updated":"2020-08-02T11:54:56.665Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnbk000bvwtf9e2d6m97","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><p>随着 Chrome 的升级会推荐使用 https 的模式开发，当我们使用 https 的模式进行开发时让然会出现以下提示：<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F77decc5a-0cc6-4b9c-b9fe-6a6ee024a37a%2Fia_10006.png?table=block&id=72b9e9cf-f2a0-448f-9efc-1e49592b5c73&width=1340&cache=v2\" alt=\"\"></p><a id=\"more\"></a><p>我们发现点击高级仍旧无法找到可以访问的方式（已经将域名屏蔽）</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6264bad2-5a8c-4e09-a3c6-edc6c4f96810%2Fia_10007.png?table=block&id=07b766db-4bb2-4027-9819-69a586dd210c&width=1320&cache=v2\" alt=\"\"></p><h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><p>原来在 Chrome 会对<code>HSTS</code>进行检查，但是也增加了一个 hack 来<strong>承认有风险的情况</strong>下访问网页，那就是输入<strong>thisisunsafe</strong>。不用管，直接在页面输入，而不是在地址栏，直接输入这一句就可以了。</p><h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>Chrome 相关的的<a href=\"https://chromium.googlesource.com/chromium/src/+/master/components/security_interstitials/core/browser/resources/interstitial_large.js\" target=\"_blank\" rel=\"noopener\">源代码地址</a></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa8a09a55-9c77-449a-a414-ded26c9029e2%2Fia_10008.png?table=block&id=c88d20f5-826b-4dab-b6b5-b2adf6cf7fef&width=2500&cache=v2\" alt=\"\"><br>也不用管大小写，直接输入就是了。</p><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><blockquote><p><a href=\"https://dev.to/gautamkrishnar/quickbits-1-skipping-the-chrome-your-connection-is-not-private-warning-4kp1\" target=\"_blank\" rel=\"noopener\">https://dev.to/gautamkrishnar/quickbits-1-skipping-the-chrome-your-connection-is-not-private-warning-4kp1</a><br><a href=\"https://stackoverflow.com/questions/35274659/does-using-badidea-or-thisisunsafe-to-bypass-a-chrome-certificate-hsts-error\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/35274659/does-using-badidea-or-thisisunsafe-to-bypass-a-chrome-certificate-hsts-error</a><br><a href=\"https://chromium.googlesource.com/chromium/src/+/master/components/security_interstitials/core/browser/resources/interstitial_large.js\" target=\"_blank\" rel=\"noopener\">https://chromium.googlesource.com/chromium/src/+/master/components/security_interstitials/core/browser/resources/interstitial_large.js</a></p></blockquote><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><p>随着 Chrome 的升级会推荐使用 https 的模式开发，当我们使用 https 的模式进行开发时让然会出现以下提示：<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F77decc5a-0cc6-4b9c-b9fe-6a6ee024a37a%2Fia_10006.png?table=block&id=72b9e9cf-f2a0-448f-9efc-1e49592b5c73&width=1340&cache=v2\" alt=\"\"></p>","more":"<p>我们发现点击高级仍旧无法找到可以访问的方式（已经将域名屏蔽）</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6264bad2-5a8c-4e09-a3c6-edc6c4f96810%2Fia_10007.png?table=block&id=07b766db-4bb2-4027-9819-69a586dd210c&width=1320&cache=v2\" alt=\"\"></p><h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><p>原来在 Chrome 会对<code>HSTS</code>进行检查，但是也增加了一个 hack 来<strong>承认有风险的情况</strong>下访问网页，那就是输入<strong>thisisunsafe</strong>。不用管，直接在页面输入，而不是在地址栏，直接输入这一句就可以了。</p><h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>Chrome 相关的的<a href=\"https://chromium.googlesource.com/chromium/src/+/master/components/security_interstitials/core/browser/resources/interstitial_large.js\" target=\"_blank\" rel=\"noopener\">源代码地址</a></p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa8a09a55-9c77-449a-a414-ded26c9029e2%2Fia_10008.png?table=block&id=c88d20f5-826b-4dab-b6b5-b2adf6cf7fef&width=2500&cache=v2\" alt=\"\"><br>也不用管大小写，直接输入就是了。</p><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><blockquote><p><a href=\"https://dev.to/gautamkrishnar/quickbits-1-skipping-the-chrome-your-connection-is-not-private-warning-4kp1\" target=\"_blank\" rel=\"noopener\">https://dev.to/gautamkrishnar/quickbits-1-skipping-the-chrome-your-connection-is-not-private-warning-4kp1</a><br><a href=\"https://stackoverflow.com/questions/35274659/does-using-badidea-or-thisisunsafe-to-bypass-a-chrome-certificate-hsts-error\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/35274659/does-using-badidea-or-thisisunsafe-to-bypass-a-chrome-certificate-hsts-error</a><br><a href=\"https://chromium.googlesource.com/chromium/src/+/master/components/security_interstitials/core/browser/resources/interstitial_large.js\" target=\"_blank\" rel=\"noopener\">https://chromium.googlesource.com/chromium/src/+/master/components/security_interstitials/core/browser/resources/interstitial_large.js</a></p></blockquote><!-- rebuild by neat -->"},{"title":"走，再走一波干海子","abbrlink":"4a5b4c21","date":"2020-04-06T03:24:54.000Z","_content":"说起干海子，因为我并不玩抖音，也不刷微博，其实我并不了解。但是却不经意间去了两次了，一次是前公司2019年6月底的团建，还有一次就是昨天和朋友一起去。\n\n![image.png](https://i.loli.net/2020/04/06/VkvcI1nTaeRMB28.png)\n\n<!-- more -->\n说起来还是真的挺不好意思，因为原计划的八点出发因为我的迟到不得不推迟，真是迟到害人啊，要改😂。\n\n一路上心情很忐忑，一是由于迟到了，二是因为这是第二次去，心里面自觉地回想去第一次的场景，想着当时是什么人，什么天气，在哪里拍了照，这次去的话一定要看看两次有什么区别。文中的图片，翠绿的是去年的，有雪的是今年的。\n\n## 旅途\n\n逐渐进入阿坝那边，两边的山也起来了，有的光秃秃，有的长满了树，被植被覆盖着。穿过一条条隧道，山的两面呈现出“阴阳割昏晓”的明暗山体。我想这是在成都和自贡是看不到的。\n\n![image.png](https://i.loli.net/2020/04/06/GopHWdvsmwZY9EK.png)\n\n思绪恍惚间想起了我第一次来这边的时候，那是2015年8月底，“误打误撞”安排的来这边支教。那时候满脑子的新鲜和好奇，没见过山没见过水，瞪大了眼睛，望着这一切。\n\n![image.png](https://i.loli.net/2020/04/06/mCv8IQJ4nOTklR7.png)\n\n![image.png](https://i.loli.net/2020/04/06/o38eIPV1djM7GfF.png)\n\n回到旅途，车还是在那个熟悉的地点停车整顿一下，我本身就对这个地方有印象，因为这是去的路上第一个可以休息停靠的地方，对于坐了这么久的车的人来说是不会错过的。\n\n急忙的拿出手机，朝向了山谷那边。\n\n夏天的山果真更为翠绿啊，因为昨晚刚下过雨，太阳还没放出来，云也显得有些抑郁，灰蒙蒙的。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4aa6f007-f5cb-4a7d-884f-a3e67108e2de%2Fia_10010.png?table=block&id=d9d8d360-489f-4066-836a-bb4108510d94&width=2890&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F031a6743-9784-4815-86fe-be015a2c5ebb%2Fia_10011.png?table=block&id=68fce6b5-7389-4958-bd53-234225f4c735&width=3840&cache=v2)\n\n路过一隅，发现云也半隐半现地遮盖着山，一半暴露在阳光下面，另一半自觉地躲藏在阴影之中。\n\n![image.png](https://i.loli.net/2020/04/06/NLaqTmrJoIfUZhp.png)\n\n一时，车上传来了呼叫声，既是惊讶又是惊喜，大家纷纷转向这美丽的景色。在那山顶上，是一片片还未消融的雪，皑皑地装饰着山顶。\n\n![image.png](https://i.loli.net/2020/04/06/gD4LRp9lAyJKzeh.png)\n\n其实我是见过这般雪的，印象是2016年的开春，到这边滑雪，看到山顶上还静静躺着白雪，还有一缕缕蒸腾的白汽换换飘向天空，随风飘荡。总看不厌，也看不烦。就像之前支教的学校的门口的大山一样，厚重又不失庄严。我想，这再美不过了。\n\n到了这边，因为山路比较窄，我们换成小车继续前行，大家的心情更加期待了。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fde51e27a-3181-4a7e-aa33-08f4098d1a7c%2Fia_10014.png?table=block&id=8c2cdf51-4c0e-4721-8b99-c3bdbd16abe6&width=3000&cache=v2)\n\n想起去年，我们大家是大包垒小包，自己背着露营的装备，从这里开始正式徒步前行，一人接一人，远远看去，仿佛一条长龙在慢慢蠕动着......\n\n![image.png](https://i.loli.net/2020/04/06/wEmRI2dv6sCZ8HU.png)\n\n## 上山\n当小车到达山脚的时候，我们的徒步才正式开始。下车回头一望，只见这景色俨然没有了昔日的苍翠欲滴，山体被一种棕绿打底，山顶则还还残留着点点白雪（从图中的小路可以看出来这的确是同一群山）。\n\n![image.png](https://i.loli.net/2020/04/06/Q8vCw1XHtgZbm2u.png)\n\n![image.png](https://i.loli.net/2020/04/06/QthHp7IMkrCLSA4.png)\n\n沿着石阶走两步，向后一望果真是银装素裹，分外妖娆。近处是阳光照射，远处是白雪裹树，天上的云也奔涌着，仿佛就是冬天一样。\n\n![image.png](https://i.loli.net/2020/04/06/aZctfBD4EoXGV7y.png)\n\n![image.png](https://i.loli.net/2020/04/06/eEiFqUnPvGlIjpR.png)\n\n上山的路两边都是郁郁葱葱的小树林，此时也褪去绿叶，只留下枯黄枝丫，显得略微萧条，不再茂盛。\n\n![image.png](https://i.loli.net/2020/04/06/M2JR7wziDBCgKEc.png)\n\n![image.png](https://i.loli.net/2020/04/06/fGqLtiAndOzZI2Q.png)\n\n再沿着路往上走，还有一些残留的积雪还在这里，大家都在开始玩雪了。有个小朋友还抱了一大坨雪来做了一个小雪人，大家新奇且兴奋，都簇拥上来，争先恐后驻足拍照。\n\n![image.png](https://i.loli.net/2020/04/06/YTqjBihLFRM4pcy.png)\n\n越往上走，视野越开阔，无须多言，银装素裹，此时正应吟诗一首：\n> 北国风光，千里冰封，万里雪飘。望长城内外，惟余莽莽；大河上下，顿失滔滔。山舞银蛇，原驰蜡象，欲与天公试比高。须晴日，看红装素裹，分外妖娆。\n\n虽然余雪不多，但是我想也应景了。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7fa06eb3-9a6d-4a68-b85b-fe7a70aa8d70%2Fia_10023.png?table=block&id=e59502d7-f95b-477c-928c-473023d887b3&width=3360&cache=v2)\n\n近处的地方还覆盖着一层雪，薄薄的一层。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe7976227-6e8f-40fc-9cce-f65fb7e9a737%2Fia_10024.png?table=block&id=b50e8765-d9cd-4f7f-a2c2-4e2a9185e67b&width=3370&cache=v2)\n\n来听听踩上去的声音\n\n<div style=\"width:100%;height:0px;position:relative;padding-bottom:56.327%;margin-bottom:12px;\"><iframe src=\"https://streamja.com/embed/3n0Rq\" frameborder=\"0\" width=\"100%\" height=\"100%\" allowfullscreen style=\"width:100%;height:100%;position:absolute;\"></iframe></div>\n\n这里的树木，都没有叶子，光秃秃的指着天空，沐浴着阳光。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2507081c-036e-4e09-b827-7e3ca8237454%2Fia_10025.png?table=block&id=570c6df7-a892-4d30-98b9-4199bf061bf6&width=3370&cache=v2)\n\n多走两步，在山上一处平台驻足，此时的景色真的可谓是似曾相识。\n\n![image.png](https://i.loli.net/2020/04/06/kcCgPIQTphOyNGo.png)\n\n![image.png](https://i.loli.net/2020/04/06/SabZIuX8Akt91jl.png)\n\n去年是多么的茂盛，今年就显得贫瘠，没有生机。前后一对比，顿时一股苍凉涌入心中。\n\n突然想着之前去徒步回去之后写的[心理学之茶哥分享：前端包管理工具整理](https://juejin.im/post/5d18d2fd6fb9a07eee5ee343)，就是用的这边的山脉图。\n\n![](https://ftp.bmp.ovh/imgs/2020/04/57aadf62b1874abd.jpg)\n\n## 山顶\n\n\n抵达山顶，风超级大。我们立马放下包裹，开始欣赏这山顶的景色。\n\n\n![image.png](https://i.loli.net/2020/04/06/1U7zKxF2CMIJcDB.png)\n\n![image.png](https://i.loli.net/2020/04/06/wEfKbAmDhtVMsyl.png)\n\n这么辽阔宽广，好想自己是一只鸟，可以在这里无忧无虑的飞，没有那么多问题思考，也不知道自己是谁。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F401cb47f-6eb7-4eb5-9868-305e62f3fe02%2Fia_10031.png?table=block&id=8abcabb9-f224-425c-8ed5-21eaa0cc44fb&width=2520&cache=v2)\n\n![image.png](https://i.loli.net/2020/04/06/M4qOjzUL1gB6JGC.png)\n\n我也激动的拍下了自己的照片，回到家和去年的照片对比起来：\n\n![image.png](https://i.loli.net/2020/04/06/pg58lSHaVFbewnj.png)\n\n![image.png](https://i.loli.net/2020/04/06/WVnCfH6c72gop3T.png)\n\n因为那里有秋千，去年拍了，因此今年也不能落下。看看我沉浸在自己的世界的样子吧！🤣\n\n<div style=\"width:100%;height:0px;position:relative;padding-bottom:56.327%;margin-bottom:12px;\"><iframe src=\"https://streamja.com/embed/B4BWn\" frameborder=\"0\" width=\"100%\" height=\"100%\" allowfullscreen style=\"width:100%;height:100%;position:absolute;\"></iframe></div>\n\n\n## 下山\n然后就是下山了，这一路都是石板路，已经不再是去年的泥巴路和石板路掺杂着，走到山脚，回首望去，仿佛青山幽幽，回到了去年的时光。\n\n![image.png](https://i.loli.net/2020/04/06/gVtvXjnEpTH5hfG.png)\n\n## 最后\n\n写到这里，不知不觉已经下午三点了。\n\n整理着，觉得思绪很多，不禁感叹时间过得好快。看着往日的青青苍翠，今天的萧条苍凉，而这都快一年了。一年里发生的事情很多，人走人留，都在悄悄变化着，而自己是否有所改变来对得起这一年时间。\n\n我觉得最糟糕的就是没有改变，昨天什么样，今天还是什么样，明天还是什么样。没有改变就没有进步，没有进步怎么对得起这段时间呢？我已经是一个大人了啊。\n\n用一个在这个年纪该有的眼光来审视这个世界吧！\n\n\n","source":"_posts/again-ganhaizi.md","raw":"---\ntitle: 走，再走一波干海子\ntags:\n  - 干海子\nabbrlink: 4a5b4c21\ndate: 2020-04-06 11:24:54\n---\n说起干海子，因为我并不玩抖音，也不刷微博，其实我并不了解。但是却不经意间去了两次了，一次是前公司2019年6月底的团建，还有一次就是昨天和朋友一起去。\n\n![image.png](https://i.loli.net/2020/04/06/VkvcI1nTaeRMB28.png)\n\n<!-- more -->\n说起来还是真的挺不好意思，因为原计划的八点出发因为我的迟到不得不推迟，真是迟到害人啊，要改😂。\n\n一路上心情很忐忑，一是由于迟到了，二是因为这是第二次去，心里面自觉地回想去第一次的场景，想着当时是什么人，什么天气，在哪里拍了照，这次去的话一定要看看两次有什么区别。文中的图片，翠绿的是去年的，有雪的是今年的。\n\n## 旅途\n\n逐渐进入阿坝那边，两边的山也起来了，有的光秃秃，有的长满了树，被植被覆盖着。穿过一条条隧道，山的两面呈现出“阴阳割昏晓”的明暗山体。我想这是在成都和自贡是看不到的。\n\n![image.png](https://i.loli.net/2020/04/06/GopHWdvsmwZY9EK.png)\n\n思绪恍惚间想起了我第一次来这边的时候，那是2015年8月底，“误打误撞”安排的来这边支教。那时候满脑子的新鲜和好奇，没见过山没见过水，瞪大了眼睛，望着这一切。\n\n![image.png](https://i.loli.net/2020/04/06/mCv8IQJ4nOTklR7.png)\n\n![image.png](https://i.loli.net/2020/04/06/o38eIPV1djM7GfF.png)\n\n回到旅途，车还是在那个熟悉的地点停车整顿一下，我本身就对这个地方有印象，因为这是去的路上第一个可以休息停靠的地方，对于坐了这么久的车的人来说是不会错过的。\n\n急忙的拿出手机，朝向了山谷那边。\n\n夏天的山果真更为翠绿啊，因为昨晚刚下过雨，太阳还没放出来，云也显得有些抑郁，灰蒙蒙的。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4aa6f007-f5cb-4a7d-884f-a3e67108e2de%2Fia_10010.png?table=block&id=d9d8d360-489f-4066-836a-bb4108510d94&width=2890&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F031a6743-9784-4815-86fe-be015a2c5ebb%2Fia_10011.png?table=block&id=68fce6b5-7389-4958-bd53-234225f4c735&width=3840&cache=v2)\n\n路过一隅，发现云也半隐半现地遮盖着山，一半暴露在阳光下面，另一半自觉地躲藏在阴影之中。\n\n![image.png](https://i.loli.net/2020/04/06/NLaqTmrJoIfUZhp.png)\n\n一时，车上传来了呼叫声，既是惊讶又是惊喜，大家纷纷转向这美丽的景色。在那山顶上，是一片片还未消融的雪，皑皑地装饰着山顶。\n\n![image.png](https://i.loli.net/2020/04/06/gD4LRp9lAyJKzeh.png)\n\n其实我是见过这般雪的，印象是2016年的开春，到这边滑雪，看到山顶上还静静躺着白雪，还有一缕缕蒸腾的白汽换换飘向天空，随风飘荡。总看不厌，也看不烦。就像之前支教的学校的门口的大山一样，厚重又不失庄严。我想，这再美不过了。\n\n到了这边，因为山路比较窄，我们换成小车继续前行，大家的心情更加期待了。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fde51e27a-3181-4a7e-aa33-08f4098d1a7c%2Fia_10014.png?table=block&id=8c2cdf51-4c0e-4721-8b99-c3bdbd16abe6&width=3000&cache=v2)\n\n想起去年，我们大家是大包垒小包，自己背着露营的装备，从这里开始正式徒步前行，一人接一人，远远看去，仿佛一条长龙在慢慢蠕动着......\n\n![image.png](https://i.loli.net/2020/04/06/wEmRI2dv6sCZ8HU.png)\n\n## 上山\n当小车到达山脚的时候，我们的徒步才正式开始。下车回头一望，只见这景色俨然没有了昔日的苍翠欲滴，山体被一种棕绿打底，山顶则还还残留着点点白雪（从图中的小路可以看出来这的确是同一群山）。\n\n![image.png](https://i.loli.net/2020/04/06/Q8vCw1XHtgZbm2u.png)\n\n![image.png](https://i.loli.net/2020/04/06/QthHp7IMkrCLSA4.png)\n\n沿着石阶走两步，向后一望果真是银装素裹，分外妖娆。近处是阳光照射，远处是白雪裹树，天上的云也奔涌着，仿佛就是冬天一样。\n\n![image.png](https://i.loli.net/2020/04/06/aZctfBD4EoXGV7y.png)\n\n![image.png](https://i.loli.net/2020/04/06/eEiFqUnPvGlIjpR.png)\n\n上山的路两边都是郁郁葱葱的小树林，此时也褪去绿叶，只留下枯黄枝丫，显得略微萧条，不再茂盛。\n\n![image.png](https://i.loli.net/2020/04/06/M2JR7wziDBCgKEc.png)\n\n![image.png](https://i.loli.net/2020/04/06/fGqLtiAndOzZI2Q.png)\n\n再沿着路往上走，还有一些残留的积雪还在这里，大家都在开始玩雪了。有个小朋友还抱了一大坨雪来做了一个小雪人，大家新奇且兴奋，都簇拥上来，争先恐后驻足拍照。\n\n![image.png](https://i.loli.net/2020/04/06/YTqjBihLFRM4pcy.png)\n\n越往上走，视野越开阔，无须多言，银装素裹，此时正应吟诗一首：\n> 北国风光，千里冰封，万里雪飘。望长城内外，惟余莽莽；大河上下，顿失滔滔。山舞银蛇，原驰蜡象，欲与天公试比高。须晴日，看红装素裹，分外妖娆。\n\n虽然余雪不多，但是我想也应景了。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7fa06eb3-9a6d-4a68-b85b-fe7a70aa8d70%2Fia_10023.png?table=block&id=e59502d7-f95b-477c-928c-473023d887b3&width=3360&cache=v2)\n\n近处的地方还覆盖着一层雪，薄薄的一层。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe7976227-6e8f-40fc-9cce-f65fb7e9a737%2Fia_10024.png?table=block&id=b50e8765-d9cd-4f7f-a2c2-4e2a9185e67b&width=3370&cache=v2)\n\n来听听踩上去的声音\n\n<div style=\"width:100%;height:0px;position:relative;padding-bottom:56.327%;margin-bottom:12px;\"><iframe src=\"https://streamja.com/embed/3n0Rq\" frameborder=\"0\" width=\"100%\" height=\"100%\" allowfullscreen style=\"width:100%;height:100%;position:absolute;\"></iframe></div>\n\n这里的树木，都没有叶子，光秃秃的指着天空，沐浴着阳光。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2507081c-036e-4e09-b827-7e3ca8237454%2Fia_10025.png?table=block&id=570c6df7-a892-4d30-98b9-4199bf061bf6&width=3370&cache=v2)\n\n多走两步，在山上一处平台驻足，此时的景色真的可谓是似曾相识。\n\n![image.png](https://i.loli.net/2020/04/06/kcCgPIQTphOyNGo.png)\n\n![image.png](https://i.loli.net/2020/04/06/SabZIuX8Akt91jl.png)\n\n去年是多么的茂盛，今年就显得贫瘠，没有生机。前后一对比，顿时一股苍凉涌入心中。\n\n突然想着之前去徒步回去之后写的[心理学之茶哥分享：前端包管理工具整理](https://juejin.im/post/5d18d2fd6fb9a07eee5ee343)，就是用的这边的山脉图。\n\n![](https://ftp.bmp.ovh/imgs/2020/04/57aadf62b1874abd.jpg)\n\n## 山顶\n\n\n抵达山顶，风超级大。我们立马放下包裹，开始欣赏这山顶的景色。\n\n\n![image.png](https://i.loli.net/2020/04/06/1U7zKxF2CMIJcDB.png)\n\n![image.png](https://i.loli.net/2020/04/06/wEfKbAmDhtVMsyl.png)\n\n这么辽阔宽广，好想自己是一只鸟，可以在这里无忧无虑的飞，没有那么多问题思考，也不知道自己是谁。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F401cb47f-6eb7-4eb5-9868-305e62f3fe02%2Fia_10031.png?table=block&id=8abcabb9-f224-425c-8ed5-21eaa0cc44fb&width=2520&cache=v2)\n\n![image.png](https://i.loli.net/2020/04/06/M4qOjzUL1gB6JGC.png)\n\n我也激动的拍下了自己的照片，回到家和去年的照片对比起来：\n\n![image.png](https://i.loli.net/2020/04/06/pg58lSHaVFbewnj.png)\n\n![image.png](https://i.loli.net/2020/04/06/WVnCfH6c72gop3T.png)\n\n因为那里有秋千，去年拍了，因此今年也不能落下。看看我沉浸在自己的世界的样子吧！🤣\n\n<div style=\"width:100%;height:0px;position:relative;padding-bottom:56.327%;margin-bottom:12px;\"><iframe src=\"https://streamja.com/embed/B4BWn\" frameborder=\"0\" width=\"100%\" height=\"100%\" allowfullscreen style=\"width:100%;height:100%;position:absolute;\"></iframe></div>\n\n\n## 下山\n然后就是下山了，这一路都是石板路，已经不再是去年的泥巴路和石板路掺杂着，走到山脚，回首望去，仿佛青山幽幽，回到了去年的时光。\n\n![image.png](https://i.loli.net/2020/04/06/gVtvXjnEpTH5hfG.png)\n\n## 最后\n\n写到这里，不知不觉已经下午三点了。\n\n整理着，觉得思绪很多，不禁感叹时间过得好快。看着往日的青青苍翠，今天的萧条苍凉，而这都快一年了。一年里发生的事情很多，人走人留，都在悄悄变化着，而自己是否有所改变来对得起这一年时间。\n\n我觉得最糟糕的就是没有改变，昨天什么样，今天还是什么样，明天还是什么样。没有改变就没有进步，没有进步怎么对得起这段时间呢？我已经是一个大人了啊。\n\n用一个在这个年纪该有的眼光来审视这个世界吧！\n\n\n","slug":"again-ganhaizi","published":1,"updated":"2020-08-02T12:27:33.136Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnbm000cvwtfgkkfb570","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><p>说起干海子，因为我并不玩抖音，也不刷微博，其实我并不了解。但是却不经意间去了两次了，一次是前公司2019年6月底的团建，还有一次就是昨天和朋友一起去。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/VkvcI1nTaeRMB28.png\" alt=\"image.png\"></p><a id=\"more\"></a><p>说起来还是真的挺不好意思，因为原计划的八点出发因为我的迟到不得不推迟，真是迟到害人啊，要改😂。</p><p>一路上心情很忐忑，一是由于迟到了，二是因为这是第二次去，心里面自觉地回想去第一次的场景，想着当时是什么人，什么天气，在哪里拍了照，这次去的话一定要看看两次有什么区别。文中的图片，翠绿的是去年的，有雪的是今年的。</p><h2 id=\"旅途\"><a href=\"#旅途\" class=\"headerlink\" title=\"旅途\"></a>旅途</h2><p>逐渐进入阿坝那边，两边的山也起来了，有的光秃秃，有的长满了树，被植被覆盖着。穿过一条条隧道，山的两面呈现出“阴阳割昏晓”的明暗山体。我想这是在成都和自贡是看不到的。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/GopHWdvsmwZY9EK.png\" alt=\"image.png\"></p><p>思绪恍惚间想起了我第一次来这边的时候，那是2015年8月底，“误打误撞”安排的来这边支教。那时候满脑子的新鲜和好奇，没见过山没见过水，瞪大了眼睛，望着这一切。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/mCv8IQJ4nOTklR7.png\" alt=\"image.png\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/o38eIPV1djM7GfF.png\" alt=\"image.png\"></p><p>回到旅途，车还是在那个熟悉的地点停车整顿一下，我本身就对这个地方有印象，因为这是去的路上第一个可以休息停靠的地方，对于坐了这么久的车的人来说是不会错过的。</p><p>急忙的拿出手机，朝向了山谷那边。</p><p>夏天的山果真更为翠绿啊，因为昨晚刚下过雨，太阳还没放出来，云也显得有些抑郁，灰蒙蒙的。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4aa6f007-f5cb-4a7d-884f-a3e67108e2de%2Fia_10010.png?table=block&id=d9d8d360-489f-4066-836a-bb4108510d94&width=2890&cache=v2\" alt=\"\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F031a6743-9784-4815-86fe-be015a2c5ebb%2Fia_10011.png?table=block&id=68fce6b5-7389-4958-bd53-234225f4c735&width=3840&cache=v2\" alt=\"\"></p><p>路过一隅，发现云也半隐半现地遮盖着山，一半暴露在阳光下面，另一半自觉地躲藏在阴影之中。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/NLaqTmrJoIfUZhp.png\" alt=\"image.png\"></p><p>一时，车上传来了呼叫声，既是惊讶又是惊喜，大家纷纷转向这美丽的景色。在那山顶上，是一片片还未消融的雪，皑皑地装饰着山顶。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/gD4LRp9lAyJKzeh.png\" alt=\"image.png\"></p><p>其实我是见过这般雪的，印象是2016年的开春，到这边滑雪，看到山顶上还静静躺着白雪，还有一缕缕蒸腾的白汽换换飘向天空，随风飘荡。总看不厌，也看不烦。就像之前支教的学校的门口的大山一样，厚重又不失庄严。我想，这再美不过了。</p><p>到了这边，因为山路比较窄，我们换成小车继续前行，大家的心情更加期待了。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fde51e27a-3181-4a7e-aa33-08f4098d1a7c%2Fia_10014.png?table=block&id=8c2cdf51-4c0e-4721-8b99-c3bdbd16abe6&width=3000&cache=v2\" alt=\"\"></p><p>想起去年，我们大家是大包垒小包，自己背着露营的装备，从这里开始正式徒步前行，一人接一人，远远看去，仿佛一条长龙在慢慢蠕动着……</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/wEmRI2dv6sCZ8HU.png\" alt=\"image.png\"></p><h2 id=\"上山\"><a href=\"#上山\" class=\"headerlink\" title=\"上山\"></a>上山</h2><p>当小车到达山脚的时候，我们的徒步才正式开始。下车回头一望，只见这景色俨然没有了昔日的苍翠欲滴，山体被一种棕绿打底，山顶则还还残留着点点白雪（从图中的小路可以看出来这的确是同一群山）。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/Q8vCw1XHtgZbm2u.png\" alt=\"image.png\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/QthHp7IMkrCLSA4.png\" alt=\"image.png\"></p><p>沿着石阶走两步，向后一望果真是银装素裹，分外妖娆。近处是阳光照射，远处是白雪裹树，天上的云也奔涌着，仿佛就是冬天一样。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/aZctfBD4EoXGV7y.png\" alt=\"image.png\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/eEiFqUnPvGlIjpR.png\" alt=\"image.png\"></p><p>上山的路两边都是郁郁葱葱的小树林，此时也褪去绿叶，只留下枯黄枝丫，显得略微萧条，不再茂盛。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/M2JR7wziDBCgKEc.png\" alt=\"image.png\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/fGqLtiAndOzZI2Q.png\" alt=\"image.png\"></p><p>再沿着路往上走，还有一些残留的积雪还在这里，大家都在开始玩雪了。有个小朋友还抱了一大坨雪来做了一个小雪人，大家新奇且兴奋，都簇拥上来，争先恐后驻足拍照。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/YTqjBihLFRM4pcy.png\" alt=\"image.png\"></p><p>越往上走，视野越开阔，无须多言，银装素裹，此时正应吟诗一首：</p><blockquote><p>北国风光，千里冰封，万里雪飘。望长城内外，惟余莽莽；大河上下，顿失滔滔。山舞银蛇，原驰蜡象，欲与天公试比高。须晴日，看红装素裹，分外妖娆。</p></blockquote><p>虽然余雪不多，但是我想也应景了。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7fa06eb3-9a6d-4a68-b85b-fe7a70aa8d70%2Fia_10023.png?table=block&id=e59502d7-f95b-477c-928c-473023d887b3&width=3360&cache=v2\" alt=\"\"></p><p>近处的地方还覆盖着一层雪，薄薄的一层。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe7976227-6e8f-40fc-9cce-f65fb7e9a737%2Fia_10024.png?table=block&id=b50e8765-d9cd-4f7f-a2c2-4e2a9185e67b&width=3370&cache=v2\" alt=\"\"></p><p>来听听踩上去的声音</p><div style=\"width:100%;height:0;position:relative;padding-bottom:56.327%;margin-bottom:12px\"><iframe src=\"https://streamja.com/embed/3n0Rq\" frameborder=\"0\" width=\"100%\" height=\"100%\" allowfullscreen style=\"width:100%;height:100%;position:absolute\"></iframe></div><p>这里的树木，都没有叶子，光秃秃的指着天空，沐浴着阳光。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2507081c-036e-4e09-b827-7e3ca8237454%2Fia_10025.png?table=block&id=570c6df7-a892-4d30-98b9-4199bf061bf6&width=3370&cache=v2\" alt=\"\"></p><p>多走两步，在山上一处平台驻足，此时的景色真的可谓是似曾相识。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/kcCgPIQTphOyNGo.png\" alt=\"image.png\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/SabZIuX8Akt91jl.png\" alt=\"image.png\"></p><p>去年是多么的茂盛，今年就显得贫瘠，没有生机。前后一对比，顿时一股苍凉涌入心中。</p><p>突然想着之前去徒步回去之后写的<a href=\"https://juejin.im/post/5d18d2fd6fb9a07eee5ee343\" target=\"_blank\" rel=\"noopener\">心理学之茶哥分享：前端包管理工具整理</a>，就是用的这边的山脉图。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://ftp.bmp.ovh/imgs/2020/04/57aadf62b1874abd.jpg\" alt=\"\"></p><h2 id=\"山顶\"><a href=\"#山顶\" class=\"headerlink\" title=\"山顶\"></a>山顶</h2><p>抵达山顶，风超级大。我们立马放下包裹，开始欣赏这山顶的景色。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/1U7zKxF2CMIJcDB.png\" alt=\"image.png\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/wEfKbAmDhtVMsyl.png\" alt=\"image.png\"></p><p>这么辽阔宽广，好想自己是一只鸟，可以在这里无忧无虑的飞，没有那么多问题思考，也不知道自己是谁。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F401cb47f-6eb7-4eb5-9868-305e62f3fe02%2Fia_10031.png?table=block&id=8abcabb9-f224-425c-8ed5-21eaa0cc44fb&width=2520&cache=v2\" alt=\"\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/M4qOjzUL1gB6JGC.png\" alt=\"image.png\"></p><p>我也激动的拍下了自己的照片，回到家和去年的照片对比起来：</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/pg58lSHaVFbewnj.png\" alt=\"image.png\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/WVnCfH6c72gop3T.png\" alt=\"image.png\"></p><p>因为那里有秋千，去年拍了，因此今年也不能落下。看看我沉浸在自己的世界的样子吧！🤣</p><div style=\"width:100%;height:0;position:relative;padding-bottom:56.327%;margin-bottom:12px\"><iframe src=\"https://streamja.com/embed/B4BWn\" frameborder=\"0\" width=\"100%\" height=\"100%\" allowfullscreen style=\"width:100%;height:100%;position:absolute\"></iframe></div><h2 id=\"下山\"><a href=\"#下山\" class=\"headerlink\" title=\"下山\"></a>下山</h2><p>然后就是下山了，这一路都是石板路，已经不再是去年的泥巴路和石板路掺杂着，走到山脚，回首望去，仿佛青山幽幽，回到了去年的时光。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://i.loli.net/2020/04/06/gVtvXjnEpTH5hfG.png\" alt=\"image.png\"></p><h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>写到这里，不知不觉已经下午三点了。</p><p>整理着，觉得思绪很多，不禁感叹时间过得好快。看着往日的青青苍翠，今天的萧条苍凉，而这都快一年了。一年里发生的事情很多，人走人留，都在悄悄变化着，而自己是否有所改变来对得起这一年时间。</p><p>我觉得最糟糕的就是没有改变，昨天什么样，今天还是什么样，明天还是什么样。没有改变就没有进步，没有进步怎么对得起这段时间呢？我已经是一个大人了啊。</p><p>用一个在这个年纪该有的眼光来审视这个世界吧！</p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><p>说起干海子，因为我并不玩抖音，也不刷微博，其实我并不了解。但是却不经意间去了两次了，一次是前公司2019年6月底的团建，还有一次就是昨天和朋友一起去。</p><p><img src=\"https://i.loli.net/2020/04/06/VkvcI1nTaeRMB28.png\" alt=\"image.png\"></p>","more":"<p>说起来还是真的挺不好意思，因为原计划的八点出发因为我的迟到不得不推迟，真是迟到害人啊，要改😂。</p><p>一路上心情很忐忑，一是由于迟到了，二是因为这是第二次去，心里面自觉地回想去第一次的场景，想着当时是什么人，什么天气，在哪里拍了照，这次去的话一定要看看两次有什么区别。文中的图片，翠绿的是去年的，有雪的是今年的。</p><h2 id=\"旅途\"><a href=\"#旅途\" class=\"headerlink\" title=\"旅途\"></a>旅途</h2><p>逐渐进入阿坝那边，两边的山也起来了，有的光秃秃，有的长满了树，被植被覆盖着。穿过一条条隧道，山的两面呈现出“阴阳割昏晓”的明暗山体。我想这是在成都和自贡是看不到的。</p><p><img src=\"https://i.loli.net/2020/04/06/GopHWdvsmwZY9EK.png\" alt=\"image.png\"></p><p>思绪恍惚间想起了我第一次来这边的时候，那是2015年8月底，“误打误撞”安排的来这边支教。那时候满脑子的新鲜和好奇，没见过山没见过水，瞪大了眼睛，望着这一切。</p><p><img src=\"https://i.loli.net/2020/04/06/mCv8IQJ4nOTklR7.png\" alt=\"image.png\"></p><p><img src=\"https://i.loli.net/2020/04/06/o38eIPV1djM7GfF.png\" alt=\"image.png\"></p><p>回到旅途，车还是在那个熟悉的地点停车整顿一下，我本身就对这个地方有印象，因为这是去的路上第一个可以休息停靠的地方，对于坐了这么久的车的人来说是不会错过的。</p><p>急忙的拿出手机，朝向了山谷那边。</p><p>夏天的山果真更为翠绿啊，因为昨晚刚下过雨，太阳还没放出来，云也显得有些抑郁，灰蒙蒙的。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4aa6f007-f5cb-4a7d-884f-a3e67108e2de%2Fia_10010.png?table=block&id=d9d8d360-489f-4066-836a-bb4108510d94&width=2890&cache=v2\" alt=\"\"></p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F031a6743-9784-4815-86fe-be015a2c5ebb%2Fia_10011.png?table=block&id=68fce6b5-7389-4958-bd53-234225f4c735&width=3840&cache=v2\" alt=\"\"></p><p>路过一隅，发现云也半隐半现地遮盖着山，一半暴露在阳光下面，另一半自觉地躲藏在阴影之中。</p><p><img src=\"https://i.loli.net/2020/04/06/NLaqTmrJoIfUZhp.png\" alt=\"image.png\"></p><p>一时，车上传来了呼叫声，既是惊讶又是惊喜，大家纷纷转向这美丽的景色。在那山顶上，是一片片还未消融的雪，皑皑地装饰着山顶。</p><p><img src=\"https://i.loli.net/2020/04/06/gD4LRp9lAyJKzeh.png\" alt=\"image.png\"></p><p>其实我是见过这般雪的，印象是2016年的开春，到这边滑雪，看到山顶上还静静躺着白雪，还有一缕缕蒸腾的白汽换换飘向天空，随风飘荡。总看不厌，也看不烦。就像之前支教的学校的门口的大山一样，厚重又不失庄严。我想，这再美不过了。</p><p>到了这边，因为山路比较窄，我们换成小车继续前行，大家的心情更加期待了。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fde51e27a-3181-4a7e-aa33-08f4098d1a7c%2Fia_10014.png?table=block&id=8c2cdf51-4c0e-4721-8b99-c3bdbd16abe6&width=3000&cache=v2\" alt=\"\"></p><p>想起去年，我们大家是大包垒小包，自己背着露营的装备，从这里开始正式徒步前行，一人接一人，远远看去，仿佛一条长龙在慢慢蠕动着……</p><p><img src=\"https://i.loli.net/2020/04/06/wEmRI2dv6sCZ8HU.png\" alt=\"image.png\"></p><h2 id=\"上山\"><a href=\"#上山\" class=\"headerlink\" title=\"上山\"></a>上山</h2><p>当小车到达山脚的时候，我们的徒步才正式开始。下车回头一望，只见这景色俨然没有了昔日的苍翠欲滴，山体被一种棕绿打底，山顶则还还残留着点点白雪（从图中的小路可以看出来这的确是同一群山）。</p><p><img src=\"https://i.loli.net/2020/04/06/Q8vCw1XHtgZbm2u.png\" alt=\"image.png\"></p><p><img src=\"https://i.loli.net/2020/04/06/QthHp7IMkrCLSA4.png\" alt=\"image.png\"></p><p>沿着石阶走两步，向后一望果真是银装素裹，分外妖娆。近处是阳光照射，远处是白雪裹树，天上的云也奔涌着，仿佛就是冬天一样。</p><p><img src=\"https://i.loli.net/2020/04/06/aZctfBD4EoXGV7y.png\" alt=\"image.png\"></p><p><img src=\"https://i.loli.net/2020/04/06/eEiFqUnPvGlIjpR.png\" alt=\"image.png\"></p><p>上山的路两边都是郁郁葱葱的小树林，此时也褪去绿叶，只留下枯黄枝丫，显得略微萧条，不再茂盛。</p><p><img src=\"https://i.loli.net/2020/04/06/M2JR7wziDBCgKEc.png\" alt=\"image.png\"></p><p><img src=\"https://i.loli.net/2020/04/06/fGqLtiAndOzZI2Q.png\" alt=\"image.png\"></p><p>再沿着路往上走，还有一些残留的积雪还在这里，大家都在开始玩雪了。有个小朋友还抱了一大坨雪来做了一个小雪人，大家新奇且兴奋，都簇拥上来，争先恐后驻足拍照。</p><p><img src=\"https://i.loli.net/2020/04/06/YTqjBihLFRM4pcy.png\" alt=\"image.png\"></p><p>越往上走，视野越开阔，无须多言，银装素裹，此时正应吟诗一首：</p><blockquote><p>北国风光，千里冰封，万里雪飘。望长城内外，惟余莽莽；大河上下，顿失滔滔。山舞银蛇，原驰蜡象，欲与天公试比高。须晴日，看红装素裹，分外妖娆。</p></blockquote><p>虽然余雪不多，但是我想也应景了。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7fa06eb3-9a6d-4a68-b85b-fe7a70aa8d70%2Fia_10023.png?table=block&id=e59502d7-f95b-477c-928c-473023d887b3&width=3360&cache=v2\" alt=\"\"></p><p>近处的地方还覆盖着一层雪，薄薄的一层。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe7976227-6e8f-40fc-9cce-f65fb7e9a737%2Fia_10024.png?table=block&id=b50e8765-d9cd-4f7f-a2c2-4e2a9185e67b&width=3370&cache=v2\" alt=\"\"></p><p>来听听踩上去的声音</p><div style=\"width:100%;height:0;position:relative;padding-bottom:56.327%;margin-bottom:12px\"><iframe src=\"https://streamja.com/embed/3n0Rq\" frameborder=\"0\" width=\"100%\" height=\"100%\" allowfullscreen style=\"width:100%;height:100%;position:absolute\"></iframe></div><p>这里的树木，都没有叶子，光秃秃的指着天空，沐浴着阳光。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2507081c-036e-4e09-b827-7e3ca8237454%2Fia_10025.png?table=block&id=570c6df7-a892-4d30-98b9-4199bf061bf6&width=3370&cache=v2\" alt=\"\"></p><p>多走两步，在山上一处平台驻足，此时的景色真的可谓是似曾相识。</p><p><img src=\"https://i.loli.net/2020/04/06/kcCgPIQTphOyNGo.png\" alt=\"image.png\"></p><p><img src=\"https://i.loli.net/2020/04/06/SabZIuX8Akt91jl.png\" alt=\"image.png\"></p><p>去年是多么的茂盛，今年就显得贫瘠，没有生机。前后一对比，顿时一股苍凉涌入心中。</p><p>突然想着之前去徒步回去之后写的<a href=\"https://juejin.im/post/5d18d2fd6fb9a07eee5ee343\" target=\"_blank\" rel=\"noopener\">心理学之茶哥分享：前端包管理工具整理</a>，就是用的这边的山脉图。</p><p><img src=\"https://ftp.bmp.ovh/imgs/2020/04/57aadf62b1874abd.jpg\" alt=\"\"></p><h2 id=\"山顶\"><a href=\"#山顶\" class=\"headerlink\" title=\"山顶\"></a>山顶</h2><p>抵达山顶，风超级大。我们立马放下包裹，开始欣赏这山顶的景色。</p><p><img src=\"https://i.loli.net/2020/04/06/1U7zKxF2CMIJcDB.png\" alt=\"image.png\"></p><p><img src=\"https://i.loli.net/2020/04/06/wEfKbAmDhtVMsyl.png\" alt=\"image.png\"></p><p>这么辽阔宽广，好想自己是一只鸟，可以在这里无忧无虑的飞，没有那么多问题思考，也不知道自己是谁。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F401cb47f-6eb7-4eb5-9868-305e62f3fe02%2Fia_10031.png?table=block&id=8abcabb9-f224-425c-8ed5-21eaa0cc44fb&width=2520&cache=v2\" alt=\"\"></p><p><img src=\"https://i.loli.net/2020/04/06/M4qOjzUL1gB6JGC.png\" alt=\"image.png\"></p><p>我也激动的拍下了自己的照片，回到家和去年的照片对比起来：</p><p><img src=\"https://i.loli.net/2020/04/06/pg58lSHaVFbewnj.png\" alt=\"image.png\"></p><p><img src=\"https://i.loli.net/2020/04/06/WVnCfH6c72gop3T.png\" alt=\"image.png\"></p><p>因为那里有秋千，去年拍了，因此今年也不能落下。看看我沉浸在自己的世界的样子吧！🤣</p><div style=\"width:100%;height:0;position:relative;padding-bottom:56.327%;margin-bottom:12px\"><iframe src=\"https://streamja.com/embed/B4BWn\" frameborder=\"0\" width=\"100%\" height=\"100%\" allowfullscreen style=\"width:100%;height:100%;position:absolute\"></iframe></div><h2 id=\"下山\"><a href=\"#下山\" class=\"headerlink\" title=\"下山\"></a>下山</h2><p>然后就是下山了，这一路都是石板路，已经不再是去年的泥巴路和石板路掺杂着，走到山脚，回首望去，仿佛青山幽幽，回到了去年的时光。</p><p><img src=\"https://i.loli.net/2020/04/06/gVtvXjnEpTH5hfG.png\" alt=\"image.png\"></p><h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>写到这里，不知不觉已经下午三点了。</p><p>整理着，觉得思绪很多，不禁感叹时间过得好快。看着往日的青青苍翠，今天的萧条苍凉，而这都快一年了。一年里发生的事情很多，人走人留，都在悄悄变化着，而自己是否有所改变来对得起这一年时间。</p><p>我觉得最糟糕的就是没有改变，昨天什么样，今天还是什么样，明天还是什么样。没有改变就没有进步，没有进步怎么对得起这段时间呢？我已经是一个大人了啊。</p><p>用一个在这个年纪该有的眼光来审视这个世界吧！</p><!-- rebuild by neat -->"},{"title":"CICD实战之基本介绍","abbrlink":"444099e9","date":"2020-07-24T15:25:19.000Z","_content":"\n## 什么是CI/CD\n在软件工程中，CI / CD或CICD通常是指持续集成以及持续交付或持续部署的组合实践（[具体](https://www.redhat.com/zh/topics/devops/what-is-ci-cd)）。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7c5c985f-2b6e-45f5-8d89-7bc2248d1c18%2Fia_10005.png?table=block&id=81a062dc-40c7-42eb-a88a-ee4fb335bc0a&width=1650&cache=v2)\n<!-- more -->\n## 部署方式的区别\n### 传统部署\n传统部署方式\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff17f2974-fde6-4542-918d-438bbd3d36ac%2Fia_10006.png?table=block&id=75513b2e-e615-4c9e-b08e-c2d84964d59a&width=1890&cache=v2)\n\n缺点：**人工操作，部署速度慢，易出错，版本管理机制差**\n\n### CI/CD\nCI/CD 的根本原则就是实现自动化构建部署，解决人工构建部署带来的**效率低，出错率高**等问题。下面是CI/CD的总体流程：\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8a4df5cc-bf5f-4292-88d5-ae6fd182e0bc%2Fia_10007.png?table=block&id=e726907d-37c0-4d2f-bf5c-da31d2f47bd8&width=4600&cache=v2)\n\n可以看到一套完整的流程：**代码编写-提交Git-触发代码扫描-触发Jenkins-构建镜像到Hub-服务器拉取镜像部署**\n\n优点：**流程规范、不易出错、效率高**\n\n## 参考资料\n> [CI/CD是什么？如何理解持续集成、持续交付和持续部署](https://www.redhat.com/zh/topics/devops/what-is-ci-cd)\n> [语雀分享](https://www.yuque.com/docs/share/5a58e274-6b1e-4697-b36d-89d5a152f30e)\n\n","source":"_posts/cicd1.md","raw":"---\ntitle: CICD实战之基本介绍\nabbrlink: '444099e9'\ndate: 2020-07-24 23:25:19\ntags:\n- CICD\n---\n\n## 什么是CI/CD\n在软件工程中，CI / CD或CICD通常是指持续集成以及持续交付或持续部署的组合实践（[具体](https://www.redhat.com/zh/topics/devops/what-is-ci-cd)）。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7c5c985f-2b6e-45f5-8d89-7bc2248d1c18%2Fia_10005.png?table=block&id=81a062dc-40c7-42eb-a88a-ee4fb335bc0a&width=1650&cache=v2)\n<!-- more -->\n## 部署方式的区别\n### 传统部署\n传统部署方式\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff17f2974-fde6-4542-918d-438bbd3d36ac%2Fia_10006.png?table=block&id=75513b2e-e615-4c9e-b08e-c2d84964d59a&width=1890&cache=v2)\n\n缺点：**人工操作，部署速度慢，易出错，版本管理机制差**\n\n### CI/CD\nCI/CD 的根本原则就是实现自动化构建部署，解决人工构建部署带来的**效率低，出错率高**等问题。下面是CI/CD的总体流程：\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8a4df5cc-bf5f-4292-88d5-ae6fd182e0bc%2Fia_10007.png?table=block&id=e726907d-37c0-4d2f-bf5c-da31d2f47bd8&width=4600&cache=v2)\n\n可以看到一套完整的流程：**代码编写-提交Git-触发代码扫描-触发Jenkins-构建镜像到Hub-服务器拉取镜像部署**\n\n优点：**流程规范、不易出错、效率高**\n\n## 参考资料\n> [CI/CD是什么？如何理解持续集成、持续交付和持续部署](https://www.redhat.com/zh/topics/devops/what-is-ci-cd)\n> [语雀分享](https://www.yuque.com/docs/share/5a58e274-6b1e-4697-b36d-89d5a152f30e)\n\n","slug":"cicd1","published":1,"updated":"2020-08-02T11:42:45.209Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnbp000fvwtfhxdb66c3","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"什么是CI-CD\"><a href=\"#什么是CI-CD\" class=\"headerlink\" title=\"什么是CI/CD\"></a>什么是CI/CD</h2><p>在软件工程中，CI / CD或CICD通常是指持续集成以及持续交付或持续部署的组合实践（<a href=\"https://www.redhat.com/zh/topics/devops/what-is-ci-cd\" target=\"_blank\" rel=\"noopener\">具体</a>）。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7c5c985f-2b6e-45f5-8d89-7bc2248d1c18%2Fia_10005.png?table=block&id=81a062dc-40c7-42eb-a88a-ee4fb335bc0a&width=1650&cache=v2\" alt=\"\"></p><a id=\"more\"></a><h2 id=\"部署方式的区别\"><a href=\"#部署方式的区别\" class=\"headerlink\" title=\"部署方式的区别\"></a>部署方式的区别</h2><h3 id=\"传统部署\"><a href=\"#传统部署\" class=\"headerlink\" title=\"传统部署\"></a>传统部署</h3><p>传统部署方式<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff17f2974-fde6-4542-918d-438bbd3d36ac%2Fia_10006.png?table=block&id=75513b2e-e615-4c9e-b08e-c2d84964d59a&width=1890&cache=v2\" alt=\"\"></p><p>缺点：<strong>人工操作，部署速度慢，易出错，版本管理机制差</strong></p><h3 id=\"CI-CD\"><a href=\"#CI-CD\" class=\"headerlink\" title=\"CI/CD\"></a>CI/CD</h3><p>CI/CD 的根本原则就是实现自动化构建部署，解决人工构建部署带来的<strong>效率低，出错率高</strong>等问题。下面是CI/CD的总体流程：</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8a4df5cc-bf5f-4292-88d5-ae6fd182e0bc%2Fia_10007.png?table=block&id=e726907d-37c0-4d2f-bf5c-da31d2f47bd8&width=4600&cache=v2\" alt=\"\"></p><p>可以看到一套完整的流程：<strong>代码编写-提交Git-触发代码扫描-触发Jenkins-构建镜像到Hub-服务器拉取镜像部署</strong></p><p>优点：<strong>流程规范、不易出错、效率高</strong></p><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><blockquote><p><a href=\"https://www.redhat.com/zh/topics/devops/what-is-ci-cd\" target=\"_blank\" rel=\"noopener\">CI/CD是什么？如何理解持续集成、持续交付和持续部署</a><br><a href=\"https://www.yuque.com/docs/share/5a58e274-6b1e-4697-b36d-89d5a152f30e\" target=\"_blank\" rel=\"noopener\">语雀分享</a></p></blockquote><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"什么是CI-CD\"><a href=\"#什么是CI-CD\" class=\"headerlink\" title=\"什么是CI/CD\"></a>什么是CI/CD</h2><p>在软件工程中，CI / CD或CICD通常是指持续集成以及持续交付或持续部署的组合实践（<a href=\"https://www.redhat.com/zh/topics/devops/what-is-ci-cd\" target=\"_blank\" rel=\"noopener\">具体</a>）。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7c5c985f-2b6e-45f5-8d89-7bc2248d1c18%2Fia_10005.png?table=block&id=81a062dc-40c7-42eb-a88a-ee4fb335bc0a&width=1650&cache=v2\" alt=\"\"></p>","more":"<h2 id=\"部署方式的区别\"><a href=\"#部署方式的区别\" class=\"headerlink\" title=\"部署方式的区别\"></a>部署方式的区别</h2><h3 id=\"传统部署\"><a href=\"#传统部署\" class=\"headerlink\" title=\"传统部署\"></a>传统部署</h3><p>传统部署方式<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff17f2974-fde6-4542-918d-438bbd3d36ac%2Fia_10006.png?table=block&id=75513b2e-e615-4c9e-b08e-c2d84964d59a&width=1890&cache=v2\" alt=\"\"></p><p>缺点：<strong>人工操作，部署速度慢，易出错，版本管理机制差</strong></p><h3 id=\"CI-CD\"><a href=\"#CI-CD\" class=\"headerlink\" title=\"CI/CD\"></a>CI/CD</h3><p>CI/CD 的根本原则就是实现自动化构建部署，解决人工构建部署带来的<strong>效率低，出错率高</strong>等问题。下面是CI/CD的总体流程：</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8a4df5cc-bf5f-4292-88d5-ae6fd182e0bc%2Fia_10007.png?table=block&id=e726907d-37c0-4d2f-bf5c-da31d2f47bd8&width=4600&cache=v2\" alt=\"\"></p><p>可以看到一套完整的流程：<strong>代码编写-提交Git-触发代码扫描-触发Jenkins-构建镜像到Hub-服务器拉取镜像部署</strong></p><p>优点：<strong>流程规范、不易出错、效率高</strong></p><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><blockquote><p><a href=\"https://www.redhat.com/zh/topics/devops/what-is-ci-cd\" target=\"_blank\" rel=\"noopener\">CI/CD是什么？如何理解持续集成、持续交付和持续部署</a><br><a href=\"https://www.yuque.com/docs/share/5a58e274-6b1e-4697-b36d-89d5a152f30e\" target=\"_blank\" rel=\"noopener\">语雀分享</a></p></blockquote><!-- rebuild by neat -->"},{"title":"JS箭头函数三连问：为何用、怎么用、何时用","abbrlink":"b1d6e1fd","date":"2020-03-22T01:42:08.000Z","_content":"在现代JS中最让人期待的特性就是关于箭头函数，用`=>`来标识。箭头函数有两个主要的优点：其一是非常简明的语法，另外就是直观的作用域和`this`的绑定。\n\n因为这些优点，箭头函数比起其他形式的函数声明更加受欢迎。比如，受欢迎的`airbnb eslint configuration库`会强制使用JavaScript箭头函数创建匿名函数。\n\n然而，就像世间万物一样，箭头函数有一些优点也有一些“缺点”，这就需要在使用的时候做一些权衡了。\n\n学习如何权衡是使用好箭头函数的关键。在这篇文章中我们将回顾箭头函数是怎样工作的，然后深入探讨，实际代码中箭头函数是如何改进我们代码的，以及一些箭头函数不推荐的情况。\n<!-- more -->\n什么才是箭头函数\n---\n\nJS的箭头函数大概就像python中的`lambda(python定义匿名函数的关键字)`和ruby中的`blocks(类似于闭包)`一样。\n这些匿名函数都有他们特殊的语法：首先接收一定数目的参数，然后在定义它们的函数的作用域或就近作用域中执行。\n\n接下来我们将详细探讨这些。\n\n箭头函数的语法\n---\n箭头函数有一个大体的结构，同时也有很多的特殊情况可以简化。\n核心的结构如下：\n```javascript\n(argument1, argument2, ... argumentN) => {\n    // function body\n}\n```\n\n在括号里面有一系列的参数，接着跟着一个箭头符号`=>`，最后是函数体。这跟传统的函数很相像，只是我们省略了`function`关键字，并且添加了一个`=>`在参数后面。\n\n并且，这里也有很多种情况，让箭头函数结构变得更加的简洁。\n\n首先，如果函数体里面是一个单独的表达式，你可以省略大括号直接将表达式写在一行，并且表达式的结果也将会被函数直接返回。比如：\n```javascript\nconst add = (a, b) => a + b;\n```\n其次，如果这传入的是一个单独的参数，你也可省略参数部分的括号。比如：\n\n```javascript\nconst getFirst = array => array[0];\n```\n如你所见，这样就看起来更加的简洁了，我们也将在后面说明更多的特性。\n\n高级语法\n---\n如果你了解这些高级语法之后将十分受用。\n\n首先，如果你尝试在一行书写函数，但是返回的值却是一个对象内容，你原想这样写：\n```javascript\n(name, description) => {name: name, description: description};\n```\n而问题就是这样的语法会引起歧义，会误以为你在写一个函数的函数体。\n如果想返回的是单个的对象，请用括号包装该对象：\n```JavaScript\n(name, description) => ({name: name, description: description});\n```\n封闭的上下文作用域\n---\n不像其他形式的函数，箭头函数并没有他们自己的执行上下文。实际上，这就意味着代码中的`this`和`arguments`都是继承自他们的父函数。\n\n比如，比较下面箭头函数和传统函数的区别：\n```javascript\nconst test = {\n  name: 'test object',\n  createAnonFunction: function() {\n    return function() {\n      console.log(this.name);\n      console.log(arguments);\n    };\n  },\n  createArrowFunction: function() {\n    return () => {\n      console.log(this.name);\n      console.log(arguments);\n    };\n  }\n};\n```\n我们有一个有两个方法的对象，每个方法都返回了一个匿名函数。区别在于第一个方法里面用了传统的函数表达式，后面的用了箭头函数表达式。如果我们在传入同样的参数运行，我们得到了两个不同的结果。\n```javascript\nconst anon = test.createAnonFunction('hello', 'world');\n//返回匿名函数\nconst arrow = test.createArrowFunction('hello', 'world');\nanon();\n//undefined\n//{}\n// this->window\narrow();\n//test object\n//object { '0': 'hello', '1': 'world' }\n//this->test\n```\n\n第一个匿名函数有自己的上下文（指向并非test对象），当你调用的时候没有参考的`this.name`的属性，（注意：现在`this`指向`window`），也没有创建它时调用的参数。另一个，箭头函数与创建它的函数有相同的上下文，让其可以访问参数arguments和对象。\n\n箭头函数改进您的代码\n---\n传统`lambda`函数的主要用例之一，就是将函数用于数组的遍历，现在用JavaScript箭头函数实现。\n比如你有一个有值的数组，你想去`map`遍历每一项，这时箭头函数是非常推荐的：\n```javascript\nconst words = ['hello', 'WORLD', 'Whatever'];\nconst downcasedWords = words.map(word => word.toLowerCase());\n```\n一个及其常见的例子就是返回一个对象的某个值：\n\n```javascript\nconst names = objects.map(object => object.name);\n```\n类似的，当用`forEach`来替换传统`for`循环的时候，实际上箭头函数会直观的保持`this`来自于父一级\n```javascript\nthis.examples.forEach(example => {\n  this.runExample(example);\n});\n```\nPromise和Promise链\n---\n当在编写异步程序的时候，箭头函数也会让代码更加直观和简洁。\n\nPromise可以更简单的编写异步程序。虽然你乐意去使用`async/await`，你也需要好好理解`promise`,因为这是他们的基础。\n\n使用promise，仍然需要定义你的代码执行完成之后的回调函数。\n这是箭头函数的理想位置，特别是如果您生成的函数是有状态的，同时想引用对象中的某些内容。\n```javascript\nthis.doSomethingAsync().then((result) => {\n  this.storeResult(result);\n});\n```\n\n对象转换\n---\n箭头函数的另一个常见而且十分有用的地方就是用于封装的对象转换。\n例如在Vue.js中，有一种通用模式，就是使用`mapState`将Vuex存储的各个部分，直接包含到Vue组件中。\n这涉及到定义一套`mappers`，用于从原对象到完整的转换输出，这在组件问题中实十分有必要的。\n这一系列简单的转换,使用箭头函数是最合适不过的。比如：\n```javascript\nexport default {\n  computed: {\n    ...mapState({\n      results: state => state.results,\n      users: state => state.users,\n    });\n  }\n}\n```\n你不应该使用箭头函数的情景\n---\n这里有许多箭头函数不推荐的场景，这种情况之下不仅没有帮助，而且还会造成不必要的麻烦。\n\n首先就是对象中的方法。这里有一个函数上下文的例子，对于我们理解很有帮助。\n曾经流行一种趋势，用`class`类的语法和箭头函数，为其自动绑定方法。比如:事件方法可以使用，但是仍然绑定在class类中。\n看起来就像下面的例子:\n```javascript\nclass Counter {\n  counter = 0;\n  handleClick = () => {\n    this.counter++;\n  }\n}\n```\n在这种方法中,如果被一个点击事件函数调用了，它虽然不是`Counter`的上下文中，它仍旧可以访问实例的数据，这种方式的缺点不言而喻。\n\n用这种方式的确提供了一种绑定函数的快捷方式，但是函数的表达形式多种多样，相当不直观。如果你尝试在原型使用这种对象，这将不利于测试，同时也会产生很多问题。\n相反，推荐用一种常规的绑定方式，如有必要可以绑定在实例的构造函数中:\n```javascript\nclass Counter {\n  counter = 0;\n  handleClick() {\n    this.counter++;\n  }\n  constructor() {\n    this.handleClick = this.handleClick.bind(this);\n  }\n}\n```\n深层调用\n---\n另一种使用箭头函数会让你头疼的地方，就是你去用很多函数的组合调用，尤其是函数的深层调用。\n简单的理由跟匿名函数一样，堆栈的追踪很复杂。\n\n如果你的函数仅仅在一层之下，而不是深层的迭代，这倒不是什么问题。但是如果你将函数定义为箭头函数，并且在他们之间来回调用，当你调试bug的时候你将被代码困惑，甚至得到如下的错误信息：\n```javascript\n{anonymous}()\n{anonymous}()\n{anonymous}()\n{anonymous}()\n{anonymous}()\n//anonymous 匿名\n```\n有动态上下文的函数\n---\n还有最有一种箭头函数会让你困惑的情形，就是`this`是动态绑定的时候。\n如果你在以下情形使用箭头函数，那么this的动态绑定不会如期工作，并且你也会困惑这些代码为什么不像预期那样工作，也会给你之后工作的人造成麻烦。\n一些典型的例子：\n- 事件的调用函数，this指向当前的目标属性\n- 在jquery中，大多数时候this指向的是当前被选择的元素\n- 在vue中，`methods `和`computed`中的`this`指向的是vue的组件。\n\n当然你也可以在上面的情形之下谨慎的使用箭头函数。但特别是在`jquery`和`vue`的情况下, 这通常会干扰正常功能, 并使您感到困惑：为什么看起来跟别人代码一样的代码就是不工作。\n\n总结\n---\n箭头函数是JS语言中十分特别的属性，并且使很多情形中代码更加的变化莫测。尽管如此，就像其他的语言特性，他们有各自的优缺点。因此我们使用它应该仅仅是作为一种工具，而不是无脑的简单的全部替换为箭头函数。\n\n**本文只是个人兴趣翻译，如有错误之处还望各位斧正。文章版权属于原文作者。**\n>原文地址：https://codeburst.io/javascript-arrow-functions-how-why-when-and-when-not-to-use-them-fb8c2de9dbdc\n\n\n\n\n","source":"_posts/array-function.md","raw":"---\ntitle: JS箭头函数三连问：为何用、怎么用、何时用\ntags:\n  - 翻译\n  - 前端\nabbrlink: b1d6e1fd\ndate: 2020-03-22 09:42:08\n---\n在现代JS中最让人期待的特性就是关于箭头函数，用`=>`来标识。箭头函数有两个主要的优点：其一是非常简明的语法，另外就是直观的作用域和`this`的绑定。\n\n因为这些优点，箭头函数比起其他形式的函数声明更加受欢迎。比如，受欢迎的`airbnb eslint configuration库`会强制使用JavaScript箭头函数创建匿名函数。\n\n然而，就像世间万物一样，箭头函数有一些优点也有一些“缺点”，这就需要在使用的时候做一些权衡了。\n\n学习如何权衡是使用好箭头函数的关键。在这篇文章中我们将回顾箭头函数是怎样工作的，然后深入探讨，实际代码中箭头函数是如何改进我们代码的，以及一些箭头函数不推荐的情况。\n<!-- more -->\n什么才是箭头函数\n---\n\nJS的箭头函数大概就像python中的`lambda(python定义匿名函数的关键字)`和ruby中的`blocks(类似于闭包)`一样。\n这些匿名函数都有他们特殊的语法：首先接收一定数目的参数，然后在定义它们的函数的作用域或就近作用域中执行。\n\n接下来我们将详细探讨这些。\n\n箭头函数的语法\n---\n箭头函数有一个大体的结构，同时也有很多的特殊情况可以简化。\n核心的结构如下：\n```javascript\n(argument1, argument2, ... argumentN) => {\n    // function body\n}\n```\n\n在括号里面有一系列的参数，接着跟着一个箭头符号`=>`，最后是函数体。这跟传统的函数很相像，只是我们省略了`function`关键字，并且添加了一个`=>`在参数后面。\n\n并且，这里也有很多种情况，让箭头函数结构变得更加的简洁。\n\n首先，如果函数体里面是一个单独的表达式，你可以省略大括号直接将表达式写在一行，并且表达式的结果也将会被函数直接返回。比如：\n```javascript\nconst add = (a, b) => a + b;\n```\n其次，如果这传入的是一个单独的参数，你也可省略参数部分的括号。比如：\n\n```javascript\nconst getFirst = array => array[0];\n```\n如你所见，这样就看起来更加的简洁了，我们也将在后面说明更多的特性。\n\n高级语法\n---\n如果你了解这些高级语法之后将十分受用。\n\n首先，如果你尝试在一行书写函数，但是返回的值却是一个对象内容，你原想这样写：\n```javascript\n(name, description) => {name: name, description: description};\n```\n而问题就是这样的语法会引起歧义，会误以为你在写一个函数的函数体。\n如果想返回的是单个的对象，请用括号包装该对象：\n```JavaScript\n(name, description) => ({name: name, description: description});\n```\n封闭的上下文作用域\n---\n不像其他形式的函数，箭头函数并没有他们自己的执行上下文。实际上，这就意味着代码中的`this`和`arguments`都是继承自他们的父函数。\n\n比如，比较下面箭头函数和传统函数的区别：\n```javascript\nconst test = {\n  name: 'test object',\n  createAnonFunction: function() {\n    return function() {\n      console.log(this.name);\n      console.log(arguments);\n    };\n  },\n  createArrowFunction: function() {\n    return () => {\n      console.log(this.name);\n      console.log(arguments);\n    };\n  }\n};\n```\n我们有一个有两个方法的对象，每个方法都返回了一个匿名函数。区别在于第一个方法里面用了传统的函数表达式，后面的用了箭头函数表达式。如果我们在传入同样的参数运行，我们得到了两个不同的结果。\n```javascript\nconst anon = test.createAnonFunction('hello', 'world');\n//返回匿名函数\nconst arrow = test.createArrowFunction('hello', 'world');\nanon();\n//undefined\n//{}\n// this->window\narrow();\n//test object\n//object { '0': 'hello', '1': 'world' }\n//this->test\n```\n\n第一个匿名函数有自己的上下文（指向并非test对象），当你调用的时候没有参考的`this.name`的属性，（注意：现在`this`指向`window`），也没有创建它时调用的参数。另一个，箭头函数与创建它的函数有相同的上下文，让其可以访问参数arguments和对象。\n\n箭头函数改进您的代码\n---\n传统`lambda`函数的主要用例之一，就是将函数用于数组的遍历，现在用JavaScript箭头函数实现。\n比如你有一个有值的数组，你想去`map`遍历每一项，这时箭头函数是非常推荐的：\n```javascript\nconst words = ['hello', 'WORLD', 'Whatever'];\nconst downcasedWords = words.map(word => word.toLowerCase());\n```\n一个及其常见的例子就是返回一个对象的某个值：\n\n```javascript\nconst names = objects.map(object => object.name);\n```\n类似的，当用`forEach`来替换传统`for`循环的时候，实际上箭头函数会直观的保持`this`来自于父一级\n```javascript\nthis.examples.forEach(example => {\n  this.runExample(example);\n});\n```\nPromise和Promise链\n---\n当在编写异步程序的时候，箭头函数也会让代码更加直观和简洁。\n\nPromise可以更简单的编写异步程序。虽然你乐意去使用`async/await`，你也需要好好理解`promise`,因为这是他们的基础。\n\n使用promise，仍然需要定义你的代码执行完成之后的回调函数。\n这是箭头函数的理想位置，特别是如果您生成的函数是有状态的，同时想引用对象中的某些内容。\n```javascript\nthis.doSomethingAsync().then((result) => {\n  this.storeResult(result);\n});\n```\n\n对象转换\n---\n箭头函数的另一个常见而且十分有用的地方就是用于封装的对象转换。\n例如在Vue.js中，有一种通用模式，就是使用`mapState`将Vuex存储的各个部分，直接包含到Vue组件中。\n这涉及到定义一套`mappers`，用于从原对象到完整的转换输出，这在组件问题中实十分有必要的。\n这一系列简单的转换,使用箭头函数是最合适不过的。比如：\n```javascript\nexport default {\n  computed: {\n    ...mapState({\n      results: state => state.results,\n      users: state => state.users,\n    });\n  }\n}\n```\n你不应该使用箭头函数的情景\n---\n这里有许多箭头函数不推荐的场景，这种情况之下不仅没有帮助，而且还会造成不必要的麻烦。\n\n首先就是对象中的方法。这里有一个函数上下文的例子，对于我们理解很有帮助。\n曾经流行一种趋势，用`class`类的语法和箭头函数，为其自动绑定方法。比如:事件方法可以使用，但是仍然绑定在class类中。\n看起来就像下面的例子:\n```javascript\nclass Counter {\n  counter = 0;\n  handleClick = () => {\n    this.counter++;\n  }\n}\n```\n在这种方法中,如果被一个点击事件函数调用了，它虽然不是`Counter`的上下文中，它仍旧可以访问实例的数据，这种方式的缺点不言而喻。\n\n用这种方式的确提供了一种绑定函数的快捷方式，但是函数的表达形式多种多样，相当不直观。如果你尝试在原型使用这种对象，这将不利于测试，同时也会产生很多问题。\n相反，推荐用一种常规的绑定方式，如有必要可以绑定在实例的构造函数中:\n```javascript\nclass Counter {\n  counter = 0;\n  handleClick() {\n    this.counter++;\n  }\n  constructor() {\n    this.handleClick = this.handleClick.bind(this);\n  }\n}\n```\n深层调用\n---\n另一种使用箭头函数会让你头疼的地方，就是你去用很多函数的组合调用，尤其是函数的深层调用。\n简单的理由跟匿名函数一样，堆栈的追踪很复杂。\n\n如果你的函数仅仅在一层之下，而不是深层的迭代，这倒不是什么问题。但是如果你将函数定义为箭头函数，并且在他们之间来回调用，当你调试bug的时候你将被代码困惑，甚至得到如下的错误信息：\n```javascript\n{anonymous}()\n{anonymous}()\n{anonymous}()\n{anonymous}()\n{anonymous}()\n//anonymous 匿名\n```\n有动态上下文的函数\n---\n还有最有一种箭头函数会让你困惑的情形，就是`this`是动态绑定的时候。\n如果你在以下情形使用箭头函数，那么this的动态绑定不会如期工作，并且你也会困惑这些代码为什么不像预期那样工作，也会给你之后工作的人造成麻烦。\n一些典型的例子：\n- 事件的调用函数，this指向当前的目标属性\n- 在jquery中，大多数时候this指向的是当前被选择的元素\n- 在vue中，`methods `和`computed`中的`this`指向的是vue的组件。\n\n当然你也可以在上面的情形之下谨慎的使用箭头函数。但特别是在`jquery`和`vue`的情况下, 这通常会干扰正常功能, 并使您感到困惑：为什么看起来跟别人代码一样的代码就是不工作。\n\n总结\n---\n箭头函数是JS语言中十分特别的属性，并且使很多情形中代码更加的变化莫测。尽管如此，就像其他的语言特性，他们有各自的优缺点。因此我们使用它应该仅仅是作为一种工具，而不是无脑的简单的全部替换为箭头函数。\n\n**本文只是个人兴趣翻译，如有错误之处还望各位斧正。文章版权属于原文作者。**\n>原文地址：https://codeburst.io/javascript-arrow-functions-how-why-when-and-when-not-to-use-them-fb8c2de9dbdc\n\n\n\n\n","slug":"array-function","published":1,"updated":"2020-07-26T15:45:00.640Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnbq000hvwtf4g2s1ncb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><p>在现代JS中最让人期待的特性就是关于箭头函数，用<code>=&gt;</code>来标识。箭头函数有两个主要的优点：其一是非常简明的语法，另外就是直观的作用域和<code>this</code>的绑定。</p><p>因为这些优点，箭头函数比起其他形式的函数声明更加受欢迎。比如，受欢迎的<code>airbnb eslint configuration库</code>会强制使用JavaScript箭头函数创建匿名函数。</p><p>然而，就像世间万物一样，箭头函数有一些优点也有一些“缺点”，这就需要在使用的时候做一些权衡了。</p><p>学习如何权衡是使用好箭头函数的关键。在这篇文章中我们将回顾箭头函数是怎样工作的，然后深入探讨，实际代码中箭头函数是如何改进我们代码的，以及一些箭头函数不推荐的情况。</p><a id=\"more\"></a><h2 id=\"什么才是箭头函数\"><a href=\"#什么才是箭头函数\" class=\"headerlink\" title=\"什么才是箭头函数\"></a>什么才是箭头函数</h2><p>JS的箭头函数大概就像python中的<code>lambda(python定义匿名函数的关键字)</code>和ruby中的<code>blocks(类似于闭包)</code>一样。<br>这些匿名函数都有他们特殊的语法：首先接收一定数目的参数，然后在定义它们的函数的作用域或就近作用域中执行。</p><p>接下来我们将详细探讨这些。</p><h2 id=\"箭头函数的语法\"><a href=\"#箭头函数的语法\" class=\"headerlink\" title=\"箭头函数的语法\"></a>箭头函数的语法</h2><p>箭头函数有一个大体的结构，同时也有很多的特殊情况可以简化。<br>核心的结构如下：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">(argument1, argument2, ... argumentN) =&gt; &#123;<br>    <span class=\"hljs-comment\">// function body</span><br>&#125;<br></code></pre></td></tr></table></figure><p>在括号里面有一系列的参数，接着跟着一个箭头符号<code>=&gt;</code>，最后是函数体。这跟传统的函数很相像，只是我们省略了<code>function</code>关键字，并且添加了一个<code>=&gt;</code>在参数后面。</p><p>并且，这里也有很多种情况，让箭头函数结构变得更加的简洁。</p><p>首先，如果函数体里面是一个单独的表达式，你可以省略大括号直接将表达式写在一行，并且表达式的结果也将会被函数直接返回。比如：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> add = <span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> a + b;<br></code></pre></td></tr></table></figure><p>其次，如果这传入的是一个单独的参数，你也可省略参数部分的括号。比如：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> getFirst = <span class=\"hljs-function\"><span class=\"hljs-params\">array</span> =&gt;</span> array[<span class=\"hljs-number\">0</span>];<br></code></pre></td></tr></table></figure><p>如你所见，这样就看起来更加的简洁了，我们也将在后面说明更多的特性。</p><h2 id=\"高级语法\"><a href=\"#高级语法\" class=\"headerlink\" title=\"高级语法\"></a>高级语法</h2><p>如果你了解这些高级语法之后将十分受用。</p><p>首先，如果你尝试在一行书写函数，但是返回的值却是一个对象内容，你原想这样写：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">(name, description) =&gt; &#123;<span class=\"hljs-attr\">name</span>: name, <span class=\"hljs-attr\">description</span>: description&#125;;<br></code></pre></td></tr></table></figure><p>而问题就是这样的语法会引起歧义，会误以为你在写一个函数的函数体。<br>如果想返回的是单个的对象，请用括号包装该对象：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\">(name, description) =&gt; (&#123;<span class=\"hljs-attr\">name</span>: name, <span class=\"hljs-attr\">description</span>: description&#125;);<br></code></pre></td></tr></table></figure><h2 id=\"封闭的上下文作用域\"><a href=\"#封闭的上下文作用域\" class=\"headerlink\" title=\"封闭的上下文作用域\"></a>封闭的上下文作用域</h2><p>不像其他形式的函数，箭头函数并没有他们自己的执行上下文。实际上，这就意味着代码中的<code>this</code>和<code>arguments</code>都是继承自他们的父函数。</p><p>比如，比较下面箭头函数和传统函数的区别：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> test = &#123;<br>  name: <span class=\"hljs-string\">'test object'</span>,<br>  createAnonFunction: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\">this</span>.name);<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-built_in\">arguments</span>);<br>    &#125;;<br>  &#125;,<br>  createArrowFunction: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> &#123;<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\">this</span>.name);<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-built_in\">arguments</span>);<br>    &#125;;<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>我们有一个有两个方法的对象，每个方法都返回了一个匿名函数。区别在于第一个方法里面用了传统的函数表达式，后面的用了箭头函数表达式。如果我们在传入同样的参数运行，我们得到了两个不同的结果。</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> anon = test.createAnonFunction(<span class=\"hljs-string\">'hello'</span>, <span class=\"hljs-string\">'world'</span>);<br><span class=\"hljs-comment\">//返回匿名函数</span><br><span class=\"hljs-keyword\">const</span> arrow = test.createArrowFunction(<span class=\"hljs-string\">'hello'</span>, <span class=\"hljs-string\">'world'</span>);<br>anon();<br><span class=\"hljs-comment\">//undefined</span><br><span class=\"hljs-comment\">//&#123;&#125;</span><br><span class=\"hljs-comment\">// this-&gt;window</span><br>arrow();<br><span class=\"hljs-comment\">//test object</span><br><span class=\"hljs-comment\">//object &#123; '0': 'hello', '1': 'world' &#125;</span><br><span class=\"hljs-comment\">//this-&gt;test</span><br></code></pre></td></tr></table></figure><p>第一个匿名函数有自己的上下文（指向并非test对象），当你调用的时候没有参考的<code>this.name</code>的属性，（注意：现在<code>this</code>指向<code>window</code>），也没有创建它时调用的参数。另一个，箭头函数与创建它的函数有相同的上下文，让其可以访问参数arguments和对象。</p><h2 id=\"箭头函数改进您的代码\"><a href=\"#箭头函数改进您的代码\" class=\"headerlink\" title=\"箭头函数改进您的代码\"></a>箭头函数改进您的代码</h2><p>传统<code>lambda</code>函数的主要用例之一，就是将函数用于数组的遍历，现在用JavaScript箭头函数实现。<br>比如你有一个有值的数组，你想去<code>map</code>遍历每一项，这时箭头函数是非常推荐的：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> words = [<span class=\"hljs-string\">'hello'</span>, <span class=\"hljs-string\">'WORLD'</span>, <span class=\"hljs-string\">'Whatever'</span>];<br><span class=\"hljs-keyword\">const</span> downcasedWords = words.map(<span class=\"hljs-function\"><span class=\"hljs-params\">word</span> =&gt;</span> word.toLowerCase());<br></code></pre></td></tr></table></figure><p>一个及其常见的例子就是返回一个对象的某个值：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> names = objects.map(<span class=\"hljs-function\"><span class=\"hljs-params\">object</span> =&gt;</span> object.name);<br></code></pre></td></tr></table></figure><p>类似的，当用<code>forEach</code>来替换传统<code>for</code>循环的时候，实际上箭头函数会直观的保持<code>this</code>来自于父一级</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">this</span>.examples.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">example</span> =&gt;</span> &#123;<br>  <span class=\"hljs-keyword\">this</span>.runExample(example);<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id=\"Promise和Promise链\"><a href=\"#Promise和Promise链\" class=\"headerlink\" title=\"Promise和Promise链\"></a>Promise和Promise链</h2><p>当在编写异步程序的时候，箭头函数也会让代码更加直观和简洁。</p><p>Promise可以更简单的编写异步程序。虽然你乐意去使用<code>async/await</code>，你也需要好好理解<code>promise</code>,因为这是他们的基础。</p><p>使用promise，仍然需要定义你的代码执行完成之后的回调函数。<br>这是箭头函数的理想位置，特别是如果您生成的函数是有状态的，同时想引用对象中的某些内容。</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">this</span>.doSomethingAsync().then(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =&gt;</span> &#123;<br>  <span class=\"hljs-keyword\">this</span>.storeResult(result);<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id=\"对象转换\"><a href=\"#对象转换\" class=\"headerlink\" title=\"对象转换\"></a>对象转换</h2><p>箭头函数的另一个常见而且十分有用的地方就是用于封装的对象转换。<br>例如在Vue.js中，有一种通用模式，就是使用<code>mapState</code>将Vuex存储的各个部分，直接包含到Vue组件中。<br>这涉及到定义一套<code>mappers</code>，用于从原对象到完整的转换输出，这在组件问题中实十分有必要的。<br>这一系列简单的转换,使用箭头函数是最合适不过的。比如：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;<br>  computed: &#123;<br>    ...mapState(&#123;<br>      results: <span class=\"hljs-function\"><span class=\"hljs-params\">state</span> =&gt;</span> state.results,<br>      users: <span class=\"hljs-function\"><span class=\"hljs-params\">state</span> =&gt;</span> state.users,<br>    &#125;);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id=\"你不应该使用箭头函数的情景\"><a href=\"#你不应该使用箭头函数的情景\" class=\"headerlink\" title=\"你不应该使用箭头函数的情景\"></a>你不应该使用箭头函数的情景</h2><p>这里有许多箭头函数不推荐的场景，这种情况之下不仅没有帮助，而且还会造成不必要的麻烦。</p><p>首先就是对象中的方法。这里有一个函数上下文的例子，对于我们理解很有帮助。<br>曾经流行一种趋势，用<code>class</code>类的语法和箭头函数，为其自动绑定方法。比如:事件方法可以使用，但是仍然绑定在class类中。<br>看起来就像下面的例子:</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Counter</span> </span>&#123;<br>  counter = <span class=\"hljs-number\">0</span>;<br>  handleClick = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">this</span>.counter++;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在这种方法中,如果被一个点击事件函数调用了，它虽然不是<code>Counter</code>的上下文中，它仍旧可以访问实例的数据，这种方式的缺点不言而喻。</p><p>用这种方式的确提供了一种绑定函数的快捷方式，但是函数的表达形式多种多样，相当不直观。如果你尝试在原型使用这种对象，这将不利于测试，同时也会产生很多问题。<br>相反，推荐用一种常规的绑定方式，如有必要可以绑定在实例的构造函数中:</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Counter</span> </span>&#123;<br>  counter = <span class=\"hljs-number\">0</span>;<br>  handleClick() &#123;<br>    <span class=\"hljs-keyword\">this</span>.counter++;<br>  &#125;<br>  <span class=\"hljs-keyword\">constructor</span>() &#123;<br>    <span class=\"hljs-keyword\">this</span>.handleClick = <span class=\"hljs-keyword\">this</span>.handleClick.bind(<span class=\"hljs-keyword\">this</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id=\"深层调用\"><a href=\"#深层调用\" class=\"headerlink\" title=\"深层调用\"></a>深层调用</h2><p>另一种使用箭头函数会让你头疼的地方，就是你去用很多函数的组合调用，尤其是函数的深层调用。<br>简单的理由跟匿名函数一样，堆栈的追踪很复杂。</p><p>如果你的函数仅仅在一层之下，而不是深层的迭代，这倒不是什么问题。但是如果你将函数定义为箭头函数，并且在他们之间来回调用，当你调试bug的时候你将被代码困惑，甚至得到如下的错误信息：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&#123;anonymous&#125;()<br>&#123;anonymous&#125;()<br>&#123;anonymous&#125;()<br>&#123;anonymous&#125;()<br>&#123;anonymous&#125;()<br><span class=\"hljs-comment\">//anonymous 匿名</span><br></code></pre></td></tr></table></figure><h2 id=\"有动态上下文的函数\"><a href=\"#有动态上下文的函数\" class=\"headerlink\" title=\"有动态上下文的函数\"></a>有动态上下文的函数</h2><p>还有最有一种箭头函数会让你困惑的情形，就是<code>this</code>是动态绑定的时候。<br>如果你在以下情形使用箭头函数，那么this的动态绑定不会如期工作，并且你也会困惑这些代码为什么不像预期那样工作，也会给你之后工作的人造成麻烦。<br>一些典型的例子：</p><ul><li>事件的调用函数，this指向当前的目标属性</li><li>在jquery中，大多数时候this指向的是当前被选择的元素</li><li>在vue中，<code>methods</code>和<code>computed</code>中的<code>this</code>指向的是vue的组件。</li></ul><p>当然你也可以在上面的情形之下谨慎的使用箭头函数。但特别是在<code>jquery</code>和<code>vue</code>的情况下, 这通常会干扰正常功能, 并使您感到困惑：为什么看起来跟别人代码一样的代码就是不工作。</p><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>箭头函数是JS语言中十分特别的属性，并且使很多情形中代码更加的变化莫测。尽管如此，就像其他的语言特性，他们有各自的优缺点。因此我们使用它应该仅仅是作为一种工具，而不是无脑的简单的全部替换为箭头函数。</p><p><strong>本文只是个人兴趣翻译，如有错误之处还望各位斧正。文章版权属于原文作者。</strong></p><blockquote><p>原文地址：<a href=\"https://codeburst.io/javascript-arrow-functions-how-why-when-and-when-not-to-use-them-fb8c2de9dbdc\" target=\"_blank\" rel=\"noopener\">https://codeburst.io/javascript-arrow-functions-how-why-when-and-when-not-to-use-them-fb8c2de9dbdc</a></p></blockquote><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><p>在现代JS中最让人期待的特性就是关于箭头函数，用<code>=&gt;</code>来标识。箭头函数有两个主要的优点：其一是非常简明的语法，另外就是直观的作用域和<code>this</code>的绑定。</p><p>因为这些优点，箭头函数比起其他形式的函数声明更加受欢迎。比如，受欢迎的<code>airbnb eslint configuration库</code>会强制使用JavaScript箭头函数创建匿名函数。</p><p>然而，就像世间万物一样，箭头函数有一些优点也有一些“缺点”，这就需要在使用的时候做一些权衡了。</p><p>学习如何权衡是使用好箭头函数的关键。在这篇文章中我们将回顾箭头函数是怎样工作的，然后深入探讨，实际代码中箭头函数是如何改进我们代码的，以及一些箭头函数不推荐的情况。</p>","more":"<h2 id=\"什么才是箭头函数\"><a href=\"#什么才是箭头函数\" class=\"headerlink\" title=\"什么才是箭头函数\"></a>什么才是箭头函数</h2><p>JS的箭头函数大概就像python中的<code>lambda(python定义匿名函数的关键字)</code>和ruby中的<code>blocks(类似于闭包)</code>一样。<br>这些匿名函数都有他们特殊的语法：首先接收一定数目的参数，然后在定义它们的函数的作用域或就近作用域中执行。</p><p>接下来我们将详细探讨这些。</p><h2 id=\"箭头函数的语法\"><a href=\"#箭头函数的语法\" class=\"headerlink\" title=\"箭头函数的语法\"></a>箭头函数的语法</h2><p>箭头函数有一个大体的结构，同时也有很多的特殊情况可以简化。<br>核心的结构如下：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">(argument1, argument2, ... argumentN) =&gt; &#123;<br>    <span class=\"hljs-comment\">// function body</span><br>&#125;<br></code></pre></td></tr></table></figure><p>在括号里面有一系列的参数，接着跟着一个箭头符号<code>=&gt;</code>，最后是函数体。这跟传统的函数很相像，只是我们省略了<code>function</code>关键字，并且添加了一个<code>=&gt;</code>在参数后面。</p><p>并且，这里也有很多种情况，让箭头函数结构变得更加的简洁。</p><p>首先，如果函数体里面是一个单独的表达式，你可以省略大括号直接将表达式写在一行，并且表达式的结果也将会被函数直接返回。比如：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> add = <span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> a + b;<br></code></pre></td></tr></table></figure><p>其次，如果这传入的是一个单独的参数，你也可省略参数部分的括号。比如：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> getFirst = <span class=\"hljs-function\"><span class=\"hljs-params\">array</span> =&gt;</span> array[<span class=\"hljs-number\">0</span>];<br></code></pre></td></tr></table></figure><p>如你所见，这样就看起来更加的简洁了，我们也将在后面说明更多的特性。</p><h2 id=\"高级语法\"><a href=\"#高级语法\" class=\"headerlink\" title=\"高级语法\"></a>高级语法</h2><p>如果你了解这些高级语法之后将十分受用。</p><p>首先，如果你尝试在一行书写函数，但是返回的值却是一个对象内容，你原想这样写：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">(name, description) =&gt; &#123;<span class=\"hljs-attr\">name</span>: name, <span class=\"hljs-attr\">description</span>: description&#125;;<br></code></pre></td></tr></table></figure><p>而问题就是这样的语法会引起歧义，会误以为你在写一个函数的函数体。<br>如果想返回的是单个的对象，请用括号包装该对象：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs JavaScript\">(name, description) =&gt; (&#123;<span class=\"hljs-attr\">name</span>: name, <span class=\"hljs-attr\">description</span>: description&#125;);<br></code></pre></td></tr></table></figure><h2 id=\"封闭的上下文作用域\"><a href=\"#封闭的上下文作用域\" class=\"headerlink\" title=\"封闭的上下文作用域\"></a>封闭的上下文作用域</h2><p>不像其他形式的函数，箭头函数并没有他们自己的执行上下文。实际上，这就意味着代码中的<code>this</code>和<code>arguments</code>都是继承自他们的父函数。</p><p>比如，比较下面箭头函数和传统函数的区别：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> test = &#123;<br>  name: <span class=\"hljs-string\">'test object'</span>,<br>  createAnonFunction: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\">this</span>.name);<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-built_in\">arguments</span>);<br>    &#125;;<br>  &#125;,<br>  createArrowFunction: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> &#123;<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\">this</span>.name);<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-built_in\">arguments</span>);<br>    &#125;;<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>我们有一个有两个方法的对象，每个方法都返回了一个匿名函数。区别在于第一个方法里面用了传统的函数表达式，后面的用了箭头函数表达式。如果我们在传入同样的参数运行，我们得到了两个不同的结果。</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> anon = test.createAnonFunction(<span class=\"hljs-string\">'hello'</span>, <span class=\"hljs-string\">'world'</span>);<br><span class=\"hljs-comment\">//返回匿名函数</span><br><span class=\"hljs-keyword\">const</span> arrow = test.createArrowFunction(<span class=\"hljs-string\">'hello'</span>, <span class=\"hljs-string\">'world'</span>);<br>anon();<br><span class=\"hljs-comment\">//undefined</span><br><span class=\"hljs-comment\">//&#123;&#125;</span><br><span class=\"hljs-comment\">// this-&gt;window</span><br>arrow();<br><span class=\"hljs-comment\">//test object</span><br><span class=\"hljs-comment\">//object &#123; '0': 'hello', '1': 'world' &#125;</span><br><span class=\"hljs-comment\">//this-&gt;test</span><br></code></pre></td></tr></table></figure><p>第一个匿名函数有自己的上下文（指向并非test对象），当你调用的时候没有参考的<code>this.name</code>的属性，（注意：现在<code>this</code>指向<code>window</code>），也没有创建它时调用的参数。另一个，箭头函数与创建它的函数有相同的上下文，让其可以访问参数arguments和对象。</p><h2 id=\"箭头函数改进您的代码\"><a href=\"#箭头函数改进您的代码\" class=\"headerlink\" title=\"箭头函数改进您的代码\"></a>箭头函数改进您的代码</h2><p>传统<code>lambda</code>函数的主要用例之一，就是将函数用于数组的遍历，现在用JavaScript箭头函数实现。<br>比如你有一个有值的数组，你想去<code>map</code>遍历每一项，这时箭头函数是非常推荐的：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> words = [<span class=\"hljs-string\">'hello'</span>, <span class=\"hljs-string\">'WORLD'</span>, <span class=\"hljs-string\">'Whatever'</span>];<br><span class=\"hljs-keyword\">const</span> downcasedWords = words.map(<span class=\"hljs-function\"><span class=\"hljs-params\">word</span> =&gt;</span> word.toLowerCase());<br></code></pre></td></tr></table></figure><p>一个及其常见的例子就是返回一个对象的某个值：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> names = objects.map(<span class=\"hljs-function\"><span class=\"hljs-params\">object</span> =&gt;</span> object.name);<br></code></pre></td></tr></table></figure><p>类似的，当用<code>forEach</code>来替换传统<code>for</code>循环的时候，实际上箭头函数会直观的保持<code>this</code>来自于父一级</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">this</span>.examples.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">example</span> =&gt;</span> &#123;<br>  <span class=\"hljs-keyword\">this</span>.runExample(example);<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id=\"Promise和Promise链\"><a href=\"#Promise和Promise链\" class=\"headerlink\" title=\"Promise和Promise链\"></a>Promise和Promise链</h2><p>当在编写异步程序的时候，箭头函数也会让代码更加直观和简洁。</p><p>Promise可以更简单的编写异步程序。虽然你乐意去使用<code>async/await</code>，你也需要好好理解<code>promise</code>,因为这是他们的基础。</p><p>使用promise，仍然需要定义你的代码执行完成之后的回调函数。<br>这是箭头函数的理想位置，特别是如果您生成的函数是有状态的，同时想引用对象中的某些内容。</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">this</span>.doSomethingAsync().then(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =&gt;</span> &#123;<br>  <span class=\"hljs-keyword\">this</span>.storeResult(result);<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id=\"对象转换\"><a href=\"#对象转换\" class=\"headerlink\" title=\"对象转换\"></a>对象转换</h2><p>箭头函数的另一个常见而且十分有用的地方就是用于封装的对象转换。<br>例如在Vue.js中，有一种通用模式，就是使用<code>mapState</code>将Vuex存储的各个部分，直接包含到Vue组件中。<br>这涉及到定义一套<code>mappers</code>，用于从原对象到完整的转换输出，这在组件问题中实十分有必要的。<br>这一系列简单的转换,使用箭头函数是最合适不过的。比如：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;<br>  computed: &#123;<br>    ...mapState(&#123;<br>      results: <span class=\"hljs-function\"><span class=\"hljs-params\">state</span> =&gt;</span> state.results,<br>      users: <span class=\"hljs-function\"><span class=\"hljs-params\">state</span> =&gt;</span> state.users,<br>    &#125;);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id=\"你不应该使用箭头函数的情景\"><a href=\"#你不应该使用箭头函数的情景\" class=\"headerlink\" title=\"你不应该使用箭头函数的情景\"></a>你不应该使用箭头函数的情景</h2><p>这里有许多箭头函数不推荐的场景，这种情况之下不仅没有帮助，而且还会造成不必要的麻烦。</p><p>首先就是对象中的方法。这里有一个函数上下文的例子，对于我们理解很有帮助。<br>曾经流行一种趋势，用<code>class</code>类的语法和箭头函数，为其自动绑定方法。比如:事件方法可以使用，但是仍然绑定在class类中。<br>看起来就像下面的例子:</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Counter</span> </span>&#123;<br>  counter = <span class=\"hljs-number\">0</span>;<br>  handleClick = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">this</span>.counter++;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在这种方法中,如果被一个点击事件函数调用了，它虽然不是<code>Counter</code>的上下文中，它仍旧可以访问实例的数据，这种方式的缺点不言而喻。</p><p>用这种方式的确提供了一种绑定函数的快捷方式，但是函数的表达形式多种多样，相当不直观。如果你尝试在原型使用这种对象，这将不利于测试，同时也会产生很多问题。<br>相反，推荐用一种常规的绑定方式，如有必要可以绑定在实例的构造函数中:</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Counter</span> </span>&#123;<br>  counter = <span class=\"hljs-number\">0</span>;<br>  handleClick() &#123;<br>    <span class=\"hljs-keyword\">this</span>.counter++;<br>  &#125;<br>  <span class=\"hljs-keyword\">constructor</span>() &#123;<br>    <span class=\"hljs-keyword\">this</span>.handleClick = <span class=\"hljs-keyword\">this</span>.handleClick.bind(<span class=\"hljs-keyword\">this</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id=\"深层调用\"><a href=\"#深层调用\" class=\"headerlink\" title=\"深层调用\"></a>深层调用</h2><p>另一种使用箭头函数会让你头疼的地方，就是你去用很多函数的组合调用，尤其是函数的深层调用。<br>简单的理由跟匿名函数一样，堆栈的追踪很复杂。</p><p>如果你的函数仅仅在一层之下，而不是深层的迭代，这倒不是什么问题。但是如果你将函数定义为箭头函数，并且在他们之间来回调用，当你调试bug的时候你将被代码困惑，甚至得到如下的错误信息：</p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&#123;anonymous&#125;()<br>&#123;anonymous&#125;()<br>&#123;anonymous&#125;()<br>&#123;anonymous&#125;()<br>&#123;anonymous&#125;()<br><span class=\"hljs-comment\">//anonymous 匿名</span><br></code></pre></td></tr></table></figure><h2 id=\"有动态上下文的函数\"><a href=\"#有动态上下文的函数\" class=\"headerlink\" title=\"有动态上下文的函数\"></a>有动态上下文的函数</h2><p>还有最有一种箭头函数会让你困惑的情形，就是<code>this</code>是动态绑定的时候。<br>如果你在以下情形使用箭头函数，那么this的动态绑定不会如期工作，并且你也会困惑这些代码为什么不像预期那样工作，也会给你之后工作的人造成麻烦。<br>一些典型的例子：</p><ul><li>事件的调用函数，this指向当前的目标属性</li><li>在jquery中，大多数时候this指向的是当前被选择的元素</li><li>在vue中，<code>methods</code>和<code>computed</code>中的<code>this</code>指向的是vue的组件。</li></ul><p>当然你也可以在上面的情形之下谨慎的使用箭头函数。但特别是在<code>jquery</code>和<code>vue</code>的情况下, 这通常会干扰正常功能, 并使您感到困惑：为什么看起来跟别人代码一样的代码就是不工作。</p><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>箭头函数是JS语言中十分特别的属性，并且使很多情形中代码更加的变化莫测。尽管如此，就像其他的语言特性，他们有各自的优缺点。因此我们使用它应该仅仅是作为一种工具，而不是无脑的简单的全部替换为箭头函数。</p><p><strong>本文只是个人兴趣翻译，如有错误之处还望各位斧正。文章版权属于原文作者。</strong></p><blockquote><p>原文地址：<a href=\"https://codeburst.io/javascript-arrow-functions-how-why-when-and-when-not-to-use-them-fb8c2de9dbdc\" target=\"_blank\" rel=\"noopener\">https://codeburst.io/javascript-arrow-functions-how-why-when-and-when-not-to-use-them-fb8c2de9dbdc</a></p></blockquote><!-- rebuild by neat -->"},{"title":"CICD实战之Jenkins搭建","abbrlink":"bc65362f","date":"2020-07-25T08:29:10.000Z","_content":"\n## 目的\n\n学习 Jenkins 的搭建\n\n## 准备工作\n\n- 机器：vmware 虚拟机安装的 centos 的最小版本[教程](https://blog.csdn.net/babyxue/article/details/80970526)\n- 终端：zsh[教程](https://www.jianshu.com/p/556ff130fc65)，安装了 autojump、zsh-autosuggestion 以及 zsh-syntax-highlighting 插件[教程](https://www.zrahh.com/archives/167.html)\n- 使用的 xshell 连接 vmware，方便熟悉[教程](https://my.oschina.net/u/4306931/blog/3226337)\n- yum 源阿里源\n\n最终终端图\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F76c0a9fc-a192-4e82-be2a-7df26106a1c2%2Fia_10002.png?table=block&id=f90dfe5e-f647-469d-8dfd-09464ad130ba&width=2300&cache=v2)\n\n<!-- more -->\n## 正式开始\n\n### docker\n\n#### docker 介绍\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F924582a7-0306-4fe5-91b2-fb2e14381754%2Fia_10004.png?table=block&id=33ea4d75-f35d-4b86-80a9-8a05aa2fe695&width=400&cache=v2)\n\n现在都流行容器化部署，想了解 docker 的点[维基百科](https://zh.wikipedia.org/wiki/Docker)和[菜鸟教程](https://www.runoob.com/docker/docker-tutorial.html)\n\n#### docker安装\n\n```bash\n// 安装依赖\nyum install -y yum-utils device-mapper-persistent-data lvm2\nyum-config-manager --add-repo https://download.docker.com/\nyum-config-manager --enable docker-ce-nightly #要每日构建版本的 Docker\nyum-config-manager --enable docker-ce-test\nyum install docker-ce docker-ce-cli containerd.io\n```\n你也可以使用阿里源进行安装\n```bash\n// 安装依赖\nyum install -y yum-utils device-mapper-persistent-data lvm2\nsudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\nyum install docker-ce\n```\n安装成功再 `docker -v`查看\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7971d128-722a-491c-926d-d863c30b4c02%2Fia_10025.png?table=block&id=c701e059-a093-4ba5-ad25-49cec082931e&width=900&cache=v2)\n\n#### 基本命令\n```bash\nsystemctl start docker 启动\nsystemctl enable docker 建立连接\n```\n#### 配置阿里云源\n拉取Docker镜像时，一般默认会去```Docker```官方源拉取镜像，为了优化速度我们更换为[阿里云镜像仓库](https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors)源进行镜像下载加速。\n\n在对应```/etc/docker/daemon.json```添加内容就是了\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fda079af1-512e-4843-abec-4d4436bbe947%2Fia_10024.png?table=block&id=f64d18eb-3bc7-4e55-b5fa-5dcedbf06b19&width=1410&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe8c726ed-b3af-4e1c-952d-2b1a965c189a%2Fia_10023.png?table=block&id=faaa14f7-6321-45a8-af09-b801907ed6d1&width=1350&cache=v2)\n```bash\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://lgt83q7k.mirror.aliyuncs.com\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n### 安装Jenkins\nJenkins是一款由Java编写的开源的持续集成工具。在与Oracle发生争执后，项目从Hudson项目复刻。 Jenkins提供了软件开发的持续集成服务。[维基百科](https://zh.wikipedia.org/zh-cn/Jenkins_(%E8%BD%AF%E4%BB%B6))\n\n#### 安装防火墙\n\n```bash\nyum install firewalld systemd -y\nservice firewalld start //启动防火墙\nfirewall-cmd --permanent --add-service=http\n \nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"172.16.0.0/16\" accept\"\nsystemctl reload firewalld\n```\n关于:\n- Systemd:[Systemd 入门教程：命令篇](http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html)\n- firewalld:[firewall简单使用](https://blog.csdn.net/s_p_j/article/details/80979450)\n- ip的那个地方，我是使用的是的本地虚拟机，因此我配置的本地虚拟机的\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8282f08f-a52f-4c4b-8c8c-c263291d0adf%2Fia_10022.png?table=block&id=76fdf1cd-349e-46bc-9194-fee1e1d2b798&width=2250&cache=v2)\n\n\n**必须配置**，否则会之后的docker启动服务失败\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F260f4ce0-fa5c-4c41-b529-c600d77345ef%2Fia_10021.png?table=block&id=0a10acdf-a2b0-4130-b971-d08dd3833fa6&width=2200&cache=v2)\n\n\n#### docker in docker\n##### 简介\nDocker 采用的是C/S（即Client/Server）架构。我们在执行 ```docker xxx``` 等命令时，其实是使用 Client 在和```docker engine``` 在进行通信。\n\n我们在安装 Docker CE 时，会生成一个``` systemd service ```服务。这个服务启动时，就是 ```Docker Engine``` 服务。默认情况下，Docker守护进程会生成一个``` socket（/var/run/docker.sock）```文件来进行本地进程通信，因此只能在本地使用 docker 客户端或者使用 Docker API 进行操作。\n> *.sock文件：sock 文件是 UNIX 域套接字，它可以通过文件系统（而非网络地址）进行寻址和访问。\n因此，只要把宿主机的Docker套接字通过Docker数据卷挂载到容器内部，就能实现在容器内使用Docker命令（如下图）。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff5afed89-25d6-41b0-956a-a9f9df08aff3%2Fia_10020.png?table=block&id=b859b677-8b38-4036-94f0-703670a4a8e6&width=940&cache=v2)\n**使用方式**：```docker run ... -v /var/run/docker.sock:/var/run/docker.sock```\n****\n### 创建Dockerfile\n\n在/usr/dockerdemo1建立一个Dockerfile\n\n内容\n```\nFROM jenkins/jenkins\nUSER root\n# 清除了基础镜像设置的源，切换成阿里云源\nRUN echo '' > /etc/apt/sources.list.d/jessie-backports.list \\\n  && echo \"deb http://mirrors.aliyun.com/debian jessie main contrib non-free\" > /etc/apt/sources.list \\\n  && echo \"deb http://mirrors.aliyun.com/debian jessie-updates main contrib non-free\" >> /etc/apt/sources.list \\\n  && echo \"deb http://mirrors.aliyun.com/debian-security jessie/updates main contrib non-free\" >> /etc/apt/sources.list\n# 更新源并安装缺少的包\nRUN apt-get update && apt-get install -y libltdl7\nARG dockerGid=999\n\nRUN echo \"docker:x:${dockerGid}:jenkins\" >> /etc/group\n```\n### 构建镜像\n文件创建后，执行```docker build -t local/jenkins .```(名字为:local/jenkins)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fafa628da-57de-44d0-bed7-08a4169a7415%2Fia_10019.png?table=block&id=0758352e-cae5-458d-a073-182e77123f37&width=2800&cache=v2)\n\n如果提示 Successfully tagged local/jenkins:latest 则构建成功。\n\n此处为第二次构建，第二次构建就会非常快，大概流程如下。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff0ba4456-5c1a-433b-9399-87b60a1529ac%2Fia_10018.png?table=block&id=7268e987-568c-47f7-b34f-089b0ad30360&width=3410&cache=v2)\n\n### 创建镜像和容器\n我们将Jenkins用户目录外挂到宿主机内，先新建一个 ```/home/jenkins``` 目录，并设置权限：\n```\nmkdir /home/jenkins\nchown -R 1000 /home/jenkins/\n```\n接下来我们用镜像创建容器并启动：\n```\ndocker run -itd --name jenkins -p 8080:8080 -p 50000:50000 \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-v /usr/bin/docker:/usr/bin/docker \\\n-v /home/jenkins:/var/jenkins_home \\\n--restart always \\\n--user root local/jenkins\n```\n\n创建成功\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fffe8d91c-5c21-403a-9a94-9f1845d11dfb%2Fia_10017.png?table=block&id=a525268f-0afd-43d3-8b0e-96dd923ac6ec&width=3050&cache=v2)\n\n### 启动Jenkins\n#### 设置防火墙\n\n首先我们在防火墙添加 8080 和 50000 端口的放行，并重载防火墙\n```\nfirewall-cmd --zone=public --add-port=8080/tcp --permanent\nfirewall-cmd --zone=public --add-port=50000/tcp --permanent\nsystemctl reload firewalld\n```\n\n然后在```宿主机IP:8080```就可以看到界面了\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fea7f1f14-f38d-4520-a3d9-d10ea4eab0a7%2Fia_10016.png?table=block&id=86405cf1-1a5f-461b-a989-ce34b548ff0c&width=2820&cache=v2)\n#### 设置源\n\n设置源提高Jenkins插件下载速度。因为后面安装插件需要重启，因此这一步可以先操作，避免后面再重启。\n\n```bash\ndocker exec -it jenkins /bin/bash\nfind / -name 'default.json'\nsed -i 's/http:\\/\\/updates.jenkins-ci.org\\/download/https:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/jenkins/g' /var/jenkins_home/updates/default.json && sed -i 's/http:\\/\\/www.google.com/https:\\/\\/www.baidu.com/g' /var/jenkins_home/updates/default.json\nexit;\n```\n#### 初始化完成 \n初始化完成需要我们输入密码\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F69db3d34-27fa-4bde-9443-3a41f7b8d1f8%2Fia_10015.png?table=block&id=e7280034-9346-4d78-b272-ad594b877dea&width=1910&cache=v2)\n我们执行命令\n```\ndocker exec -it jenkins /bin/bash //进入命令行\ncat /var/jenkins_home/secrets/initialAdminPassword\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff91e6a2b-593a-45f6-b08f-f6a8a1b8ca75%2Fia_10014.png?table=block&id=77edd625-75b0-4f30-8808-685f7f26db8c&width=1260&cache=v2)\n密码输入之后就是进入插件安装\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb183706d-35ed-44f7-968c-0415a43b889c%2Fia_10013.png?table=block&id=39e607c5-4526-4bf4-9eef-823bdc9b297b&width=1750&cache=v2)\n设置源之后插件安装就很丝滑流畅\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F29a6381d-def5-47e4-b0e9-2ddca92ae467%2Fia_10012.png?table=block&id=d8a317cc-67ee-4bf9-a02d-5e497552e8b7&width=1740&cache=v2)\n再就是设置管理员了，我这里使用的是：使用admin账户继续。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8ee1278f-ad17-497b-8cd1-5b5bc2689870%2Fia_10011.png?table=block&id=7aee27f9-f5b5-4e51-84c5-194f951fd58a&width=1690&cache=v2)\n\n进入就是我们熟悉的界面了\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F18504ff7-df75-456f-b977-4cd908491074%2Fia_10010.png?table=block&id=4fe29fc4-39ad-4ae6-86ad-8048ae7f9a36&width=2910&cache=v2)\n\n\n#### 小试牛刀\n\n左侧新建Item\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd9670413-b9ca-483c-a64c-329fedc0d52f%2Fia_10009.png?table=block&id=8d203501-73a7-48e3-88cb-9feb41347be2&width=1960&cache=v2)\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff02c9d72-9aa1-4c02-a007-9ce3d00eb68e%2Fia_10008.png?table=block&id=be05bfb7-b662-43f6-8887-cf428e473158&width=2000&cache=v2)\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcd7e2fc1-75af-4434-b46d-7b18768f9b9b%2Fia_10007.png?table=block&id=c0002be6-08ee-4101-82c7-99285d2aa5ac&width=1970&cache=v2)\n输入代码\n```\n  docker -v\n  docker pull node:latest\n```\n保存再触发立即构建就可以看到效果了。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7b7d0620-9464-4f4c-a795-28d344d5f51c%2Fia_10006.png?table=block&id=c453151d-5148-407d-ab0a-8428c9012c33&width=740&cache=v2)\n\n可以在控制台看到对应的输出就大功告成了。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F37d07cf9-8ffb-4734-ab42-a27bc555317e%2Fia_10005.png?table=block&id=2731e2b2-c2d7-4a63-a2a7-7ad02c668f1d&width=1570&cache=v2)\n\n## 结语\n至此，我们已经完整搭建了Jenkins环境，作为CICD不可少的一部分，也算是有了一个良好的开端。撒花！\n\n","source":"_posts/cicd2.md","raw":"---\ntitle: CICD实战之Jenkins搭建\ntags:\n  - CICD\nabbrlink: bc65362f\ndate: 2020-07-25 16:29:10\n---\n\n## 目的\n\n学习 Jenkins 的搭建\n\n## 准备工作\n\n- 机器：vmware 虚拟机安装的 centos 的最小版本[教程](https://blog.csdn.net/babyxue/article/details/80970526)\n- 终端：zsh[教程](https://www.jianshu.com/p/556ff130fc65)，安装了 autojump、zsh-autosuggestion 以及 zsh-syntax-highlighting 插件[教程](https://www.zrahh.com/archives/167.html)\n- 使用的 xshell 连接 vmware，方便熟悉[教程](https://my.oschina.net/u/4306931/blog/3226337)\n- yum 源阿里源\n\n最终终端图\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F76c0a9fc-a192-4e82-be2a-7df26106a1c2%2Fia_10002.png?table=block&id=f90dfe5e-f647-469d-8dfd-09464ad130ba&width=2300&cache=v2)\n\n<!-- more -->\n## 正式开始\n\n### docker\n\n#### docker 介绍\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F924582a7-0306-4fe5-91b2-fb2e14381754%2Fia_10004.png?table=block&id=33ea4d75-f35d-4b86-80a9-8a05aa2fe695&width=400&cache=v2)\n\n现在都流行容器化部署，想了解 docker 的点[维基百科](https://zh.wikipedia.org/wiki/Docker)和[菜鸟教程](https://www.runoob.com/docker/docker-tutorial.html)\n\n#### docker安装\n\n```bash\n// 安装依赖\nyum install -y yum-utils device-mapper-persistent-data lvm2\nyum-config-manager --add-repo https://download.docker.com/\nyum-config-manager --enable docker-ce-nightly #要每日构建版本的 Docker\nyum-config-manager --enable docker-ce-test\nyum install docker-ce docker-ce-cli containerd.io\n```\n你也可以使用阿里源进行安装\n```bash\n// 安装依赖\nyum install -y yum-utils device-mapper-persistent-data lvm2\nsudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\nyum install docker-ce\n```\n安装成功再 `docker -v`查看\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7971d128-722a-491c-926d-d863c30b4c02%2Fia_10025.png?table=block&id=c701e059-a093-4ba5-ad25-49cec082931e&width=900&cache=v2)\n\n#### 基本命令\n```bash\nsystemctl start docker 启动\nsystemctl enable docker 建立连接\n```\n#### 配置阿里云源\n拉取Docker镜像时，一般默认会去```Docker```官方源拉取镜像，为了优化速度我们更换为[阿里云镜像仓库](https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors)源进行镜像下载加速。\n\n在对应```/etc/docker/daemon.json```添加内容就是了\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fda079af1-512e-4843-abec-4d4436bbe947%2Fia_10024.png?table=block&id=f64d18eb-3bc7-4e55-b5fa-5dcedbf06b19&width=1410&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe8c726ed-b3af-4e1c-952d-2b1a965c189a%2Fia_10023.png?table=block&id=faaa14f7-6321-45a8-af09-b801907ed6d1&width=1350&cache=v2)\n```bash\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://lgt83q7k.mirror.aliyuncs.com\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n### 安装Jenkins\nJenkins是一款由Java编写的开源的持续集成工具。在与Oracle发生争执后，项目从Hudson项目复刻。 Jenkins提供了软件开发的持续集成服务。[维基百科](https://zh.wikipedia.org/zh-cn/Jenkins_(%E8%BD%AF%E4%BB%B6))\n\n#### 安装防火墙\n\n```bash\nyum install firewalld systemd -y\nservice firewalld start //启动防火墙\nfirewall-cmd --permanent --add-service=http\n \nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"172.16.0.0/16\" accept\"\nsystemctl reload firewalld\n```\n关于:\n- Systemd:[Systemd 入门教程：命令篇](http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html)\n- firewalld:[firewall简单使用](https://blog.csdn.net/s_p_j/article/details/80979450)\n- ip的那个地方，我是使用的是的本地虚拟机，因此我配置的本地虚拟机的\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8282f08f-a52f-4c4b-8c8c-c263291d0adf%2Fia_10022.png?table=block&id=76fdf1cd-349e-46bc-9194-fee1e1d2b798&width=2250&cache=v2)\n\n\n**必须配置**，否则会之后的docker启动服务失败\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F260f4ce0-fa5c-4c41-b529-c600d77345ef%2Fia_10021.png?table=block&id=0a10acdf-a2b0-4130-b971-d08dd3833fa6&width=2200&cache=v2)\n\n\n#### docker in docker\n##### 简介\nDocker 采用的是C/S（即Client/Server）架构。我们在执行 ```docker xxx``` 等命令时，其实是使用 Client 在和```docker engine``` 在进行通信。\n\n我们在安装 Docker CE 时，会生成一个``` systemd service ```服务。这个服务启动时，就是 ```Docker Engine``` 服务。默认情况下，Docker守护进程会生成一个``` socket（/var/run/docker.sock）```文件来进行本地进程通信，因此只能在本地使用 docker 客户端或者使用 Docker API 进行操作。\n> *.sock文件：sock 文件是 UNIX 域套接字，它可以通过文件系统（而非网络地址）进行寻址和访问。\n因此，只要把宿主机的Docker套接字通过Docker数据卷挂载到容器内部，就能实现在容器内使用Docker命令（如下图）。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff5afed89-25d6-41b0-956a-a9f9df08aff3%2Fia_10020.png?table=block&id=b859b677-8b38-4036-94f0-703670a4a8e6&width=940&cache=v2)\n**使用方式**：```docker run ... -v /var/run/docker.sock:/var/run/docker.sock```\n****\n### 创建Dockerfile\n\n在/usr/dockerdemo1建立一个Dockerfile\n\n内容\n```\nFROM jenkins/jenkins\nUSER root\n# 清除了基础镜像设置的源，切换成阿里云源\nRUN echo '' > /etc/apt/sources.list.d/jessie-backports.list \\\n  && echo \"deb http://mirrors.aliyun.com/debian jessie main contrib non-free\" > /etc/apt/sources.list \\\n  && echo \"deb http://mirrors.aliyun.com/debian jessie-updates main contrib non-free\" >> /etc/apt/sources.list \\\n  && echo \"deb http://mirrors.aliyun.com/debian-security jessie/updates main contrib non-free\" >> /etc/apt/sources.list\n# 更新源并安装缺少的包\nRUN apt-get update && apt-get install -y libltdl7\nARG dockerGid=999\n\nRUN echo \"docker:x:${dockerGid}:jenkins\" >> /etc/group\n```\n### 构建镜像\n文件创建后，执行```docker build -t local/jenkins .```(名字为:local/jenkins)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fafa628da-57de-44d0-bed7-08a4169a7415%2Fia_10019.png?table=block&id=0758352e-cae5-458d-a073-182e77123f37&width=2800&cache=v2)\n\n如果提示 Successfully tagged local/jenkins:latest 则构建成功。\n\n此处为第二次构建，第二次构建就会非常快，大概流程如下。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff0ba4456-5c1a-433b-9399-87b60a1529ac%2Fia_10018.png?table=block&id=7268e987-568c-47f7-b34f-089b0ad30360&width=3410&cache=v2)\n\n### 创建镜像和容器\n我们将Jenkins用户目录外挂到宿主机内，先新建一个 ```/home/jenkins``` 目录，并设置权限：\n```\nmkdir /home/jenkins\nchown -R 1000 /home/jenkins/\n```\n接下来我们用镜像创建容器并启动：\n```\ndocker run -itd --name jenkins -p 8080:8080 -p 50000:50000 \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-v /usr/bin/docker:/usr/bin/docker \\\n-v /home/jenkins:/var/jenkins_home \\\n--restart always \\\n--user root local/jenkins\n```\n\n创建成功\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fffe8d91c-5c21-403a-9a94-9f1845d11dfb%2Fia_10017.png?table=block&id=a525268f-0afd-43d3-8b0e-96dd923ac6ec&width=3050&cache=v2)\n\n### 启动Jenkins\n#### 设置防火墙\n\n首先我们在防火墙添加 8080 和 50000 端口的放行，并重载防火墙\n```\nfirewall-cmd --zone=public --add-port=8080/tcp --permanent\nfirewall-cmd --zone=public --add-port=50000/tcp --permanent\nsystemctl reload firewalld\n```\n\n然后在```宿主机IP:8080```就可以看到界面了\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fea7f1f14-f38d-4520-a3d9-d10ea4eab0a7%2Fia_10016.png?table=block&id=86405cf1-1a5f-461b-a989-ce34b548ff0c&width=2820&cache=v2)\n#### 设置源\n\n设置源提高Jenkins插件下载速度。因为后面安装插件需要重启，因此这一步可以先操作，避免后面再重启。\n\n```bash\ndocker exec -it jenkins /bin/bash\nfind / -name 'default.json'\nsed -i 's/http:\\/\\/updates.jenkins-ci.org\\/download/https:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/jenkins/g' /var/jenkins_home/updates/default.json && sed -i 's/http:\\/\\/www.google.com/https:\\/\\/www.baidu.com/g' /var/jenkins_home/updates/default.json\nexit;\n```\n#### 初始化完成 \n初始化完成需要我们输入密码\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F69db3d34-27fa-4bde-9443-3a41f7b8d1f8%2Fia_10015.png?table=block&id=e7280034-9346-4d78-b272-ad594b877dea&width=1910&cache=v2)\n我们执行命令\n```\ndocker exec -it jenkins /bin/bash //进入命令行\ncat /var/jenkins_home/secrets/initialAdminPassword\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff91e6a2b-593a-45f6-b08f-f6a8a1b8ca75%2Fia_10014.png?table=block&id=77edd625-75b0-4f30-8808-685f7f26db8c&width=1260&cache=v2)\n密码输入之后就是进入插件安装\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb183706d-35ed-44f7-968c-0415a43b889c%2Fia_10013.png?table=block&id=39e607c5-4526-4bf4-9eef-823bdc9b297b&width=1750&cache=v2)\n设置源之后插件安装就很丝滑流畅\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F29a6381d-def5-47e4-b0e9-2ddca92ae467%2Fia_10012.png?table=block&id=d8a317cc-67ee-4bf9-a02d-5e497552e8b7&width=1740&cache=v2)\n再就是设置管理员了，我这里使用的是：使用admin账户继续。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8ee1278f-ad17-497b-8cd1-5b5bc2689870%2Fia_10011.png?table=block&id=7aee27f9-f5b5-4e51-84c5-194f951fd58a&width=1690&cache=v2)\n\n进入就是我们熟悉的界面了\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F18504ff7-df75-456f-b977-4cd908491074%2Fia_10010.png?table=block&id=4fe29fc4-39ad-4ae6-86ad-8048ae7f9a36&width=2910&cache=v2)\n\n\n#### 小试牛刀\n\n左侧新建Item\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd9670413-b9ca-483c-a64c-329fedc0d52f%2Fia_10009.png?table=block&id=8d203501-73a7-48e3-88cb-9feb41347be2&width=1960&cache=v2)\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff02c9d72-9aa1-4c02-a007-9ce3d00eb68e%2Fia_10008.png?table=block&id=be05bfb7-b662-43f6-8887-cf428e473158&width=2000&cache=v2)\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcd7e2fc1-75af-4434-b46d-7b18768f9b9b%2Fia_10007.png?table=block&id=c0002be6-08ee-4101-82c7-99285d2aa5ac&width=1970&cache=v2)\n输入代码\n```\n  docker -v\n  docker pull node:latest\n```\n保存再触发立即构建就可以看到效果了。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7b7d0620-9464-4f4c-a795-28d344d5f51c%2Fia_10006.png?table=block&id=c453151d-5148-407d-ab0a-8428c9012c33&width=740&cache=v2)\n\n可以在控制台看到对应的输出就大功告成了。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F37d07cf9-8ffb-4734-ab42-a27bc555317e%2Fia_10005.png?table=block&id=2731e2b2-c2d7-4a63-a2a7-7ad02c668f1d&width=1570&cache=v2)\n\n## 结语\n至此，我们已经完整搭建了Jenkins环境，作为CICD不可少的一部分，也算是有了一个良好的开端。撒花！\n\n","slug":"cicd2","published":1,"updated":"2020-08-02T11:41:14.326Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnbw000jvwtf0m0qcuqu","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>学习 Jenkins 的搭建</p><h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ul><li>机器：vmware 虚拟机安装的 centos 的最小版本<a href=\"https://blog.csdn.net/babyxue/article/details/80970526\" target=\"_blank\" rel=\"noopener\">教程</a></li><li>终端：zsh<a href=\"https://www.jianshu.com/p/556ff130fc65\" target=\"_blank\" rel=\"noopener\">教程</a>，安装了 autojump、zsh-autosuggestion 以及 zsh-syntax-highlighting 插件<a href=\"https://www.zrahh.com/archives/167.html\" target=\"_blank\" rel=\"noopener\">教程</a></li><li>使用的 xshell 连接 vmware，方便熟悉<a href=\"https://my.oschina.net/u/4306931/blog/3226337\" target=\"_blank\" rel=\"noopener\">教程</a></li><li>yum 源阿里源</li></ul><p>最终终端图<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F76c0a9fc-a192-4e82-be2a-7df26106a1c2%2Fia_10002.png?table=block&id=f90dfe5e-f647-469d-8dfd-09464ad130ba&width=2300&cache=v2\" alt=\"\"></p><a id=\"more\"></a><h2 id=\"正式开始\"><a href=\"#正式开始\" class=\"headerlink\" title=\"正式开始\"></a>正式开始</h2><h3 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h3><h4 id=\"docker-介绍\"><a href=\"#docker-介绍\" class=\"headerlink\" title=\"docker 介绍\"></a>docker 介绍</h4><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F924582a7-0306-4fe5-91b2-fb2e14381754%2Fia_10004.png?table=block&id=33ea4d75-f35d-4b86-80a9-8a05aa2fe695&width=400&cache=v2\" alt=\"\"></p><p>现在都流行容器化部署，想了解 docker 的点<a href=\"https://zh.wikipedia.org/wiki/Docker\" target=\"_blank\" rel=\"noopener\">维基百科</a>和<a href=\"https://www.runoob.com/docker/docker-tutorial.html\" target=\"_blank\" rel=\"noopener\">菜鸟教程</a></p><h4 id=\"docker安装\"><a href=\"#docker安装\" class=\"headerlink\" title=\"docker安装\"></a>docker安装</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">// 安装依赖<br>yum install -y yum-utils device-mapper-persistent-data lvm2<br>yum-config-manager --add-repo https://download.docker.com/<br>yum-config-manager --<span class=\"hljs-built_in\">enable</span> docker-ce-nightly <span class=\"hljs-comment\">#要每日构建版本的 Docker</span><br>yum-config-manager --<span class=\"hljs-built_in\">enable</span> docker-ce-test<br>yum install docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><p>你也可以使用阿里源进行安装</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">// 安装依赖<br>yum install -y yum-utils device-mapper-persistent-data lvm2<br>sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br>yum install docker-ce<br></code></pre></td></tr></table></figure><p>安装成功再 <code>docker -v</code>查看<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7971d128-722a-491c-926d-d863c30b4c02%2Fia_10025.png?table=block&id=c701e059-a093-4ba5-ad25-49cec082931e&width=900&cache=v2\" alt=\"\"></p><h4 id=\"基本命令\"><a href=\"#基本命令\" class=\"headerlink\" title=\"基本命令\"></a>基本命令</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">systemctl start docker 启动<br>systemctl <span class=\"hljs-built_in\">enable</span> docker 建立连接<br></code></pre></td></tr></table></figure><h4 id=\"配置阿里云源\"><a href=\"#配置阿里云源\" class=\"headerlink\" title=\"配置阿里云源\"></a>配置阿里云源</h4><p>拉取Docker镜像时，一般默认会去<code>Docker</code>官方源拉取镜像，为了优化速度我们更换为<a href=\"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors\" target=\"_blank\" rel=\"noopener\">阿里云镜像仓库</a>源进行镜像下载加速。</p><p>在对应<code>/etc/docker/daemon.json</code>添加内容就是了<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fda079af1-512e-4843-abec-4d4436bbe947%2Fia_10024.png?table=block&id=f64d18eb-3bc7-4e55-b5fa-5dcedbf06b19&width=1410&cache=v2\" alt=\"\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe8c726ed-b3af-4e1c-952d-2b1a965c189a%2Fia_10023.png?table=block&id=faaa14f7-6321-45a8-af09-b801907ed6d1&width=1350&cache=v2\" alt=\"\"></p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mkdir -p /etc/docker<br>sudo tee /etc/docker/daemon.json &lt;&lt;-<span class=\"hljs-string\">'EOF'</span><br>&#123;<br>  <span class=\"hljs-string\">\"registry-mirrors\"</span>: [<span class=\"hljs-string\">\"https://lgt83q7k.mirror.aliyuncs.com\"</span>]<br>&#125;<br>EOF<br>sudo systemctl daemon-reload<br>sudo systemctl restart docker<br></code></pre></td></tr></table></figure><h3 id=\"安装Jenkins\"><a href=\"#安装Jenkins\" class=\"headerlink\" title=\"安装Jenkins\"></a>安装Jenkins</h3><p>Jenkins是一款由Java编写的开源的持续集成工具。在与Oracle发生争执后，项目从Hudson项目复刻。 Jenkins提供了软件开发的持续集成服务。<a href=\"https://zh.wikipedia.org/zh-cn/Jenkins_(%E8%BD%AF%E4%BB%B6)\" target=\"_blank\" rel=\"noopener\">维基百科</a></p><h4 id=\"安装防火墙\"><a href=\"#安装防火墙\" class=\"headerlink\" title=\"安装防火墙\"></a>安装防火墙</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">yum install firewalld systemd -y<br>service firewalld start //启动防火墙<br>firewall-cmd --permanent --add-service=http<br> <br>firewall-cmd --permanent --add-rich-rule=<span class=\"hljs-string\">\"rule family=\"</span>ipv4<span class=\"hljs-string\">\" source address=\"</span>172.16.0.0/16<span class=\"hljs-string\">\" accept\"</span><br>systemctl reload firewalld<br></code></pre></td></tr></table></figure><p>关于:</p><ul><li>Systemd:<a href=\"http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html\" target=\"_blank\" rel=\"noopener\">Systemd 入门教程：命令篇</a></li><li>firewalld:<a href=\"https://blog.csdn.net/s_p_j/article/details/80979450\" target=\"_blank\" rel=\"noopener\">firewall简单使用</a></li><li>ip的那个地方，我是使用的是的本地虚拟机，因此我配置的本地虚拟机的<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8282f08f-a52f-4c4b-8c8c-c263291d0adf%2Fia_10022.png?table=block&id=76fdf1cd-349e-46bc-9194-fee1e1d2b798&width=2250&cache=v2\" alt=\"\"></li></ul><p><strong>必须配置</strong>，否则会之后的docker启动服务失败</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F260f4ce0-fa5c-4c41-b529-c600d77345ef%2Fia_10021.png?table=block&id=0a10acdf-a2b0-4130-b971-d08dd3833fa6&width=2200&cache=v2\" alt=\"\"></p><h4 id=\"docker-in-docker\"><a href=\"#docker-in-docker\" class=\"headerlink\" title=\"docker in docker\"></a>docker in docker</h4><h5 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h5><p>Docker 采用的是C/S（即Client/Server）架构。我们在执行 <code>docker xxx</code> 等命令时，其实是使用 Client 在和<code>docker engine</code> 在进行通信。</p><p>我们在安装 Docker CE 时，会生成一个<code>systemd service</code>服务。这个服务启动时，就是 <code>Docker Engine</code> 服务。默认情况下，Docker守护进程会生成一个<code>socket（/var/run/docker.sock）</code>文件来进行本地进程通信，因此只能在本地使用 docker 客户端或者使用 Docker API 进行操作。</p><blockquote><p>*.sock文件：sock 文件是 UNIX 域套接字，它可以通过文件系统（而非网络地址）进行寻址和访问。<br>因此，只要把宿主机的Docker套接字通过Docker数据卷挂载到容器内部，就能实现在容器内使用Docker命令（如下图）。</p></blockquote><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff5afed89-25d6-41b0-956a-a9f9df08aff3%2Fia_10020.png?table=block&id=b859b677-8b38-4036-94f0-703670a4a8e6&width=940&cache=v2\" alt=\"\"><br><strong>使用方式</strong>：<code>docker run ... -v /var/run/docker.sock:/var/run/docker.sock</code></p><hr><h3 id=\"创建Dockerfile\"><a href=\"#创建Dockerfile\" class=\"headerlink\" title=\"创建Dockerfile\"></a>创建Dockerfile</h3><p>在/usr/dockerdemo1建立一个Dockerfile</p><p>内容</p><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-keyword\">FROM</span> jenkins/jenkins<br>USER root<br><span class=\"hljs-comment\"># 清除了基础镜像设置的源，切换成阿里云源</span><br><span class=\"hljs-builtin-name\">RUN</span> echo <span class=\"hljs-string\">''</span> &gt; /etc/apt/sources.list.d/jessie-backports.list \\<br>  &amp;&amp; echo <span class=\"hljs-string\">\"deb http://mirrors.aliyun.com/debian jessie main contrib non-free\"</span> &gt; /etc/apt/sources.list \\<br>  &amp;&amp; echo <span class=\"hljs-string\">\"deb http://mirrors.aliyun.com/debian jessie-updates main contrib non-free\"</span> &gt;&gt; /etc/apt/sources.list \\<br>  &amp;&amp; echo <span class=\"hljs-string\">\"deb http://mirrors.aliyun.com/debian-security jessie/updates main contrib non-free\"</span> &gt;&gt; /etc/apt/sources.list<br><span class=\"hljs-comment\"># 更新源并安装缺少的包</span><br><span class=\"hljs-builtin-name\">RUN</span> apt-<span class=\"hljs-builtin-name\">get</span> update &amp;&amp; apt-<span class=\"hljs-builtin-name\">get</span> install -y libltdl7<br>ARG <span class=\"hljs-attribute\">dockerGid</span>=999<br><br><span class=\"hljs-builtin-name\">RUN</span> echo <span class=\"hljs-string\">\"docker:x:<span class=\"hljs-variable\">$&#123;dockerGid&#125;</span>:jenkins\"</span> &gt;&gt; /etc/group<br></code></pre></td></tr></table></figure><h3 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h3><p>文件创建后，执行<code>docker build -t local/jenkins .</code>(名字为:local/jenkins)</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fafa628da-57de-44d0-bed7-08a4169a7415%2Fia_10019.png?table=block&id=0758352e-cae5-458d-a073-182e77123f37&width=2800&cache=v2\" alt=\"\"></p><p>如果提示 Successfully tagged local/jenkins:latest 则构建成功。</p><p>此处为第二次构建，第二次构建就会非常快，大概流程如下。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff0ba4456-5c1a-433b-9399-87b60a1529ac%2Fia_10018.png?table=block&id=7268e987-568c-47f7-b34f-089b0ad30360&width=3410&cache=v2\" alt=\"\"></p><h3 id=\"创建镜像和容器\"><a href=\"#创建镜像和容器\" class=\"headerlink\" title=\"创建镜像和容器\"></a>创建镜像和容器</h3><p>我们将Jenkins用户目录外挂到宿主机内，先新建一个 <code>/home/jenkins</code> 目录，并设置权限：</p><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\"><span class=\"hljs-built_in\">mkdir</span> /<span class=\"hljs-built_in\">home</span>/jenkins<br>chown -R <span class=\"hljs-number\">1000</span> /<span class=\"hljs-built_in\">home</span>/jenkins/<br></code></pre></td></tr></table></figure><p>接下来我们用镜像创建容器并启动：</p><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs groovy\">docker run -itd --name jenkins -p <span class=\"hljs-number\">8080</span>:<span class=\"hljs-number\">8080</span> -p <span class=\"hljs-number\">50000</span>:<span class=\"hljs-number\">50000</span> \\<br>-v <span class=\"hljs-regexp\">/var/</span>run<span class=\"hljs-regexp\">/docker.sock:/</span>var<span class=\"hljs-regexp\">/run/</span>docker.sock \\<br>-v <span class=\"hljs-regexp\">/usr/</span>bin<span class=\"hljs-regexp\">/docker:/</span>usr<span class=\"hljs-regexp\">/bin/</span>docker \\<br>-v <span class=\"hljs-regexp\">/home/</span><span class=\"hljs-string\">jenkins:</span><span class=\"hljs-regexp\">/var/</span>jenkins_home \\<br>--restart always \\<br>--user root local/jenkins<br></code></pre></td></tr></table></figure><p>创建成功</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fffe8d91c-5c21-403a-9a94-9f1845d11dfb%2Fia_10017.png?table=block&id=a525268f-0afd-43d3-8b0e-96dd923ac6ec&width=3050&cache=v2\" alt=\"\"></p><h3 id=\"启动Jenkins\"><a href=\"#启动Jenkins\" class=\"headerlink\" title=\"启动Jenkins\"></a>启动Jenkins</h3><h4 id=\"设置防火墙\"><a href=\"#设置防火墙\" class=\"headerlink\" title=\"设置防火墙\"></a>设置防火墙</h4><p>首先我们在防火墙添加 8080 和 50000 端口的放行，并重载防火墙</p><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">firewall-cmd <span class=\"hljs-attribute\">--zone</span>=public <span class=\"hljs-attribute\">--add-port</span>=8080/tcp --permanent<br>firewall-cmd <span class=\"hljs-attribute\">--zone</span>=public <span class=\"hljs-attribute\">--add-port</span>=50000/tcp --permanent<br>systemctl reload firewalld<br></code></pre></td></tr></table></figure><p>然后在<code>宿主机IP:8080</code>就可以看到界面了</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fea7f1f14-f38d-4520-a3d9-d10ea4eab0a7%2Fia_10016.png?table=block&id=86405cf1-1a5f-461b-a989-ce34b548ff0c&width=2820&cache=v2\" alt=\"\"></p><h4 id=\"设置源\"><a href=\"#设置源\" class=\"headerlink\" title=\"设置源\"></a>设置源</h4><p>设置源提高Jenkins插件下载速度。因为后面安装插件需要重启，因此这一步可以先操作，避免后面再重启。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -it jenkins /bin/bash<br>find / -name <span class=\"hljs-string\">'default.json'</span><br>sed -i <span class=\"hljs-string\">'s/http:\\/\\/updates.jenkins-ci.org\\/download/https:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/jenkins/g'</span> /var/jenkins_home/updates/default.json &amp;&amp; sed -i <span class=\"hljs-string\">'s/http:\\/\\/www.google.com/https:\\/\\/www.baidu.com/g'</span> /var/jenkins_home/updates/default.json<br><span class=\"hljs-built_in\">exit</span>;<br></code></pre></td></tr></table></figure><h4 id=\"初始化完成\"><a href=\"#初始化完成\" class=\"headerlink\" title=\"初始化完成\"></a>初始化完成</h4><p>初始化完成需要我们输入密码<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F69db3d34-27fa-4bde-9443-3a41f7b8d1f8%2Fia_10015.png?table=block&id=e7280034-9346-4d78-b272-ad594b877dea&width=1910&cache=v2\" alt=\"\"><br>我们执行命令</p><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">docker exec -it jenkins <span class=\"hljs-regexp\">/bin/</span>bash <span class=\"hljs-regexp\">//</span>进入命令行<br>cat <span class=\"hljs-regexp\">/var/</span>jenkins_home<span class=\"hljs-regexp\">/secrets/i</span>nitialAdminPassword<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff91e6a2b-593a-45f6-b08f-f6a8a1b8ca75%2Fia_10014.png?table=block&id=77edd625-75b0-4f30-8808-685f7f26db8c&width=1260&cache=v2\" alt=\"\"><br>密码输入之后就是进入插件安装<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb183706d-35ed-44f7-968c-0415a43b889c%2Fia_10013.png?table=block&id=39e607c5-4526-4bf4-9eef-823bdc9b297b&width=1750&cache=v2\" alt=\"\"><br>设置源之后插件安装就很丝滑流畅<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F29a6381d-def5-47e4-b0e9-2ddca92ae467%2Fia_10012.png?table=block&id=d8a317cc-67ee-4bf9-a02d-5e497552e8b7&width=1740&cache=v2\" alt=\"\"><br>再就是设置管理员了，我这里使用的是：使用admin账户继续。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8ee1278f-ad17-497b-8cd1-5b5bc2689870%2Fia_10011.png?table=block&id=7aee27f9-f5b5-4e51-84c5-194f951fd58a&width=1690&cache=v2\" alt=\"\"></p><p>进入就是我们熟悉的界面了<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F18504ff7-df75-456f-b977-4cd908491074%2Fia_10010.png?table=block&id=4fe29fc4-39ad-4ae6-86ad-8048ae7f9a36&width=2910&cache=v2\" alt=\"\"></p><h4 id=\"小试牛刀\"><a href=\"#小试牛刀\" class=\"headerlink\" title=\"小试牛刀\"></a>小试牛刀</h4><p>左侧新建Item<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd9670413-b9ca-483c-a64c-329fedc0d52f%2Fia_10009.png?table=block&id=8d203501-73a7-48e3-88cb-9feb41347be2&width=1960&cache=v2\" alt=\"\"><br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff02c9d72-9aa1-4c02-a007-9ce3d00eb68e%2Fia_10008.png?table=block&id=be05bfb7-b662-43f6-8887-cf428e473158&width=2000&cache=v2\" alt=\"\"><br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcd7e2fc1-75af-4434-b46d-7b18768f9b9b%2Fia_10007.png?table=block&id=c0002be6-08ee-4101-82c7-99285d2aa5ac&width=1970&cache=v2\" alt=\"\"><br>输入代码</p><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">docker -v<br>docker pull <span class=\"hljs-keyword\">node</span><span class=\"hljs-title\">:latest</span><br></code></pre></td></tr></table></figure><p>保存再触发立即构建就可以看到效果了。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7b7d0620-9464-4f4c-a795-28d344d5f51c%2Fia_10006.png?table=block&id=c453151d-5148-407d-ab0a-8428c9012c33&width=740&cache=v2\" alt=\"\"></p><p>可以在控制台看到对应的输出就大功告成了。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F37d07cf9-8ffb-4734-ab42-a27bc555317e%2Fia_10005.png?table=block&id=2731e2b2-c2d7-4a63-a2a7-7ad02c668f1d&width=1570&cache=v2\" alt=\"\"></p><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>至此，我们已经完整搭建了Jenkins环境，作为CICD不可少的一部分，也算是有了一个良好的开端。撒花！</p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>学习 Jenkins 的搭建</p><h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ul><li>机器：vmware 虚拟机安装的 centos 的最小版本<a href=\"https://blog.csdn.net/babyxue/article/details/80970526\" target=\"_blank\" rel=\"noopener\">教程</a></li><li>终端：zsh<a href=\"https://www.jianshu.com/p/556ff130fc65\" target=\"_blank\" rel=\"noopener\">教程</a>，安装了 autojump、zsh-autosuggestion 以及 zsh-syntax-highlighting 插件<a href=\"https://www.zrahh.com/archives/167.html\" target=\"_blank\" rel=\"noopener\">教程</a></li><li>使用的 xshell 连接 vmware，方便熟悉<a href=\"https://my.oschina.net/u/4306931/blog/3226337\" target=\"_blank\" rel=\"noopener\">教程</a></li><li>yum 源阿里源</li></ul><p>最终终端图<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F76c0a9fc-a192-4e82-be2a-7df26106a1c2%2Fia_10002.png?table=block&id=f90dfe5e-f647-469d-8dfd-09464ad130ba&width=2300&cache=v2\" alt=\"\"></p>","more":"<h2 id=\"正式开始\"><a href=\"#正式开始\" class=\"headerlink\" title=\"正式开始\"></a>正式开始</h2><h3 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h3><h4 id=\"docker-介绍\"><a href=\"#docker-介绍\" class=\"headerlink\" title=\"docker 介绍\"></a>docker 介绍</h4><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F924582a7-0306-4fe5-91b2-fb2e14381754%2Fia_10004.png?table=block&id=33ea4d75-f35d-4b86-80a9-8a05aa2fe695&width=400&cache=v2\" alt=\"\"></p><p>现在都流行容器化部署，想了解 docker 的点<a href=\"https://zh.wikipedia.org/wiki/Docker\" target=\"_blank\" rel=\"noopener\">维基百科</a>和<a href=\"https://www.runoob.com/docker/docker-tutorial.html\" target=\"_blank\" rel=\"noopener\">菜鸟教程</a></p><h4 id=\"docker安装\"><a href=\"#docker安装\" class=\"headerlink\" title=\"docker安装\"></a>docker安装</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">// 安装依赖<br>yum install -y yum-utils device-mapper-persistent-data lvm2<br>yum-config-manager --add-repo https://download.docker.com/<br>yum-config-manager --<span class=\"hljs-built_in\">enable</span> docker-ce-nightly <span class=\"hljs-comment\">#要每日构建版本的 Docker</span><br>yum-config-manager --<span class=\"hljs-built_in\">enable</span> docker-ce-test<br>yum install docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><p>你也可以使用阿里源进行安装</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">// 安装依赖<br>yum install -y yum-utils device-mapper-persistent-data lvm2<br>sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br>yum install docker-ce<br></code></pre></td></tr></table></figure><p>安装成功再 <code>docker -v</code>查看<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7971d128-722a-491c-926d-d863c30b4c02%2Fia_10025.png?table=block&id=c701e059-a093-4ba5-ad25-49cec082931e&width=900&cache=v2\" alt=\"\"></p><h4 id=\"基本命令\"><a href=\"#基本命令\" class=\"headerlink\" title=\"基本命令\"></a>基本命令</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">systemctl start docker 启动<br>systemctl <span class=\"hljs-built_in\">enable</span> docker 建立连接<br></code></pre></td></tr></table></figure><h4 id=\"配置阿里云源\"><a href=\"#配置阿里云源\" class=\"headerlink\" title=\"配置阿里云源\"></a>配置阿里云源</h4><p>拉取Docker镜像时，一般默认会去<code>Docker</code>官方源拉取镜像，为了优化速度我们更换为<a href=\"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors\" target=\"_blank\" rel=\"noopener\">阿里云镜像仓库</a>源进行镜像下载加速。</p><p>在对应<code>/etc/docker/daemon.json</code>添加内容就是了<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fda079af1-512e-4843-abec-4d4436bbe947%2Fia_10024.png?table=block&id=f64d18eb-3bc7-4e55-b5fa-5dcedbf06b19&width=1410&cache=v2\" alt=\"\"></p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe8c726ed-b3af-4e1c-952d-2b1a965c189a%2Fia_10023.png?table=block&id=faaa14f7-6321-45a8-af09-b801907ed6d1&width=1350&cache=v2\" alt=\"\"></p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo mkdir -p /etc/docker<br>sudo tee /etc/docker/daemon.json &lt;&lt;-<span class=\"hljs-string\">'EOF'</span><br>&#123;<br>  <span class=\"hljs-string\">\"registry-mirrors\"</span>: [<span class=\"hljs-string\">\"https://lgt83q7k.mirror.aliyuncs.com\"</span>]<br>&#125;<br>EOF<br>sudo systemctl daemon-reload<br>sudo systemctl restart docker<br></code></pre></td></tr></table></figure><h3 id=\"安装Jenkins\"><a href=\"#安装Jenkins\" class=\"headerlink\" title=\"安装Jenkins\"></a>安装Jenkins</h3><p>Jenkins是一款由Java编写的开源的持续集成工具。在与Oracle发生争执后，项目从Hudson项目复刻。 Jenkins提供了软件开发的持续集成服务。<a href=\"https://zh.wikipedia.org/zh-cn/Jenkins_(%E8%BD%AF%E4%BB%B6)\" target=\"_blank\" rel=\"noopener\">维基百科</a></p><h4 id=\"安装防火墙\"><a href=\"#安装防火墙\" class=\"headerlink\" title=\"安装防火墙\"></a>安装防火墙</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">yum install firewalld systemd -y<br>service firewalld start //启动防火墙<br>firewall-cmd --permanent --add-service=http<br> <br>firewall-cmd --permanent --add-rich-rule=<span class=\"hljs-string\">\"rule family=\"</span>ipv4<span class=\"hljs-string\">\" source address=\"</span>172.16.0.0/16<span class=\"hljs-string\">\" accept\"</span><br>systemctl reload firewalld<br></code></pre></td></tr></table></figure><p>关于:</p><ul><li>Systemd:<a href=\"http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html\" target=\"_blank\" rel=\"noopener\">Systemd 入门教程：命令篇</a></li><li>firewalld:<a href=\"https://blog.csdn.net/s_p_j/article/details/80979450\" target=\"_blank\" rel=\"noopener\">firewall简单使用</a></li><li>ip的那个地方，我是使用的是的本地虚拟机，因此我配置的本地虚拟机的<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8282f08f-a52f-4c4b-8c8c-c263291d0adf%2Fia_10022.png?table=block&id=76fdf1cd-349e-46bc-9194-fee1e1d2b798&width=2250&cache=v2\" alt=\"\"></li></ul><p><strong>必须配置</strong>，否则会之后的docker启动服务失败</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F260f4ce0-fa5c-4c41-b529-c600d77345ef%2Fia_10021.png?table=block&id=0a10acdf-a2b0-4130-b971-d08dd3833fa6&width=2200&cache=v2\" alt=\"\"></p><h4 id=\"docker-in-docker\"><a href=\"#docker-in-docker\" class=\"headerlink\" title=\"docker in docker\"></a>docker in docker</h4><h5 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h5><p>Docker 采用的是C/S（即Client/Server）架构。我们在执行 <code>docker xxx</code> 等命令时，其实是使用 Client 在和<code>docker engine</code> 在进行通信。</p><p>我们在安装 Docker CE 时，会生成一个<code>systemd service</code>服务。这个服务启动时，就是 <code>Docker Engine</code> 服务。默认情况下，Docker守护进程会生成一个<code>socket（/var/run/docker.sock）</code>文件来进行本地进程通信，因此只能在本地使用 docker 客户端或者使用 Docker API 进行操作。</p><blockquote><p>*.sock文件：sock 文件是 UNIX 域套接字，它可以通过文件系统（而非网络地址）进行寻址和访问。<br>因此，只要把宿主机的Docker套接字通过Docker数据卷挂载到容器内部，就能实现在容器内使用Docker命令（如下图）。</p></blockquote><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff5afed89-25d6-41b0-956a-a9f9df08aff3%2Fia_10020.png?table=block&id=b859b677-8b38-4036-94f0-703670a4a8e6&width=940&cache=v2\" alt=\"\"><br><strong>使用方式</strong>：<code>docker run ... -v /var/run/docker.sock:/var/run/docker.sock</code></p><hr><h3 id=\"创建Dockerfile\"><a href=\"#创建Dockerfile\" class=\"headerlink\" title=\"创建Dockerfile\"></a>创建Dockerfile</h3><p>在/usr/dockerdemo1建立一个Dockerfile</p><p>内容</p><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-keyword\">FROM</span> jenkins/jenkins<br>USER root<br><span class=\"hljs-comment\"># 清除了基础镜像设置的源，切换成阿里云源</span><br><span class=\"hljs-builtin-name\">RUN</span> echo <span class=\"hljs-string\">''</span> &gt; /etc/apt/sources.list.d/jessie-backports.list \\<br>  &amp;&amp; echo <span class=\"hljs-string\">\"deb http://mirrors.aliyun.com/debian jessie main contrib non-free\"</span> &gt; /etc/apt/sources.list \\<br>  &amp;&amp; echo <span class=\"hljs-string\">\"deb http://mirrors.aliyun.com/debian jessie-updates main contrib non-free\"</span> &gt;&gt; /etc/apt/sources.list \\<br>  &amp;&amp; echo <span class=\"hljs-string\">\"deb http://mirrors.aliyun.com/debian-security jessie/updates main contrib non-free\"</span> &gt;&gt; /etc/apt/sources.list<br><span class=\"hljs-comment\"># 更新源并安装缺少的包</span><br><span class=\"hljs-builtin-name\">RUN</span> apt-<span class=\"hljs-builtin-name\">get</span> update &amp;&amp; apt-<span class=\"hljs-builtin-name\">get</span> install -y libltdl7<br>ARG <span class=\"hljs-attribute\">dockerGid</span>=999<br><br><span class=\"hljs-builtin-name\">RUN</span> echo <span class=\"hljs-string\">\"docker:x:<span class=\"hljs-variable\">$&#123;dockerGid&#125;</span>:jenkins\"</span> &gt;&gt; /etc/group<br></code></pre></td></tr></table></figure><h3 id=\"构建镜像\"><a href=\"#构建镜像\" class=\"headerlink\" title=\"构建镜像\"></a>构建镜像</h3><p>文件创建后，执行<code>docker build -t local/jenkins .</code>(名字为:local/jenkins)</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fafa628da-57de-44d0-bed7-08a4169a7415%2Fia_10019.png?table=block&id=0758352e-cae5-458d-a073-182e77123f37&width=2800&cache=v2\" alt=\"\"></p><p>如果提示 Successfully tagged local/jenkins:latest 则构建成功。</p><p>此处为第二次构建，第二次构建就会非常快，大概流程如下。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff0ba4456-5c1a-433b-9399-87b60a1529ac%2Fia_10018.png?table=block&id=7268e987-568c-47f7-b34f-089b0ad30360&width=3410&cache=v2\" alt=\"\"></p><h3 id=\"创建镜像和容器\"><a href=\"#创建镜像和容器\" class=\"headerlink\" title=\"创建镜像和容器\"></a>创建镜像和容器</h3><p>我们将Jenkins用户目录外挂到宿主机内，先新建一个 <code>/home/jenkins</code> 目录，并设置权限：</p><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\"><span class=\"hljs-built_in\">mkdir</span> /<span class=\"hljs-built_in\">home</span>/jenkins<br>chown -R <span class=\"hljs-number\">1000</span> /<span class=\"hljs-built_in\">home</span>/jenkins/<br></code></pre></td></tr></table></figure><p>接下来我们用镜像创建容器并启动：</p><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs groovy\">docker run -itd --name jenkins -p <span class=\"hljs-number\">8080</span>:<span class=\"hljs-number\">8080</span> -p <span class=\"hljs-number\">50000</span>:<span class=\"hljs-number\">50000</span> \\<br>-v <span class=\"hljs-regexp\">/var/</span>run<span class=\"hljs-regexp\">/docker.sock:/</span>var<span class=\"hljs-regexp\">/run/</span>docker.sock \\<br>-v <span class=\"hljs-regexp\">/usr/</span>bin<span class=\"hljs-regexp\">/docker:/</span>usr<span class=\"hljs-regexp\">/bin/</span>docker \\<br>-v <span class=\"hljs-regexp\">/home/</span><span class=\"hljs-string\">jenkins:</span><span class=\"hljs-regexp\">/var/</span>jenkins_home \\<br>--restart always \\<br>--user root local/jenkins<br></code></pre></td></tr></table></figure><p>创建成功</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fffe8d91c-5c21-403a-9a94-9f1845d11dfb%2Fia_10017.png?table=block&id=a525268f-0afd-43d3-8b0e-96dd923ac6ec&width=3050&cache=v2\" alt=\"\"></p><h3 id=\"启动Jenkins\"><a href=\"#启动Jenkins\" class=\"headerlink\" title=\"启动Jenkins\"></a>启动Jenkins</h3><h4 id=\"设置防火墙\"><a href=\"#设置防火墙\" class=\"headerlink\" title=\"设置防火墙\"></a>设置防火墙</h4><p>首先我们在防火墙添加 8080 和 50000 端口的放行，并重载防火墙</p><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">firewall-cmd <span class=\"hljs-attribute\">--zone</span>=public <span class=\"hljs-attribute\">--add-port</span>=8080/tcp --permanent<br>firewall-cmd <span class=\"hljs-attribute\">--zone</span>=public <span class=\"hljs-attribute\">--add-port</span>=50000/tcp --permanent<br>systemctl reload firewalld<br></code></pre></td></tr></table></figure><p>然后在<code>宿主机IP:8080</code>就可以看到界面了</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fea7f1f14-f38d-4520-a3d9-d10ea4eab0a7%2Fia_10016.png?table=block&id=86405cf1-1a5f-461b-a989-ce34b548ff0c&width=2820&cache=v2\" alt=\"\"></p><h4 id=\"设置源\"><a href=\"#设置源\" class=\"headerlink\" title=\"设置源\"></a>设置源</h4><p>设置源提高Jenkins插件下载速度。因为后面安装插件需要重启，因此这一步可以先操作，避免后面再重启。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -it jenkins /bin/bash<br>find / -name <span class=\"hljs-string\">'default.json'</span><br>sed -i <span class=\"hljs-string\">'s/http:\\/\\/updates.jenkins-ci.org\\/download/https:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/jenkins/g'</span> /var/jenkins_home/updates/default.json &amp;&amp; sed -i <span class=\"hljs-string\">'s/http:\\/\\/www.google.com/https:\\/\\/www.baidu.com/g'</span> /var/jenkins_home/updates/default.json<br><span class=\"hljs-built_in\">exit</span>;<br></code></pre></td></tr></table></figure><h4 id=\"初始化完成\"><a href=\"#初始化完成\" class=\"headerlink\" title=\"初始化完成\"></a>初始化完成</h4><p>初始化完成需要我们输入密码<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F69db3d34-27fa-4bde-9443-3a41f7b8d1f8%2Fia_10015.png?table=block&id=e7280034-9346-4d78-b272-ad594b877dea&width=1910&cache=v2\" alt=\"\"><br>我们执行命令</p><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">docker exec -it jenkins <span class=\"hljs-regexp\">/bin/</span>bash <span class=\"hljs-regexp\">//</span>进入命令行<br>cat <span class=\"hljs-regexp\">/var/</span>jenkins_home<span class=\"hljs-regexp\">/secrets/i</span>nitialAdminPassword<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff91e6a2b-593a-45f6-b08f-f6a8a1b8ca75%2Fia_10014.png?table=block&id=77edd625-75b0-4f30-8808-685f7f26db8c&width=1260&cache=v2\" alt=\"\"><br>密码输入之后就是进入插件安装<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb183706d-35ed-44f7-968c-0415a43b889c%2Fia_10013.png?table=block&id=39e607c5-4526-4bf4-9eef-823bdc9b297b&width=1750&cache=v2\" alt=\"\"><br>设置源之后插件安装就很丝滑流畅<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F29a6381d-def5-47e4-b0e9-2ddca92ae467%2Fia_10012.png?table=block&id=d8a317cc-67ee-4bf9-a02d-5e497552e8b7&width=1740&cache=v2\" alt=\"\"><br>再就是设置管理员了，我这里使用的是：使用admin账户继续。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8ee1278f-ad17-497b-8cd1-5b5bc2689870%2Fia_10011.png?table=block&id=7aee27f9-f5b5-4e51-84c5-194f951fd58a&width=1690&cache=v2\" alt=\"\"></p><p>进入就是我们熟悉的界面了<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F18504ff7-df75-456f-b977-4cd908491074%2Fia_10010.png?table=block&id=4fe29fc4-39ad-4ae6-86ad-8048ae7f9a36&width=2910&cache=v2\" alt=\"\"></p><h4 id=\"小试牛刀\"><a href=\"#小试牛刀\" class=\"headerlink\" title=\"小试牛刀\"></a>小试牛刀</h4><p>左侧新建Item<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd9670413-b9ca-483c-a64c-329fedc0d52f%2Fia_10009.png?table=block&id=8d203501-73a7-48e3-88cb-9feb41347be2&width=1960&cache=v2\" alt=\"\"><br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff02c9d72-9aa1-4c02-a007-9ce3d00eb68e%2Fia_10008.png?table=block&id=be05bfb7-b662-43f6-8887-cf428e473158&width=2000&cache=v2\" alt=\"\"><br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcd7e2fc1-75af-4434-b46d-7b18768f9b9b%2Fia_10007.png?table=block&id=c0002be6-08ee-4101-82c7-99285d2aa5ac&width=1970&cache=v2\" alt=\"\"><br>输入代码</p><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">docker -v<br>docker pull <span class=\"hljs-keyword\">node</span><span class=\"hljs-title\">:latest</span><br></code></pre></td></tr></table></figure><p>保存再触发立即构建就可以看到效果了。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7b7d0620-9464-4f4c-a795-28d344d5f51c%2Fia_10006.png?table=block&id=c453151d-5148-407d-ab0a-8428c9012c33&width=740&cache=v2\" alt=\"\"></p><p>可以在控制台看到对应的输出就大功告成了。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F37d07cf9-8ffb-4734-ab42-a27bc555317e%2Fia_10005.png?table=block&id=2731e2b2-c2d7-4a63-a2a7-7ad02c668f1d&width=1570&cache=v2\" alt=\"\"></p><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>至此，我们已经完整搭建了Jenkins环境，作为CICD不可少的一部分，也算是有了一个良好的开端。撒花！</p><!-- rebuild by neat -->"},{"title":"CICD实战之Gitlab搭建","abbrlink":"aa4ef8c5","date":"2020-07-26T04:05:29.000Z","_content":"## 目的\n学习 Gitlab 的搭建\n## 正式开始\n### 拉取 Gitlab 镜像\n```\ndocker pull gitlab/gitlab-ce\n```\n我这网速的确感人啊\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd48c68ba-e3a8-4ac3-b0f0-d7b79c39f6c9%2Fia_10002.png?table=block&id=a044fe86-a1eb-490c-a9cd-33a804e13349&width=990&cache=v2)\n\n<!-- more -->\n### 创建Gitlab容器\n```\nmkdir /home/gitlab #创建Gitlab工作目录\n\ndocker run -itd -p 443:443 \\\n-p 8899:8899 \\\n-p 333:333 \\\n--name gitlab \\\n--restart always \\\n-v /home/gitlab/config:/etc/gitlab \\\n-v /home/gitlab/logs:/var/log/gitlab \\\n-v /home/gitlab/data:/var/opt/gitlab \\\ngitlab/gitlab-ce\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F22138bb9-5931-4297-a4af-e8554d2d7967%2Fia_10004.png?table=block&id=540014ec-e336-4643-b96a-6ce63f5b45a4&width=1260&cache=v2)\n关于：\n- --restart: 当 Docker 重启时，容器自动启动，否则就需要使用docker restart 启动 \n- gitlab端口映射规则：最好内外端口映射一致，gitlab 会根据你的配置文件调整服务端口。如外部访问8899，内外都配置8899 \n- 一般Gitlab有三个端口要使用：ssh，https，主服务地址。\n- ssh默认是22，这里我改为了333，\n\n然后我们在防火墙添加 333 和 8899 端口的放行，并重载防火墙\n```bash\nfirewall-cmd --zone=public --add-port=333/tcp --permanent\nfirewall-cmd --zone=public --add-port=8899/tcp --permanent\nsystemctl reload firewalld\n```\n\n我们可以看下现在的运行状况\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F5cb97981-0589-47a0-ad99-0a9746af7ce5%2Fia_10005.png?table=block&id=2152f758-5d59-4ef3-94ce-478dd21815e5&width=3140&cache=v2)\n\n### 修改Gitlab配置文件\n#### 外部路径\n```\nvi /home/gitlab/config/gitlab.rb\n```\n在文件内增加三条配置：\n- external_url: 外部服务访问地址\n- gitlab_rails['gitlab_ssh_host']：SSH代码拉取地址\n- gitlab_rails['gitlab_shell_ssh_port']：SSH代码拉取端口\n```\nexternal_url 'http://外部访问域名/地址:端口'\ngitlab_rails['gitlab_ssh_host'] = 'SSH外部访问域名/地址'\ngitlab_rails['gitlab_shell_ssh_port'] = SSH端口\n```\n我的虚拟机是192.168.182.3，因此我的填写如下\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Feb5d5b5a-44fc-4b0e-9ac9-fce6bd5f6105%2Fia_10006.png?table=block&id=1e5659ce-5400-46a0-924b-0c5ab9a5a0ea&width=1610&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F32b65277-40ec-4964-bf49-d5be36740467%2Fia_10007.png?table=block&id=69da928f-0d7b-46d8-8e9e-eb95f7ea1850&width=1100&cache=v2)\n#### 修改SSH端口\n前面设置的是333端口，因此要把默认的22端口改为333端口。\n```\ndocker exec -it gitlab /bin/bash\nvim /assets/sshd_config\nvim /etc/ssh/sshd_config\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F131849ce-ae8c-4c6c-8476-c6a701b98ae8%2Fia_10008.png?table=block&id=ecb890cf-2bf2-4b66-96a2-59b08ba54e53&width=900&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7002b9e3-e5a0-497f-908f-fe94c50d2793%2Fia_10009.png?table=block&id=ffdad499-f75d-45bb-98bd-e9a8a93fd81e&width=820&cache=v2)\n#### 重启 Gitlab\n```\ndocker restart gitlab\n```\n访问我们的地址端口。如果显示 502 ，则代表正在启动中。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F65e38bcb-57e3-4857-9e66-fc1a6197e1e5%2Fia_10010.png?table=block&id=f2c715a6-7c38-4beb-8b60-9d617710dd1e&width=1370&cache=v2)\n\n\n初始化完成就好了\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F468ce37b-22f2-466d-8850-75d970a4ed99%2Fia_10011.png?table=block&id=70612479-4d36-4382-851e-1e94faca6983&width=2010&cache=v2)\n\n接下来就是改密码和登录了，登陆之后就进入页面，gitlab也终于露出了庐山真面目。注意：管理员的账号是**root**。\n\n最后，我们就进入gitlab了。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe3dcb2c8-b303-450e-a896-405607e3f59d%2Fia_10012.png?table=block&id=a4e152d6-b390-427d-a764-6810dec12b68&width=3790&cache=v2)\n\n## 结语\n至此，我们已经完整搭建了Gitlab环境，作为CICD不可少的一部分，也算是有了一个良好的开端。撒花！\n\n","source":"_posts/cicd3.md","raw":"---\ntitle: CICD实战之Gitlab搭建\nabbrlink: aa4ef8c5\ndate: 2020-07-26 12:05:29\ntags:\n- CICD\n---\n## 目的\n学习 Gitlab 的搭建\n## 正式开始\n### 拉取 Gitlab 镜像\n```\ndocker pull gitlab/gitlab-ce\n```\n我这网速的确感人啊\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd48c68ba-e3a8-4ac3-b0f0-d7b79c39f6c9%2Fia_10002.png?table=block&id=a044fe86-a1eb-490c-a9cd-33a804e13349&width=990&cache=v2)\n\n<!-- more -->\n### 创建Gitlab容器\n```\nmkdir /home/gitlab #创建Gitlab工作目录\n\ndocker run -itd -p 443:443 \\\n-p 8899:8899 \\\n-p 333:333 \\\n--name gitlab \\\n--restart always \\\n-v /home/gitlab/config:/etc/gitlab \\\n-v /home/gitlab/logs:/var/log/gitlab \\\n-v /home/gitlab/data:/var/opt/gitlab \\\ngitlab/gitlab-ce\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F22138bb9-5931-4297-a4af-e8554d2d7967%2Fia_10004.png?table=block&id=540014ec-e336-4643-b96a-6ce63f5b45a4&width=1260&cache=v2)\n关于：\n- --restart: 当 Docker 重启时，容器自动启动，否则就需要使用docker restart 启动 \n- gitlab端口映射规则：最好内外端口映射一致，gitlab 会根据你的配置文件调整服务端口。如外部访问8899，内外都配置8899 \n- 一般Gitlab有三个端口要使用：ssh，https，主服务地址。\n- ssh默认是22，这里我改为了333，\n\n然后我们在防火墙添加 333 和 8899 端口的放行，并重载防火墙\n```bash\nfirewall-cmd --zone=public --add-port=333/tcp --permanent\nfirewall-cmd --zone=public --add-port=8899/tcp --permanent\nsystemctl reload firewalld\n```\n\n我们可以看下现在的运行状况\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F5cb97981-0589-47a0-ad99-0a9746af7ce5%2Fia_10005.png?table=block&id=2152f758-5d59-4ef3-94ce-478dd21815e5&width=3140&cache=v2)\n\n### 修改Gitlab配置文件\n#### 外部路径\n```\nvi /home/gitlab/config/gitlab.rb\n```\n在文件内增加三条配置：\n- external_url: 外部服务访问地址\n- gitlab_rails['gitlab_ssh_host']：SSH代码拉取地址\n- gitlab_rails['gitlab_shell_ssh_port']：SSH代码拉取端口\n```\nexternal_url 'http://外部访问域名/地址:端口'\ngitlab_rails['gitlab_ssh_host'] = 'SSH外部访问域名/地址'\ngitlab_rails['gitlab_shell_ssh_port'] = SSH端口\n```\n我的虚拟机是192.168.182.3，因此我的填写如下\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Feb5d5b5a-44fc-4b0e-9ac9-fce6bd5f6105%2Fia_10006.png?table=block&id=1e5659ce-5400-46a0-924b-0c5ab9a5a0ea&width=1610&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F32b65277-40ec-4964-bf49-d5be36740467%2Fia_10007.png?table=block&id=69da928f-0d7b-46d8-8e9e-eb95f7ea1850&width=1100&cache=v2)\n#### 修改SSH端口\n前面设置的是333端口，因此要把默认的22端口改为333端口。\n```\ndocker exec -it gitlab /bin/bash\nvim /assets/sshd_config\nvim /etc/ssh/sshd_config\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F131849ce-ae8c-4c6c-8476-c6a701b98ae8%2Fia_10008.png?table=block&id=ecb890cf-2bf2-4b66-96a2-59b08ba54e53&width=900&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7002b9e3-e5a0-497f-908f-fe94c50d2793%2Fia_10009.png?table=block&id=ffdad499-f75d-45bb-98bd-e9a8a93fd81e&width=820&cache=v2)\n#### 重启 Gitlab\n```\ndocker restart gitlab\n```\n访问我们的地址端口。如果显示 502 ，则代表正在启动中。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F65e38bcb-57e3-4857-9e66-fc1a6197e1e5%2Fia_10010.png?table=block&id=f2c715a6-7c38-4beb-8b60-9d617710dd1e&width=1370&cache=v2)\n\n\n初始化完成就好了\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F468ce37b-22f2-466d-8850-75d970a4ed99%2Fia_10011.png?table=block&id=70612479-4d36-4382-851e-1e94faca6983&width=2010&cache=v2)\n\n接下来就是改密码和登录了，登陆之后就进入页面，gitlab也终于露出了庐山真面目。注意：管理员的账号是**root**。\n\n最后，我们就进入gitlab了。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe3dcb2c8-b303-450e-a896-405607e3f59d%2Fia_10012.png?table=block&id=a4e152d6-b390-427d-a764-6810dec12b68&width=3790&cache=v2)\n\n## 结语\n至此，我们已经完整搭建了Gitlab环境，作为CICD不可少的一部分，也算是有了一个良好的开端。撒花！\n\n","slug":"cicd3","published":1,"updated":"2020-08-02T11:33:32.989Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnbz000lvwtfc86n87sj","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>学习 Gitlab 的搭建</p><h2 id=\"正式开始\"><a href=\"#正式开始\" class=\"headerlink\" title=\"正式开始\"></a>正式开始</h2><h3 id=\"拉取-Gitlab-镜像\"><a href=\"#拉取-Gitlab-镜像\" class=\"headerlink\" title=\"拉取 Gitlab 镜像\"></a>拉取 Gitlab 镜像</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">docker</span> pull gitlab/gitlab-ce<br></code></pre></td></tr></table></figure><p>我这网速的确感人啊<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd48c68ba-e3a8-4ac3-b0f0-d7b79c39f6c9%2Fia_10002.png?table=block&id=a044fe86-a1eb-490c-a9cd-33a804e13349&width=990&cache=v2\" alt=\"\"></p><a id=\"more\"></a><h3 id=\"创建Gitlab容器\"><a href=\"#创建Gitlab容器\" class=\"headerlink\" title=\"创建Gitlab容器\"></a>创建Gitlab容器</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">mkdir <span class=\"hljs-regexp\">/home/gi</span>tlab <span class=\"hljs-comment\">#创建Gitlab工作目录</span><br><br>docker run -itd -p <span class=\"hljs-number\">443</span>:<span class=\"hljs-number\">443</span> \\<br>-p <span class=\"hljs-number\">8899</span>:<span class=\"hljs-number\">8899</span> \\<br>-p <span class=\"hljs-number\">333</span>:<span class=\"hljs-number\">333</span> \\<br>--name gitlab \\<br>--restart always \\<br>-v <span class=\"hljs-regexp\">/home/gi</span>tlab<span class=\"hljs-regexp\">/config:/</span>etc<span class=\"hljs-regexp\">/gitlab \\</span><br><span class=\"hljs-regexp\">-v /</span>home<span class=\"hljs-regexp\">/gitlab/</span>logs:<span class=\"hljs-regexp\">/var/</span>log<span class=\"hljs-regexp\">/gitlab \\</span><br><span class=\"hljs-regexp\">-v /</span>home<span class=\"hljs-regexp\">/gitlab/</span>data:<span class=\"hljs-regexp\">/var/</span>opt<span class=\"hljs-regexp\">/gitlab \\</span><br><span class=\"hljs-regexp\">gitlab/gi</span>tlab-ce<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F22138bb9-5931-4297-a4af-e8554d2d7967%2Fia_10004.png?table=block&id=540014ec-e336-4643-b96a-6ce63f5b45a4&width=1260&cache=v2\" alt=\"\"><br>关于：</p><ul><li>–restart: 当 Docker 重启时，容器自动启动，否则就需要使用docker restart 启动</li><li>gitlab端口映射规则：最好内外端口映射一致，gitlab 会根据你的配置文件调整服务端口。如外部访问8899，内外都配置8899</li><li>一般Gitlab有三个端口要使用：ssh，https，主服务地址。</li><li>ssh默认是22，这里我改为了333，</li></ul><p>然后我们在防火墙添加 333 和 8899 端口的放行，并重载防火墙</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">firewall-cmd --zone=public --add-port=333/tcp --permanent<br>firewall-cmd --zone=public --add-port=8899/tcp --permanent<br>systemctl reload firewalld<br></code></pre></td></tr></table></figure><p>我们可以看下现在的运行状况</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F5cb97981-0589-47a0-ad99-0a9746af7ce5%2Fia_10005.png?table=block&id=2152f758-5d59-4ef3-94ce-478dd21815e5&width=3140&cache=v2\" alt=\"\"></p><h3 id=\"修改Gitlab配置文件\"><a href=\"#修改Gitlab配置文件\" class=\"headerlink\" title=\"修改Gitlab配置文件\"></a>修改Gitlab配置文件</h3><h4 id=\"外部路径\"><a href=\"#外部路径\" class=\"headerlink\" title=\"外部路径\"></a>外部路径</h4><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\">vi /<span class=\"hljs-built_in\">home</span>/gitlab/<span class=\"hljs-built_in\">config</span>/gitlab.rb<br></code></pre></td></tr></table></figure><p>在文件内增加三条配置：</p><ul><li>external_url: 外部服务访问地址</li><li>gitlab_rails[‘gitlab_ssh_host’]：SSH代码拉取地址</li><li>gitlab_rails[‘gitlab_shell_ssh_port’]：SSH代码拉取端口<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs prolog\">external_url <span class=\"hljs-string\">'http://外部访问域名/地址:端口'</span><br>gitlab_rails[<span class=\"hljs-string\">'gitlab_ssh_host'</span>] = <span class=\"hljs-string\">'SSH外部访问域名/地址'</span><br>gitlab_rails[<span class=\"hljs-string\">'gitlab_shell_ssh_port'</span>] = <span class=\"hljs-symbol\">SSH</span>端口<br></code></pre></td></tr></table></figure>我的虚拟机是192.168.182.3，因此我的填写如下</li></ul><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Feb5d5b5a-44fc-4b0e-9ac9-fce6bd5f6105%2Fia_10006.png?table=block&id=1e5659ce-5400-46a0-924b-0c5ab9a5a0ea&width=1610&cache=v2\" alt=\"\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F32b65277-40ec-4964-bf49-d5be36740467%2Fia_10007.png?table=block&id=69da928f-0d7b-46d8-8e9e-eb95f7ea1850&width=1100&cache=v2\" alt=\"\"></p><h4 id=\"修改SSH端口\"><a href=\"#修改SSH端口\" class=\"headerlink\" title=\"修改SSH端口\"></a>修改SSH端口</h4><p>前面设置的是333端口，因此要把默认的22端口改为333端口。</p><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">docker exec -it gitlab <span class=\"hljs-regexp\">/bin/</span>bash<br>vim <span class=\"hljs-regexp\">/assets/</span>sshd_config<br>vim <span class=\"hljs-regexp\">/etc/</span>ssh<span class=\"hljs-regexp\">/sshd_config</span><br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F131849ce-ae8c-4c6c-8476-c6a701b98ae8%2Fia_10008.png?table=block&id=ecb890cf-2bf2-4b66-96a2-59b08ba54e53&width=900&cache=v2\" alt=\"\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7002b9e3-e5a0-497f-908f-fe94c50d2793%2Fia_10009.png?table=block&id=ffdad499-f75d-45bb-98bd-e9a8a93fd81e&width=820&cache=v2\" alt=\"\"></p><h4 id=\"重启-Gitlab\"><a href=\"#重启-Gitlab\" class=\"headerlink\" title=\"重启 Gitlab\"></a>重启 Gitlab</h4><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">docker restart gitlab</span><br></code></pre></td></tr></table></figure><p>访问我们的地址端口。如果显示 502 ，则代表正在启动中。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F65e38bcb-57e3-4857-9e66-fc1a6197e1e5%2Fia_10010.png?table=block&id=f2c715a6-7c38-4beb-8b60-9d617710dd1e&width=1370&cache=v2\" alt=\"\"></p><p>初始化完成就好了</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F468ce37b-22f2-466d-8850-75d970a4ed99%2Fia_10011.png?table=block&id=70612479-4d36-4382-851e-1e94faca6983&width=2010&cache=v2\" alt=\"\"></p><p>接下来就是改密码和登录了，登陆之后就进入页面，gitlab也终于露出了庐山真面目。注意：管理员的账号是<strong>root</strong>。</p><p>最后，我们就进入gitlab了。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe3dcb2c8-b303-450e-a896-405607e3f59d%2Fia_10012.png?table=block&id=a4e152d6-b390-427d-a764-6810dec12b68&width=3790&cache=v2\" alt=\"\"></p><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>至此，我们已经完整搭建了Gitlab环境，作为CICD不可少的一部分，也算是有了一个良好的开端。撒花！</p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>学习 Gitlab 的搭建</p><h2 id=\"正式开始\"><a href=\"#正式开始\" class=\"headerlink\" title=\"正式开始\"></a>正式开始</h2><h3 id=\"拉取-Gitlab-镜像\"><a href=\"#拉取-Gitlab-镜像\" class=\"headerlink\" title=\"拉取 Gitlab 镜像\"></a>拉取 Gitlab 镜像</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">docker</span> pull gitlab/gitlab-ce<br></code></pre></td></tr></table></figure><p>我这网速的确感人啊<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd48c68ba-e3a8-4ac3-b0f0-d7b79c39f6c9%2Fia_10002.png?table=block&id=a044fe86-a1eb-490c-a9cd-33a804e13349&width=990&cache=v2\" alt=\"\"></p>","more":"<h3 id=\"创建Gitlab容器\"><a href=\"#创建Gitlab容器\" class=\"headerlink\" title=\"创建Gitlab容器\"></a>创建Gitlab容器</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">mkdir <span class=\"hljs-regexp\">/home/gi</span>tlab <span class=\"hljs-comment\">#创建Gitlab工作目录</span><br><br>docker run -itd -p <span class=\"hljs-number\">443</span>:<span class=\"hljs-number\">443</span> \\<br>-p <span class=\"hljs-number\">8899</span>:<span class=\"hljs-number\">8899</span> \\<br>-p <span class=\"hljs-number\">333</span>:<span class=\"hljs-number\">333</span> \\<br>--name gitlab \\<br>--restart always \\<br>-v <span class=\"hljs-regexp\">/home/gi</span>tlab<span class=\"hljs-regexp\">/config:/</span>etc<span class=\"hljs-regexp\">/gitlab \\</span><br><span class=\"hljs-regexp\">-v /</span>home<span class=\"hljs-regexp\">/gitlab/</span>logs:<span class=\"hljs-regexp\">/var/</span>log<span class=\"hljs-regexp\">/gitlab \\</span><br><span class=\"hljs-regexp\">-v /</span>home<span class=\"hljs-regexp\">/gitlab/</span>data:<span class=\"hljs-regexp\">/var/</span>opt<span class=\"hljs-regexp\">/gitlab \\</span><br><span class=\"hljs-regexp\">gitlab/gi</span>tlab-ce<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F22138bb9-5931-4297-a4af-e8554d2d7967%2Fia_10004.png?table=block&id=540014ec-e336-4643-b96a-6ce63f5b45a4&width=1260&cache=v2\" alt=\"\"><br>关于：</p><ul><li>–restart: 当 Docker 重启时，容器自动启动，否则就需要使用docker restart 启动</li><li>gitlab端口映射规则：最好内外端口映射一致，gitlab 会根据你的配置文件调整服务端口。如外部访问8899，内外都配置8899</li><li>一般Gitlab有三个端口要使用：ssh，https，主服务地址。</li><li>ssh默认是22，这里我改为了333，</li></ul><p>然后我们在防火墙添加 333 和 8899 端口的放行，并重载防火墙</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">firewall-cmd --zone=public --add-port=333/tcp --permanent<br>firewall-cmd --zone=public --add-port=8899/tcp --permanent<br>systemctl reload firewalld<br></code></pre></td></tr></table></figure><p>我们可以看下现在的运行状况</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F5cb97981-0589-47a0-ad99-0a9746af7ce5%2Fia_10005.png?table=block&id=2152f758-5d59-4ef3-94ce-478dd21815e5&width=3140&cache=v2\" alt=\"\"></p><h3 id=\"修改Gitlab配置文件\"><a href=\"#修改Gitlab配置文件\" class=\"headerlink\" title=\"修改Gitlab配置文件\"></a>修改Gitlab配置文件</h3><h4 id=\"外部路径\"><a href=\"#外部路径\" class=\"headerlink\" title=\"外部路径\"></a>外部路径</h4><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\">vi /<span class=\"hljs-built_in\">home</span>/gitlab/<span class=\"hljs-built_in\">config</span>/gitlab.rb<br></code></pre></td></tr></table></figure><p>在文件内增加三条配置：</p><ul><li>external_url: 外部服务访问地址</li><li>gitlab_rails[‘gitlab_ssh_host’]：SSH代码拉取地址</li><li>gitlab_rails[‘gitlab_shell_ssh_port’]：SSH代码拉取端口<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs prolog\">external_url <span class=\"hljs-string\">'http://外部访问域名/地址:端口'</span><br>gitlab_rails[<span class=\"hljs-string\">'gitlab_ssh_host'</span>] = <span class=\"hljs-string\">'SSH外部访问域名/地址'</span><br>gitlab_rails[<span class=\"hljs-string\">'gitlab_shell_ssh_port'</span>] = <span class=\"hljs-symbol\">SSH</span>端口<br></code></pre></td></tr></table></figure>我的虚拟机是192.168.182.3，因此我的填写如下</li></ul><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Feb5d5b5a-44fc-4b0e-9ac9-fce6bd5f6105%2Fia_10006.png?table=block&id=1e5659ce-5400-46a0-924b-0c5ab9a5a0ea&width=1610&cache=v2\" alt=\"\"></p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F32b65277-40ec-4964-bf49-d5be36740467%2Fia_10007.png?table=block&id=69da928f-0d7b-46d8-8e9e-eb95f7ea1850&width=1100&cache=v2\" alt=\"\"></p><h4 id=\"修改SSH端口\"><a href=\"#修改SSH端口\" class=\"headerlink\" title=\"修改SSH端口\"></a>修改SSH端口</h4><p>前面设置的是333端口，因此要把默认的22端口改为333端口。</p><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">docker exec -it gitlab <span class=\"hljs-regexp\">/bin/</span>bash<br>vim <span class=\"hljs-regexp\">/assets/</span>sshd_config<br>vim <span class=\"hljs-regexp\">/etc/</span>ssh<span class=\"hljs-regexp\">/sshd_config</span><br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F131849ce-ae8c-4c6c-8476-c6a701b98ae8%2Fia_10008.png?table=block&id=ecb890cf-2bf2-4b66-96a2-59b08ba54e53&width=900&cache=v2\" alt=\"\"></p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7002b9e3-e5a0-497f-908f-fe94c50d2793%2Fia_10009.png?table=block&id=ffdad499-f75d-45bb-98bd-e9a8a93fd81e&width=820&cache=v2\" alt=\"\"></p><h4 id=\"重启-Gitlab\"><a href=\"#重启-Gitlab\" class=\"headerlink\" title=\"重启 Gitlab\"></a>重启 Gitlab</h4><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">docker restart gitlab</span><br></code></pre></td></tr></table></figure><p>访问我们的地址端口。如果显示 502 ，则代表正在启动中。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F65e38bcb-57e3-4857-9e66-fc1a6197e1e5%2Fia_10010.png?table=block&id=f2c715a6-7c38-4beb-8b60-9d617710dd1e&width=1370&cache=v2\" alt=\"\"></p><p>初始化完成就好了</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F468ce37b-22f2-466d-8850-75d970a4ed99%2Fia_10011.png?table=block&id=70612479-4d36-4382-851e-1e94faca6983&width=2010&cache=v2\" alt=\"\"></p><p>接下来就是改密码和登录了，登陆之后就进入页面，gitlab也终于露出了庐山真面目。注意：管理员的账号是<strong>root</strong>。</p><p>最后，我们就进入gitlab了。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe3dcb2c8-b303-450e-a896-405607e3f59d%2Fia_10012.png?table=block&id=a4e152d6-b390-427d-a764-6810dec12b68&width=3790&cache=v2\" alt=\"\"></p><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>至此，我们已经完整搭建了Gitlab环境，作为CICD不可少的一部分，也算是有了一个良好的开端。撒花！</p><!-- rebuild by neat -->"},{"title":"CICD实战之Nexus制品库的介绍与安装","abbrlink":"da240c4a","date":"2020-08-08T15:25:46.000Z","_content":"\n## 目的\n\n学习 Nexus 制品库的介绍与安装\n\n## 介绍\n\n在前面我们写到，制品库是**承接 CI 构建后的产出制品的仓库**，具有版本管理，历史管理，权限校验等功能。\n\n在这里，我们选用 Nexus3 作为制品库。\n<!-- more -->\n\n## 正式开始\n\n### 拉取镜像\n\n```bash\ndocker pull sonatype/nexus3\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc7394f96-521a-4d75-9657-56e3f7997392%2FUntitled.png?table=block&id=affa503e-e7ac-4308-baec-c15145250541&width=1170&cache=v2)\n\n### 启动容器\n新建一个名为 nexus 的文件夹，方便我们存放 Nexus 相关数据，并赋予权限。\n```bash\nmkdir /home/nexus && chown -R 200 /home/nexus\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F989a883f-6e58-4d33-9007-35a03d268b50%2FUntitled.png?table=block&id=9ba4a2dd-5cde-45da-9a71-cde44fd3688c&width=940&cache=v2)\n#### 创建容器\n\n```bash\ndocker run -d -p 8081:8081 -p 8082:8082 \\\n--name nexus \\\n-v /home/nexus:/nexus-data \\\n--restart always \\\nsonatype/nexus3\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbcb6a00f-6a95-459d-8ad1-4d40aa84b4d5%2FUntitled.png?table=block&id=398776f0-76de-474d-9b3a-cccef7afe288&width=1230&cache=v2)\n- Nexus 主服务端口，我们设置为 8081,；但是还需要新分配一个端口为服务端口，这里采用的是 8082\n\n#### 防火墙\n将对应端口添加到防火墙\n\n```bash\nfirewall-cmd --zone=public --add-port=8081/tcp --permanent\nfirewall-cmd --zone=public --add-port=8082/tcp --permanent\nsystemctl reload firewalld\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F852d64c8-9747-427e-a72e-7f6269885109%2FUntitled.png?table=block&id=056bdba7-908c-42f7-8975-a4a8004a75bb&width=1230&cache=v2)\n### 访问Nexus\n打开浏览器地址栏，访问 Nexus 的服务地址，这里是ip:8001。启动时间比较长，可以使用```docker logs -f nexus```查看日志，如果显示以下文字**Started Sonatype Nexus OSS 3.25.1-04**就代表成功\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F12f64937-982c-4ccf-880e-c050e1ba2cf0%2FUntitled.png?table=block&id=39d424c1-13b0-48c5-82e6-480c41a62805&width=3340&cache=v2)\n\n### 配置Nexus\n我们访问```ip:8001```就可以看到界面了。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7703a87e-ad2f-4d7b-84ab-a55f7ef3644e%2FUntitled.png?table=block&id=5c2de677-bf43-431a-a84e-7f2c51f2d6ed&width=3840&cache=v2)\n#### 登录\n我们可以使用```默认账号:admin```登录，默认的密码在```cat /home/nexus/admin.password```可以查看。\n\n注意不包含#号\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbcea1a4c-635b-4018-8b2a-ecc8ca72f9ce%2FUntitled.png?table=block&id=e3ebfdfd-53ef-4295-acb8-98421314f575&width=720&cache=v2)\n当我们初次进入之后会让我们设置一下初始密码，和登录的权限。\n\n#### 匿名访问性\n设置密码之后需要设置访问性,**我们在任何没有登录的情况下，拉取（推送）制品到制品库，都算匿名访问。**,在实际生产中是**不安全**的，我们测试可以开启。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F162cf517-369b-4b16-8db9-2fddd033d225%2FUntitled.png?table=block&id=8730dcac-ee4e-4fa8-9a01-b60a02d1188c&width=1600&cache=v2)\n\n#### 创建一个Docker私服\n点击设置，选择左侧菜单中的 Repositories ，点击 Create repository\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8cb6fdcc-accf-4f58-8241-12dae916188e%2FUntitled.png?table=block&id=d0afe642-9784-4c60-a494-d6b8b6bfe0e3&width=1640&cache=v2)\n\n使用搜索docker可以快速定位\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F86a15444-00ba-4f9f-b4e9-784df123b03b%2FUntitled.png?table=block&id=d3f28b82-fac3-4acd-8aff-5d25230c4cc3&width=2400&cache=v2)\n**制品库的类型**\n- proxy: 此类型制品库原则上 “只下载，不允许用户推送”。可以理解为缓存外网制品的制品库。例如，我们在拉取nginx镜像时，如果通过proxy类型的制品库，则它会去创建时配置好的外网docker镜像源拉取（有点像cnpm）到自己的制品库，然后给你。第二次拉取，则不会下载。起到 缓存 的作用。\n- hosted：此类型制品库和proxy相反，原则上 **只允许用户推送，不允许缓存 。**这是私有库的核心，只存放自己的私有镜像或制品。\n- group：此类型制品库用作以上两种类型的 **集合 **，将上面两个库集合为一个使用。\n\n这里我们采用hosted类型，点击创建会看到一些输入框，这里做简单的解释。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd5ad3d6c-44fa-40c7-8fbb-38dd7a3ae28b%2FUntitled.png?table=block&id=9c6c314c-f627-43f3-934c-17dd71968752&width=2340&cache=v2)\n\n同时我们还要设置一下权限，在Security-Realms的Docker Bearer Token Realm选择到右边的激活状态。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F659b6de4-136b-43ef-a524-fce864fdeaa8%2FUntitled.png?table=block&id=3aaaf25e-35c0-4ce2-a0e9-c5092751e7b2&width=2850&cache=v2)\n\n### 小试牛刀-登录\n安装至此，我们在另一台机器上试一下。\n\n在这里，我的架构是两台虚拟机，一台是gitlab和jenkins，一台是nginx和Nexus。所以，我们就在gitlab的机器上尝试。\n\n#### 配置文件\n我们在gitlab配置文件，```vim /etc/docker/daemon.json```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F34dc2fcc-5ee0-4c24-b4a7-8f862900611d%2FUntitled.png?table=block&id=0ca494fb-f98e-470c-9702-028008e9e277&width=1240&cache=v2)\n```bash\n\"insecure-registries\" : [\n    \"192.168.182.4:8082\"\n  ]\n\n```\n最后记得使用```systemctl restart docker```重启一下\n**注意这里是json格式，格式不能错**\n\n#### 登录\n登录一下。从图中可以看出。初次登录需要输入账号密码，后续登录就不需要了。\n```bash\ndocker login 服务IP:端口\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F568d3ad8-2977-40bb-b38d-70015c5c4e1e%2FUntitled.png?table=block&id=1fe5c0b3-a565-4b7f-a69e-c633238d9c10&width=1500&cache=v2)\n\n### 小试牛刀-推送镜像到制品库\n我们可以使用docker push推送镜像到私服上面。\n\ndocker在推送一个镜像时，镜像的 Tag (名称:版本号) 必须开头带着镜像库的地址，才可以推送。例如下面两个镜像：\n 😡 local/jenkins 不能推送\n 😃 **192.168.182.4:8082/local/jenkins** 可以推送。\n\n#### 制作镜像\n1.制作一份带镜像库地址的镜像：这个可以做，但是开销太大，需要走一遍制作流程\n\n2.使用 docker tag 命令给已有的镜像打个标签：推荐使用，会将已有的镜像归位某个镜像库内。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fffb57a8a-62d1-4408-bcc9-23951b2dfc56%2FUntitled.png?table=block&id=8362eb38-87ca-4957-a8bb-c6fc70465a19&width=1560&cache=v2)\n\n```bash\ndocker tag 28c624ccaacf    192.168.182.4:8082/local/jenkins\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7e0b5bc1-da68-45a7-b8fe-0b43d888cead%2FUntitled.png?table=block&id=0d221738-85b7-4896-aa6f-3c7d742cfd46&width=1940&cache=v2)\n#### 推送\n```bash\ndocker push 192.168.182.4:8082/local/jenkins\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcb751e29-83bb-44c1-8f5b-1620b31354ae%2FUntitled.png?table=block&id=961576d1-bd7e-4873-8801-11eea2541683&width=1890&cache=v2)\n在仓库可以看到上传的\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8c4d4830-24f2-47fa-8c40-351cc884527b%2FUntitled.png?table=block&id=95be5f22-2adf-4d7f-828a-a0a5f8085704&width=1600&cache=v2)\n\n## 结语\n我们在这部分实现了docker私服的搭建和push，接下来我们将构建代码并且推送到私服。敬请期待吧！\n","source":"_posts/cicd6.md","raw":"---\ntitle: CICD实战之Nexus制品库的介绍与安装\nabbrlink: da240c4a\ndate: 2020-08-08 23:25:46\ntags:\n - CICD\n---\n\n## 目的\n\n学习 Nexus 制品库的介绍与安装\n\n## 介绍\n\n在前面我们写到，制品库是**承接 CI 构建后的产出制品的仓库**，具有版本管理，历史管理，权限校验等功能。\n\n在这里，我们选用 Nexus3 作为制品库。\n<!-- more -->\n\n## 正式开始\n\n### 拉取镜像\n\n```bash\ndocker pull sonatype/nexus3\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc7394f96-521a-4d75-9657-56e3f7997392%2FUntitled.png?table=block&id=affa503e-e7ac-4308-baec-c15145250541&width=1170&cache=v2)\n\n### 启动容器\n新建一个名为 nexus 的文件夹，方便我们存放 Nexus 相关数据，并赋予权限。\n```bash\nmkdir /home/nexus && chown -R 200 /home/nexus\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F989a883f-6e58-4d33-9007-35a03d268b50%2FUntitled.png?table=block&id=9ba4a2dd-5cde-45da-9a71-cde44fd3688c&width=940&cache=v2)\n#### 创建容器\n\n```bash\ndocker run -d -p 8081:8081 -p 8082:8082 \\\n--name nexus \\\n-v /home/nexus:/nexus-data \\\n--restart always \\\nsonatype/nexus3\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbcb6a00f-6a95-459d-8ad1-4d40aa84b4d5%2FUntitled.png?table=block&id=398776f0-76de-474d-9b3a-cccef7afe288&width=1230&cache=v2)\n- Nexus 主服务端口，我们设置为 8081,；但是还需要新分配一个端口为服务端口，这里采用的是 8082\n\n#### 防火墙\n将对应端口添加到防火墙\n\n```bash\nfirewall-cmd --zone=public --add-port=8081/tcp --permanent\nfirewall-cmd --zone=public --add-port=8082/tcp --permanent\nsystemctl reload firewalld\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F852d64c8-9747-427e-a72e-7f6269885109%2FUntitled.png?table=block&id=056bdba7-908c-42f7-8975-a4a8004a75bb&width=1230&cache=v2)\n### 访问Nexus\n打开浏览器地址栏，访问 Nexus 的服务地址，这里是ip:8001。启动时间比较长，可以使用```docker logs -f nexus```查看日志，如果显示以下文字**Started Sonatype Nexus OSS 3.25.1-04**就代表成功\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F12f64937-982c-4ccf-880e-c050e1ba2cf0%2FUntitled.png?table=block&id=39d424c1-13b0-48c5-82e6-480c41a62805&width=3340&cache=v2)\n\n### 配置Nexus\n我们访问```ip:8001```就可以看到界面了。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7703a87e-ad2f-4d7b-84ab-a55f7ef3644e%2FUntitled.png?table=block&id=5c2de677-bf43-431a-a84e-7f2c51f2d6ed&width=3840&cache=v2)\n#### 登录\n我们可以使用```默认账号:admin```登录，默认的密码在```cat /home/nexus/admin.password```可以查看。\n\n注意不包含#号\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbcea1a4c-635b-4018-8b2a-ecc8ca72f9ce%2FUntitled.png?table=block&id=e3ebfdfd-53ef-4295-acb8-98421314f575&width=720&cache=v2)\n当我们初次进入之后会让我们设置一下初始密码，和登录的权限。\n\n#### 匿名访问性\n设置密码之后需要设置访问性,**我们在任何没有登录的情况下，拉取（推送）制品到制品库，都算匿名访问。**,在实际生产中是**不安全**的，我们测试可以开启。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F162cf517-369b-4b16-8db9-2fddd033d225%2FUntitled.png?table=block&id=8730dcac-ee4e-4fa8-9a01-b60a02d1188c&width=1600&cache=v2)\n\n#### 创建一个Docker私服\n点击设置，选择左侧菜单中的 Repositories ，点击 Create repository\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8cb6fdcc-accf-4f58-8241-12dae916188e%2FUntitled.png?table=block&id=d0afe642-9784-4c60-a494-d6b8b6bfe0e3&width=1640&cache=v2)\n\n使用搜索docker可以快速定位\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F86a15444-00ba-4f9f-b4e9-784df123b03b%2FUntitled.png?table=block&id=d3f28b82-fac3-4acd-8aff-5d25230c4cc3&width=2400&cache=v2)\n**制品库的类型**\n- proxy: 此类型制品库原则上 “只下载，不允许用户推送”。可以理解为缓存外网制品的制品库。例如，我们在拉取nginx镜像时，如果通过proxy类型的制品库，则它会去创建时配置好的外网docker镜像源拉取（有点像cnpm）到自己的制品库，然后给你。第二次拉取，则不会下载。起到 缓存 的作用。\n- hosted：此类型制品库和proxy相反，原则上 **只允许用户推送，不允许缓存 。**这是私有库的核心，只存放自己的私有镜像或制品。\n- group：此类型制品库用作以上两种类型的 **集合 **，将上面两个库集合为一个使用。\n\n这里我们采用hosted类型，点击创建会看到一些输入框，这里做简单的解释。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd5ad3d6c-44fa-40c7-8fbb-38dd7a3ae28b%2FUntitled.png?table=block&id=9c6c314c-f627-43f3-934c-17dd71968752&width=2340&cache=v2)\n\n同时我们还要设置一下权限，在Security-Realms的Docker Bearer Token Realm选择到右边的激活状态。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F659b6de4-136b-43ef-a524-fce864fdeaa8%2FUntitled.png?table=block&id=3aaaf25e-35c0-4ce2-a0e9-c5092751e7b2&width=2850&cache=v2)\n\n### 小试牛刀-登录\n安装至此，我们在另一台机器上试一下。\n\n在这里，我的架构是两台虚拟机，一台是gitlab和jenkins，一台是nginx和Nexus。所以，我们就在gitlab的机器上尝试。\n\n#### 配置文件\n我们在gitlab配置文件，```vim /etc/docker/daemon.json```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F34dc2fcc-5ee0-4c24-b4a7-8f862900611d%2FUntitled.png?table=block&id=0ca494fb-f98e-470c-9702-028008e9e277&width=1240&cache=v2)\n```bash\n\"insecure-registries\" : [\n    \"192.168.182.4:8082\"\n  ]\n\n```\n最后记得使用```systemctl restart docker```重启一下\n**注意这里是json格式，格式不能错**\n\n#### 登录\n登录一下。从图中可以看出。初次登录需要输入账号密码，后续登录就不需要了。\n```bash\ndocker login 服务IP:端口\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F568d3ad8-2977-40bb-b38d-70015c5c4e1e%2FUntitled.png?table=block&id=1fe5c0b3-a565-4b7f-a69e-c633238d9c10&width=1500&cache=v2)\n\n### 小试牛刀-推送镜像到制品库\n我们可以使用docker push推送镜像到私服上面。\n\ndocker在推送一个镜像时，镜像的 Tag (名称:版本号) 必须开头带着镜像库的地址，才可以推送。例如下面两个镜像：\n 😡 local/jenkins 不能推送\n 😃 **192.168.182.4:8082/local/jenkins** 可以推送。\n\n#### 制作镜像\n1.制作一份带镜像库地址的镜像：这个可以做，但是开销太大，需要走一遍制作流程\n\n2.使用 docker tag 命令给已有的镜像打个标签：推荐使用，会将已有的镜像归位某个镜像库内。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fffb57a8a-62d1-4408-bcc9-23951b2dfc56%2FUntitled.png?table=block&id=8362eb38-87ca-4957-a8bb-c6fc70465a19&width=1560&cache=v2)\n\n```bash\ndocker tag 28c624ccaacf    192.168.182.4:8082/local/jenkins\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7e0b5bc1-da68-45a7-b8fe-0b43d888cead%2FUntitled.png?table=block&id=0d221738-85b7-4896-aa6f-3c7d742cfd46&width=1940&cache=v2)\n#### 推送\n```bash\ndocker push 192.168.182.4:8082/local/jenkins\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcb751e29-83bb-44c1-8f5b-1620b31354ae%2FUntitled.png?table=block&id=961576d1-bd7e-4873-8801-11eea2541683&width=1890&cache=v2)\n在仓库可以看到上传的\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8c4d4830-24f2-47fa-8c40-351cc884527b%2FUntitled.png?table=block&id=95be5f22-2adf-4d7f-828a-a0a5f8085704&width=1600&cache=v2)\n\n## 结语\n我们在这部分实现了docker私服的搭建和push，接下来我们将构建代码并且推送到私服。敬请期待吧！\n","slug":"cicd6","published":1,"updated":"2020-08-12T16:04:35.308Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnc2000nvwtfapc55gxu","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>学习 Nexus 制品库的介绍与安装</p><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>在前面我们写到，制品库是<strong>承接 CI 构建后的产出制品的仓库</strong>，具有版本管理，历史管理，权限校验等功能。</p><p>在这里，我们选用 Nexus3 作为制品库。</p><a id=\"more\"></a><h2 id=\"正式开始\"><a href=\"#正式开始\" class=\"headerlink\" title=\"正式开始\"></a>正式开始</h2><h3 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull sonatype/nexus3<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc7394f96-521a-4d75-9657-56e3f7997392%2FUntitled.png?table=block&id=affa503e-e7ac-4308-baec-c15145250541&width=1170&cache=v2\" alt=\"\"></p><h3 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h3><p>新建一个名为 nexus 的文件夹，方便我们存放 Nexus 相关数据，并赋予权限。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mkdir /home/nexus &amp;&amp; chown -R 200 /home/nexus<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F989a883f-6e58-4d33-9007-35a03d268b50%2FUntitled.png?table=block&id=9ba4a2dd-5cde-45da-9a71-cde44fd3688c&width=940&cache=v2\" alt=\"\"></p><h4 id=\"创建容器\"><a href=\"#创建容器\" class=\"headerlink\" title=\"创建容器\"></a>创建容器</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d -p 8081:8081 -p 8082:8082 \\<br>--name nexus \\<br>-v /home/nexus:/nexus-data \\<br>--restart always \\<br>sonatype/nexus3<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbcb6a00f-6a95-459d-8ad1-4d40aa84b4d5%2FUntitled.png?table=block&id=398776f0-76de-474d-9b3a-cccef7afe288&width=1230&cache=v2\" alt=\"\"></p><ul><li>Nexus 主服务端口，我们设置为 8081,；但是还需要新分配一个端口为服务端口，这里采用的是 8082</li></ul><h4 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h4><p>将对应端口添加到防火墙</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">firewall-cmd --zone=public --add-port=8081/tcp --permanent<br>firewall-cmd --zone=public --add-port=8082/tcp --permanent<br>systemctl reload firewalld<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F852d64c8-9747-427e-a72e-7f6269885109%2FUntitled.png?table=block&id=056bdba7-908c-42f7-8975-a4a8004a75bb&width=1230&cache=v2\" alt=\"\"></p><h3 id=\"访问Nexus\"><a href=\"#访问Nexus\" class=\"headerlink\" title=\"访问Nexus\"></a>访问Nexus</h3><p>打开浏览器地址栏，访问 Nexus 的服务地址，这里是ip:8001。启动时间比较长，可以使用<code>docker logs -f nexus</code>查看日志，如果显示以下文字<strong>Started Sonatype Nexus OSS 3.25.1-04</strong>就代表成功<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F12f64937-982c-4ccf-880e-c050e1ba2cf0%2FUntitled.png?table=block&id=39d424c1-13b0-48c5-82e6-480c41a62805&width=3340&cache=v2\" alt=\"\"></p><h3 id=\"配置Nexus\"><a href=\"#配置Nexus\" class=\"headerlink\" title=\"配置Nexus\"></a>配置Nexus</h3><p>我们访问<code>ip:8001</code>就可以看到界面了。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7703a87e-ad2f-4d7b-84ab-a55f7ef3644e%2FUntitled.png?table=block&id=5c2de677-bf43-431a-a84e-7f2c51f2d6ed&width=3840&cache=v2\" alt=\"\"></p><h4 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h4><p>我们可以使用<code>默认账号:admin</code>登录，默认的密码在<code>cat /home/nexus/admin.password</code>可以查看。</p><p>注意不包含#号<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbcea1a4c-635b-4018-8b2a-ecc8ca72f9ce%2FUntitled.png?table=block&id=e3ebfdfd-53ef-4295-acb8-98421314f575&width=720&cache=v2\" alt=\"\"><br>当我们初次进入之后会让我们设置一下初始密码，和登录的权限。</p><h4 id=\"匿名访问性\"><a href=\"#匿名访问性\" class=\"headerlink\" title=\"匿名访问性\"></a>匿名访问性</h4><p>设置密码之后需要设置访问性,<strong>我们在任何没有登录的情况下，拉取（推送）制品到制品库，都算匿名访问。</strong>,在实际生产中是<strong>不安全</strong>的，我们测试可以开启。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F162cf517-369b-4b16-8db9-2fddd033d225%2FUntitled.png?table=block&id=8730dcac-ee4e-4fa8-9a01-b60a02d1188c&width=1600&cache=v2\" alt=\"\"></p><h4 id=\"创建一个Docker私服\"><a href=\"#创建一个Docker私服\" class=\"headerlink\" title=\"创建一个Docker私服\"></a>创建一个Docker私服</h4><p>点击设置，选择左侧菜单中的 Repositories ，点击 Create repository<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8cb6fdcc-accf-4f58-8241-12dae916188e%2FUntitled.png?table=block&id=d0afe642-9784-4c60-a494-d6b8b6bfe0e3&width=1640&cache=v2\" alt=\"\"></p><p>使用搜索docker可以快速定位<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F86a15444-00ba-4f9f-b4e9-784df123b03b%2FUntitled.png?table=block&id=d3f28b82-fac3-4acd-8aff-5d25230c4cc3&width=2400&cache=v2\" alt=\"\"><br><strong>制品库的类型</strong></p><ul><li>proxy: 此类型制品库原则上 “只下载，不允许用户推送”。可以理解为缓存外网制品的制品库。例如，我们在拉取nginx镜像时，如果通过proxy类型的制品库，则它会去创建时配置好的外网docker镜像源拉取（有点像cnpm）到自己的制品库，然后给你。第二次拉取，则不会下载。起到 缓存 的作用。</li><li>hosted：此类型制品库和proxy相反，原则上 <strong>只允许用户推送，不允许缓存 。</strong>这是私有库的核心，只存放自己的私有镜像或制品。</li><li>group：此类型制品库用作以上两种类型的 *<em>集合 *</em>，将上面两个库集合为一个使用。</li></ul><p>这里我们采用hosted类型，点击创建会看到一些输入框，这里做简单的解释。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd5ad3d6c-44fa-40c7-8fbb-38dd7a3ae28b%2FUntitled.png?table=block&id=9c6c314c-f627-43f3-934c-17dd71968752&width=2340&cache=v2\" alt=\"\"></p><p>同时我们还要设置一下权限，在Security-Realms的Docker Bearer Token Realm选择到右边的激活状态。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F659b6de4-136b-43ef-a524-fce864fdeaa8%2FUntitled.png?table=block&id=3aaaf25e-35c0-4ce2-a0e9-c5092751e7b2&width=2850&cache=v2\" alt=\"\"></p><h3 id=\"小试牛刀-登录\"><a href=\"#小试牛刀-登录\" class=\"headerlink\" title=\"小试牛刀-登录\"></a>小试牛刀-登录</h3><p>安装至此，我们在另一台机器上试一下。</p><p>在这里，我的架构是两台虚拟机，一台是gitlab和jenkins，一台是nginx和Nexus。所以，我们就在gitlab的机器上尝试。</p><h4 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h4><p>我们在gitlab配置文件，<code>vim /etc/docker/daemon.json</code><br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F34dc2fcc-5ee0-4c24-b4a7-8f862900611d%2FUntitled.png?table=block&id=0ca494fb-f98e-470c-9702-028008e9e277&width=1240&cache=v2\" alt=\"\"></p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-string\">\"insecure-registries\"</span> : [<br>    <span class=\"hljs-string\">\"192.168.182.4:8082\"</span><br>  ]<br></code></pre></td></tr></table></figure><p>最后记得使用<code>systemctl restart docker</code>重启一下<br><strong>注意这里是json格式，格式不能错</strong></p><h4 id=\"登录-1\"><a href=\"#登录-1\" class=\"headerlink\" title=\"登录\"></a>登录</h4><p>登录一下。从图中可以看出。初次登录需要输入账号密码，后续登录就不需要了。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker login 服务IP:端口<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F568d3ad8-2977-40bb-b38d-70015c5c4e1e%2FUntitled.png?table=block&id=1fe5c0b3-a565-4b7f-a69e-c633238d9c10&width=1500&cache=v2\" alt=\"\"></p><h3 id=\"小试牛刀-推送镜像到制品库\"><a href=\"#小试牛刀-推送镜像到制品库\" class=\"headerlink\" title=\"小试牛刀-推送镜像到制品库\"></a>小试牛刀-推送镜像到制品库</h3><p>我们可以使用docker push推送镜像到私服上面。</p><p>docker在推送一个镜像时，镜像的 Tag (名称:版本号) 必须开头带着镜像库的地址，才可以推送。例如下面两个镜像：<br>😡 local/jenkins 不能推送<br>😃 <strong>192.168.182.4:8082/local/jenkins</strong> 可以推送。</p><h4 id=\"制作镜像\"><a href=\"#制作镜像\" class=\"headerlink\" title=\"制作镜像\"></a>制作镜像</h4><p>1.制作一份带镜像库地址的镜像：这个可以做，但是开销太大，需要走一遍制作流程</p><p>2.使用 docker tag 命令给已有的镜像打个标签：推荐使用，会将已有的镜像归位某个镜像库内。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fffb57a8a-62d1-4408-bcc9-23951b2dfc56%2FUntitled.png?table=block&id=8362eb38-87ca-4957-a8bb-c6fc70465a19&width=1560&cache=v2\" alt=\"\"></p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker tag 28c624ccaacf    192.168.182.4:8082/<span class=\"hljs-built_in\">local</span>/jenkins<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7e0b5bc1-da68-45a7-b8fe-0b43d888cead%2FUntitled.png?table=block&id=0d221738-85b7-4896-aa6f-3c7d742cfd46&width=1940&cache=v2\" alt=\"\"></p><h4 id=\"推送\"><a href=\"#推送\" class=\"headerlink\" title=\"推送\"></a>推送</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker push 192.168.182.4:8082/<span class=\"hljs-built_in\">local</span>/jenkins<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcb751e29-83bb-44c1-8f5b-1620b31354ae%2FUntitled.png?table=block&id=961576d1-bd7e-4873-8801-11eea2541683&width=1890&cache=v2\" alt=\"\"><br>在仓库可以看到上传的<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8c4d4830-24f2-47fa-8c40-351cc884527b%2FUntitled.png?table=block&id=95be5f22-2adf-4d7f-828a-a0a5f8085704&width=1600&cache=v2\" alt=\"\"></p><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>我们在这部分实现了docker私服的搭建和push，接下来我们将构建代码并且推送到私服。敬请期待吧！</p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>学习 Nexus 制品库的介绍与安装</p><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>在前面我们写到，制品库是<strong>承接 CI 构建后的产出制品的仓库</strong>，具有版本管理，历史管理，权限校验等功能。</p><p>在这里，我们选用 Nexus3 作为制品库。</p>","more":"<h2 id=\"正式开始\"><a href=\"#正式开始\" class=\"headerlink\" title=\"正式开始\"></a>正式开始</h2><h3 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull sonatype/nexus3<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc7394f96-521a-4d75-9657-56e3f7997392%2FUntitled.png?table=block&id=affa503e-e7ac-4308-baec-c15145250541&width=1170&cache=v2\" alt=\"\"></p><h3 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h3><p>新建一个名为 nexus 的文件夹，方便我们存放 Nexus 相关数据，并赋予权限。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mkdir /home/nexus &amp;&amp; chown -R 200 /home/nexus<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F989a883f-6e58-4d33-9007-35a03d268b50%2FUntitled.png?table=block&id=9ba4a2dd-5cde-45da-9a71-cde44fd3688c&width=940&cache=v2\" alt=\"\"></p><h4 id=\"创建容器\"><a href=\"#创建容器\" class=\"headerlink\" title=\"创建容器\"></a>创建容器</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d -p 8081:8081 -p 8082:8082 \\<br>--name nexus \\<br>-v /home/nexus:/nexus-data \\<br>--restart always \\<br>sonatype/nexus3<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbcb6a00f-6a95-459d-8ad1-4d40aa84b4d5%2FUntitled.png?table=block&id=398776f0-76de-474d-9b3a-cccef7afe288&width=1230&cache=v2\" alt=\"\"></p><ul><li>Nexus 主服务端口，我们设置为 8081,；但是还需要新分配一个端口为服务端口，这里采用的是 8082</li></ul><h4 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h4><p>将对应端口添加到防火墙</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">firewall-cmd --zone=public --add-port=8081/tcp --permanent<br>firewall-cmd --zone=public --add-port=8082/tcp --permanent<br>systemctl reload firewalld<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F852d64c8-9747-427e-a72e-7f6269885109%2FUntitled.png?table=block&id=056bdba7-908c-42f7-8975-a4a8004a75bb&width=1230&cache=v2\" alt=\"\"></p><h3 id=\"访问Nexus\"><a href=\"#访问Nexus\" class=\"headerlink\" title=\"访问Nexus\"></a>访问Nexus</h3><p>打开浏览器地址栏，访问 Nexus 的服务地址，这里是ip:8001。启动时间比较长，可以使用<code>docker logs -f nexus</code>查看日志，如果显示以下文字<strong>Started Sonatype Nexus OSS 3.25.1-04</strong>就代表成功<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F12f64937-982c-4ccf-880e-c050e1ba2cf0%2FUntitled.png?table=block&id=39d424c1-13b0-48c5-82e6-480c41a62805&width=3340&cache=v2\" alt=\"\"></p><h3 id=\"配置Nexus\"><a href=\"#配置Nexus\" class=\"headerlink\" title=\"配置Nexus\"></a>配置Nexus</h3><p>我们访问<code>ip:8001</code>就可以看到界面了。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7703a87e-ad2f-4d7b-84ab-a55f7ef3644e%2FUntitled.png?table=block&id=5c2de677-bf43-431a-a84e-7f2c51f2d6ed&width=3840&cache=v2\" alt=\"\"></p><h4 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h4><p>我们可以使用<code>默认账号:admin</code>登录，默认的密码在<code>cat /home/nexus/admin.password</code>可以查看。</p><p>注意不包含#号<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbcea1a4c-635b-4018-8b2a-ecc8ca72f9ce%2FUntitled.png?table=block&id=e3ebfdfd-53ef-4295-acb8-98421314f575&width=720&cache=v2\" alt=\"\"><br>当我们初次进入之后会让我们设置一下初始密码，和登录的权限。</p><h4 id=\"匿名访问性\"><a href=\"#匿名访问性\" class=\"headerlink\" title=\"匿名访问性\"></a>匿名访问性</h4><p>设置密码之后需要设置访问性,<strong>我们在任何没有登录的情况下，拉取（推送）制品到制品库，都算匿名访问。</strong>,在实际生产中是<strong>不安全</strong>的，我们测试可以开启。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F162cf517-369b-4b16-8db9-2fddd033d225%2FUntitled.png?table=block&id=8730dcac-ee4e-4fa8-9a01-b60a02d1188c&width=1600&cache=v2\" alt=\"\"></p><h4 id=\"创建一个Docker私服\"><a href=\"#创建一个Docker私服\" class=\"headerlink\" title=\"创建一个Docker私服\"></a>创建一个Docker私服</h4><p>点击设置，选择左侧菜单中的 Repositories ，点击 Create repository<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8cb6fdcc-accf-4f58-8241-12dae916188e%2FUntitled.png?table=block&id=d0afe642-9784-4c60-a494-d6b8b6bfe0e3&width=1640&cache=v2\" alt=\"\"></p><p>使用搜索docker可以快速定位<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F86a15444-00ba-4f9f-b4e9-784df123b03b%2FUntitled.png?table=block&id=d3f28b82-fac3-4acd-8aff-5d25230c4cc3&width=2400&cache=v2\" alt=\"\"><br><strong>制品库的类型</strong></p><ul><li>proxy: 此类型制品库原则上 “只下载，不允许用户推送”。可以理解为缓存外网制品的制品库。例如，我们在拉取nginx镜像时，如果通过proxy类型的制品库，则它会去创建时配置好的外网docker镜像源拉取（有点像cnpm）到自己的制品库，然后给你。第二次拉取，则不会下载。起到 缓存 的作用。</li><li>hosted：此类型制品库和proxy相反，原则上 <strong>只允许用户推送，不允许缓存 。</strong>这是私有库的核心，只存放自己的私有镜像或制品。</li><li>group：此类型制品库用作以上两种类型的 *<em>集合 *</em>，将上面两个库集合为一个使用。</li></ul><p>这里我们采用hosted类型，点击创建会看到一些输入框，这里做简单的解释。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd5ad3d6c-44fa-40c7-8fbb-38dd7a3ae28b%2FUntitled.png?table=block&id=9c6c314c-f627-43f3-934c-17dd71968752&width=2340&cache=v2\" alt=\"\"></p><p>同时我们还要设置一下权限，在Security-Realms的Docker Bearer Token Realm选择到右边的激活状态。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F659b6de4-136b-43ef-a524-fce864fdeaa8%2FUntitled.png?table=block&id=3aaaf25e-35c0-4ce2-a0e9-c5092751e7b2&width=2850&cache=v2\" alt=\"\"></p><h3 id=\"小试牛刀-登录\"><a href=\"#小试牛刀-登录\" class=\"headerlink\" title=\"小试牛刀-登录\"></a>小试牛刀-登录</h3><p>安装至此，我们在另一台机器上试一下。</p><p>在这里，我的架构是两台虚拟机，一台是gitlab和jenkins，一台是nginx和Nexus。所以，我们就在gitlab的机器上尝试。</p><h4 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h4><p>我们在gitlab配置文件，<code>vim /etc/docker/daemon.json</code><br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F34dc2fcc-5ee0-4c24-b4a7-8f862900611d%2FUntitled.png?table=block&id=0ca494fb-f98e-470c-9702-028008e9e277&width=1240&cache=v2\" alt=\"\"></p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-string\">\"insecure-registries\"</span> : [<br>    <span class=\"hljs-string\">\"192.168.182.4:8082\"</span><br>  ]<br></code></pre></td></tr></table></figure><p>最后记得使用<code>systemctl restart docker</code>重启一下<br><strong>注意这里是json格式，格式不能错</strong></p><h4 id=\"登录-1\"><a href=\"#登录-1\" class=\"headerlink\" title=\"登录\"></a>登录</h4><p>登录一下。从图中可以看出。初次登录需要输入账号密码，后续登录就不需要了。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker login 服务IP:端口<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F568d3ad8-2977-40bb-b38d-70015c5c4e1e%2FUntitled.png?table=block&id=1fe5c0b3-a565-4b7f-a69e-c633238d9c10&width=1500&cache=v2\" alt=\"\"></p><h3 id=\"小试牛刀-推送镜像到制品库\"><a href=\"#小试牛刀-推送镜像到制品库\" class=\"headerlink\" title=\"小试牛刀-推送镜像到制品库\"></a>小试牛刀-推送镜像到制品库</h3><p>我们可以使用docker push推送镜像到私服上面。</p><p>docker在推送一个镜像时，镜像的 Tag (名称:版本号) 必须开头带着镜像库的地址，才可以推送。例如下面两个镜像：<br>😡 local/jenkins 不能推送<br>😃 <strong>192.168.182.4:8082/local/jenkins</strong> 可以推送。</p><h4 id=\"制作镜像\"><a href=\"#制作镜像\" class=\"headerlink\" title=\"制作镜像\"></a>制作镜像</h4><p>1.制作一份带镜像库地址的镜像：这个可以做，但是开销太大，需要走一遍制作流程</p><p>2.使用 docker tag 命令给已有的镜像打个标签：推荐使用，会将已有的镜像归位某个镜像库内。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fffb57a8a-62d1-4408-bcc9-23951b2dfc56%2FUntitled.png?table=block&id=8362eb38-87ca-4957-a8bb-c6fc70465a19&width=1560&cache=v2\" alt=\"\"></p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker tag 28c624ccaacf    192.168.182.4:8082/<span class=\"hljs-built_in\">local</span>/jenkins<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7e0b5bc1-da68-45a7-b8fe-0b43d888cead%2FUntitled.png?table=block&id=0d221738-85b7-4896-aa6f-3c7d742cfd46&width=1940&cache=v2\" alt=\"\"></p><h4 id=\"推送\"><a href=\"#推送\" class=\"headerlink\" title=\"推送\"></a>推送</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker push 192.168.182.4:8082/<span class=\"hljs-built_in\">local</span>/jenkins<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcb751e29-83bb-44c1-8f5b-1620b31354ae%2FUntitled.png?table=block&id=961576d1-bd7e-4873-8801-11eea2541683&width=1890&cache=v2\" alt=\"\"><br>在仓库可以看到上传的<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8c4d4830-24f2-47fa-8c40-351cc884527b%2FUntitled.png?table=block&id=95be5f22-2adf-4d7f-828a-a0a5f8085704&width=1600&cache=v2\" alt=\"\"></p><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>我们在这部分实现了docker私服的搭建和push，接下来我们将构建代码并且推送到私服。敬请期待吧！</p><!-- rebuild by neat -->"},{"title":"CICD实战之Nginx搭建","abbrlink":"342a6d66","date":"2020-07-29T02:50:34.000Z","_content":"\n## 目的\n\n学习 Nginx 的搭建\n\n## 搭建步骤\n\n这次的 Nginx 我们在一台新机器安装\n\n### 安装 docker\n\n[地址](https://kitety.github.io/posts/bc65362f.html#docker-%E4%BB%8B%E7%BB%8D)\n#### 配置阿里源\n不配置的话速度很慢[地址](https://kitety.github.io/posts/bc65362f.html#%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E4%BA%91%E6%BA%90)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F52cccf78-21ef-4c83-8d84-0cd9ec88429a%2Fia_10003.png?table=block&id=e98172ed-8797-41f1-a335-a6abaee002a0&width=1500&cache=v2)\n\n<!-- more -->\n### 拉取镜像\n```bash\ndocker pull nginx\n```\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2d162338-9bd3-4853-bd0d-f7e285e9a17e%2Fia_10004.png?table=block&id=4aad9370-480f-48ba-b766-6a1cf1862b2f&width=1480&cache=v2)\n\n### 安装\n```bash\nmkdir /home/nginx\ndocker run -itd -p 80:80 --name nginx-test \\\n  -v /home/nginx/html:/usr/share/nginx/html \\\n  -v /home/nginx/logs:/var/log/nginx \\\n  --restart always \\\n  nginx\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fafaf6ceb-3612-473c-bbfc-893259e0ae13%2Fia_10005.png?table=block&id=2bee5d65-5d3b-4d8f-b80b-a57ec9411b8c&width=3060&cache=v2)\n\n简单修改一下\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbe1b6dbe-370e-482e-ae6f-cb1832726f33%2Fia_10006.png?table=block&id=583afb2b-6079-4c85-b30e-ccecdb657a87&width=850&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F407e7cf3-fdc8-43a9-8793-520d9156467e%2Fia_10007.png?table=block&id=ca8085d5-a176-4311-b946-c27b16e35d35&width=910&cache=v2)\n\n## 结语\n至此，我们已经完整搭建了Nginx环境，下一步我们将联合Gitlab和Jenkins一起构建，一起期待吧。撒花！\n\n","source":"_posts/cicd4.md","raw":"---\ntitle: CICD实战之Nginx搭建\nabbrlink: 342a6d66\ndate: 2020-07-29 10:50:34\ntags:\n  - CICD\n---\n\n## 目的\n\n学习 Nginx 的搭建\n\n## 搭建步骤\n\n这次的 Nginx 我们在一台新机器安装\n\n### 安装 docker\n\n[地址](https://kitety.github.io/posts/bc65362f.html#docker-%E4%BB%8B%E7%BB%8D)\n#### 配置阿里源\n不配置的话速度很慢[地址](https://kitety.github.io/posts/bc65362f.html#%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E4%BA%91%E6%BA%90)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F52cccf78-21ef-4c83-8d84-0cd9ec88429a%2Fia_10003.png?table=block&id=e98172ed-8797-41f1-a335-a6abaee002a0&width=1500&cache=v2)\n\n<!-- more -->\n### 拉取镜像\n```bash\ndocker pull nginx\n```\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2d162338-9bd3-4853-bd0d-f7e285e9a17e%2Fia_10004.png?table=block&id=4aad9370-480f-48ba-b766-6a1cf1862b2f&width=1480&cache=v2)\n\n### 安装\n```bash\nmkdir /home/nginx\ndocker run -itd -p 80:80 --name nginx-test \\\n  -v /home/nginx/html:/usr/share/nginx/html \\\n  -v /home/nginx/logs:/var/log/nginx \\\n  --restart always \\\n  nginx\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fafaf6ceb-3612-473c-bbfc-893259e0ae13%2Fia_10005.png?table=block&id=2bee5d65-5d3b-4d8f-b80b-a57ec9411b8c&width=3060&cache=v2)\n\n简单修改一下\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbe1b6dbe-370e-482e-ae6f-cb1832726f33%2Fia_10006.png?table=block&id=583afb2b-6079-4c85-b30e-ccecdb657a87&width=850&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F407e7cf3-fdc8-43a9-8793-520d9156467e%2Fia_10007.png?table=block&id=ca8085d5-a176-4311-b946-c27b16e35d35&width=910&cache=v2)\n\n## 结语\n至此，我们已经完整搭建了Nginx环境，下一步我们将联合Gitlab和Jenkins一起构建，一起期待吧。撒花！\n\n","slug":"cicd4","published":1,"updated":"2020-08-02T11:29:09.386Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnc3000pvwtfdj8c7nrj","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>学习 Nginx 的搭建</p><h2 id=\"搭建步骤\"><a href=\"#搭建步骤\" class=\"headerlink\" title=\"搭建步骤\"></a>搭建步骤</h2><p>这次的 Nginx 我们在一台新机器安装</p><h3 id=\"安装-docker\"><a href=\"#安装-docker\" class=\"headerlink\" title=\"安装 docker\"></a>安装 docker</h3><p><a href=\"https://kitety.github.io/posts/bc65362f.html#docker-%E4%BB%8B%E7%BB%8D\">地址</a></p><h4 id=\"配置阿里源\"><a href=\"#配置阿里源\" class=\"headerlink\" title=\"配置阿里源\"></a>配置阿里源</h4><p>不配置的话速度很慢<a href=\"https://kitety.github.io/posts/bc65362f.html#%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E4%BA%91%E6%BA%90\">地址</a></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F52cccf78-21ef-4c83-8d84-0cd9ec88429a%2Fia_10003.png?table=block&id=e98172ed-8797-41f1-a335-a6abaee002a0&width=1500&cache=v2\" alt=\"\"></p><a id=\"more\"></a><h3 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull nginx<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2d162338-9bd3-4853-bd0d-f7e285e9a17e%2Fia_10004.png?table=block&id=4aad9370-480f-48ba-b766-6a1cf1862b2f&width=1480&cache=v2\" alt=\"\"></p><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mkdir /home/nginx<br>docker run -itd -p 80:80 --name nginx-test \\<br>  -v /home/nginx/html:/usr/share/nginx/html \\<br>  -v /home/nginx/logs:/var/<span class=\"hljs-built_in\">log</span>/nginx \\<br>  --restart always \\<br>  nginx<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fafaf6ceb-3612-473c-bbfc-893259e0ae13%2Fia_10005.png?table=block&id=2bee5d65-5d3b-4d8f-b80b-a57ec9411b8c&width=3060&cache=v2\" alt=\"\"></p><p>简单修改一下<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbe1b6dbe-370e-482e-ae6f-cb1832726f33%2Fia_10006.png?table=block&id=583afb2b-6079-4c85-b30e-ccecdb657a87&width=850&cache=v2\" alt=\"\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F407e7cf3-fdc8-43a9-8793-520d9156467e%2Fia_10007.png?table=block&id=ca8085d5-a176-4311-b946-c27b16e35d35&width=910&cache=v2\" alt=\"\"></p><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>至此，我们已经完整搭建了Nginx环境，下一步我们将联合Gitlab和Jenkins一起构建，一起期待吧。撒花！</p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>学习 Nginx 的搭建</p><h2 id=\"搭建步骤\"><a href=\"#搭建步骤\" class=\"headerlink\" title=\"搭建步骤\"></a>搭建步骤</h2><p>这次的 Nginx 我们在一台新机器安装</p><h3 id=\"安装-docker\"><a href=\"#安装-docker\" class=\"headerlink\" title=\"安装 docker\"></a>安装 docker</h3><p><a href=\"https://kitety.github.io/posts/bc65362f.html#docker-%E4%BB%8B%E7%BB%8D\">地址</a></p><h4 id=\"配置阿里源\"><a href=\"#配置阿里源\" class=\"headerlink\" title=\"配置阿里源\"></a>配置阿里源</h4><p>不配置的话速度很慢<a href=\"https://kitety.github.io/posts/bc65362f.html#%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E4%BA%91%E6%BA%90\">地址</a></p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F52cccf78-21ef-4c83-8d84-0cd9ec88429a%2Fia_10003.png?table=block&id=e98172ed-8797-41f1-a335-a6abaee002a0&width=1500&cache=v2\" alt=\"\"></p>","more":"<h3 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull nginx<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2d162338-9bd3-4853-bd0d-f7e285e9a17e%2Fia_10004.png?table=block&id=4aad9370-480f-48ba-b766-6a1cf1862b2f&width=1480&cache=v2\" alt=\"\"></p><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mkdir /home/nginx<br>docker run -itd -p 80:80 --name nginx-test \\<br>  -v /home/nginx/html:/usr/share/nginx/html \\<br>  -v /home/nginx/logs:/var/<span class=\"hljs-built_in\">log</span>/nginx \\<br>  --restart always \\<br>  nginx<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fafaf6ceb-3612-473c-bbfc-893259e0ae13%2Fia_10005.png?table=block&id=2bee5d65-5d3b-4d8f-b80b-a57ec9411b8c&width=3060&cache=v2\" alt=\"\"></p><p>简单修改一下<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbe1b6dbe-370e-482e-ae6f-cb1832726f33%2Fia_10006.png?table=block&id=583afb2b-6079-4c85-b30e-ccecdb657a87&width=850&cache=v2\" alt=\"\"></p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F407e7cf3-fdc8-43a9-8793-520d9156467e%2Fia_10007.png?table=block&id=ca8085d5-a176-4311-b946-c27b16e35d35&width=910&cache=v2\" alt=\"\"></p><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>至此，我们已经完整搭建了Nginx环境，下一步我们将联合Gitlab和Jenkins一起构建，一起期待吧。撒花！</p><!-- rebuild by neat -->"},{"title":"CICD实战之Jenkins构建前端镜像并上传到制品库","abbrlink":"dc1bbeba","date":"2020-08-09T10:41:29.000Z","_content":"## 目的\n之前的前端构建部署，是通过scp传输dist的全部文件到指定目录实现部署，这次我们将学习利用Jenkins构建docker前端镜像并上传到制品库实现部署。\n\n<!-- more -->\n\n## 正式开始\n### Jenkins登录\n想使用 Jenkins 推送镜像到制品库，必须先登录制品库。进入 Jenkins 容器，使用 docker login 登录，然后退出即可\n```bash\ndocker exec -it jenkins /bin/bash\ndocker login 192.168.182.4:8082\nexit;\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F83a17ab7-07da-49d4-8db1-0600b409489c%2FUntitled.png?table=block&id=79151228-403c-4fb0-a7ea-b7f8acfb7bc8&width=2180&cache=v2)\n\n登录一次之后后续就无需登录。\n\n**注意：登录不上可以多尝试几次**\n### Nginx登录制品库\nJenkins构建并且push，Nginx就会触发拉取，因此这边也需要登录。\n```bash\nvi /etc/docker/daemon.json\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n# 登录\ndocker login 192.168.182.4:8082\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4063b340-ed25-459e-8bf2-f9e1016c2202%2FUntitled.png?table=block&id=8a51b6c8-fe13-49b8-b43e-21ba19e3fc7c&width=2320&cache=v2)\n登录一次之后后续就无需登录。\n\n### DockerFile \n前端通过Jenkins构建docker镜像，因此需要添加DockerFile文件。\n\nDockerFile 是一个镜像制作过程的步骤描述，新增文件添加一下代码\n```bash\nFROM nginx:1.15-alpine\nCOPY dist /usr/share/nginx/html\nWORKDIR /usr/share/nginx/html\n```\n- 拉取一个 nginx 1.15-alpine 版本的镜像。\n- 将当前目录下的 dist 文件夹拷贝到镜像的 /usr/share/nginx/html 文件夹。\n- 声明启动容器时，在 /usr/share/nginx/html 下面执行。\n\n### jenkins配置修改\n修改配置\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd91c5a34-2c73-452e-9405-0784459f1a97%2FUntitled.png?table=block&id=f919b321-75e2-4f03-86ef-282c7b0322be&width=2980&cache=v2)\n添加以下代码\n```bash\nset -e\ntimestamp=`date '+%Y%m%d%H%M%S'`\n\nnode -v\nnpm -v\n\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n\ncnpm install\n\nnpm run build\n\n# 编译docker镜像\ndocker build -t 192.168.182.4:8082/fe/nginx-fe-$timestamp .\n\n# 推送docker镜像到制品库\ndocker push 192.168.182.4:8082/fe/nginx-fe-$timestamp\n\n# 远程执行命令部署镜像\nssh -o StrictHostKeyChecking=no root@192.168.182.4 \"docker pull 192.168.182.4:8082/fe/nginx-fe-$timestamp && \\\ndocker stop nginx-test && \\\ndocker rm nginx-test && \\\ndocker run -p 80:80 -itd \\\n--name nginx-test \\\n--restart always \\\n192.168.182.4:8082/fe/nginx-fe-$timestamp\"\n```\n流程分析\n- Jenkins在命令中用 $-变量名 进行使用。 timestamp=date '+%Y%m%d%H%M%S'，唯一的docker命名\n- 依据DockerFile打包镜像并且推送\n- Nginx拉取刚推送的docker镜像，停止正在运行的container，删除之后并且运行当前的镜像。\n\n**上述代码中相关注意事项**\n\n- 制品库的地址：172.16.81.150:8082\n- nginx的地址：192.168.182.4\n- nginx的name：nginx-test![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb6123ba0-bccf-4073-8c0f-09c1f3d28a5d%2FUntitled.png?table=block&id=51ff3f40-2167-4109-9abc-ba698c6c83c1&width=2900&cache=v2)\n  \n## 结语\n和之前的构建部署方式中，利用docker镜像可以很好地代码回退和迭代更新，实现了版本在生产环境更好的控制。\n","source":"_posts/cicd7.md","raw":"---\ntitle: CICD实战之Jenkins构建前端镜像并上传到制品库\ntags:\n  - CICD\nabbrlink: dc1bbeba\ndate: 2020-08-09 18:41:29\n---\n## 目的\n之前的前端构建部署，是通过scp传输dist的全部文件到指定目录实现部署，这次我们将学习利用Jenkins构建docker前端镜像并上传到制品库实现部署。\n\n<!-- more -->\n\n## 正式开始\n### Jenkins登录\n想使用 Jenkins 推送镜像到制品库，必须先登录制品库。进入 Jenkins 容器，使用 docker login 登录，然后退出即可\n```bash\ndocker exec -it jenkins /bin/bash\ndocker login 192.168.182.4:8082\nexit;\n```\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F83a17ab7-07da-49d4-8db1-0600b409489c%2FUntitled.png?table=block&id=79151228-403c-4fb0-a7ea-b7f8acfb7bc8&width=2180&cache=v2)\n\n登录一次之后后续就无需登录。\n\n**注意：登录不上可以多尝试几次**\n### Nginx登录制品库\nJenkins构建并且push，Nginx就会触发拉取，因此这边也需要登录。\n```bash\nvi /etc/docker/daemon.json\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n# 登录\ndocker login 192.168.182.4:8082\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4063b340-ed25-459e-8bf2-f9e1016c2202%2FUntitled.png?table=block&id=8a51b6c8-fe13-49b8-b43e-21ba19e3fc7c&width=2320&cache=v2)\n登录一次之后后续就无需登录。\n\n### DockerFile \n前端通过Jenkins构建docker镜像，因此需要添加DockerFile文件。\n\nDockerFile 是一个镜像制作过程的步骤描述，新增文件添加一下代码\n```bash\nFROM nginx:1.15-alpine\nCOPY dist /usr/share/nginx/html\nWORKDIR /usr/share/nginx/html\n```\n- 拉取一个 nginx 1.15-alpine 版本的镜像。\n- 将当前目录下的 dist 文件夹拷贝到镜像的 /usr/share/nginx/html 文件夹。\n- 声明启动容器时，在 /usr/share/nginx/html 下面执行。\n\n### jenkins配置修改\n修改配置\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd91c5a34-2c73-452e-9405-0784459f1a97%2FUntitled.png?table=block&id=f919b321-75e2-4f03-86ef-282c7b0322be&width=2980&cache=v2)\n添加以下代码\n```bash\nset -e\ntimestamp=`date '+%Y%m%d%H%M%S'`\n\nnode -v\nnpm -v\n\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n\ncnpm install\n\nnpm run build\n\n# 编译docker镜像\ndocker build -t 192.168.182.4:8082/fe/nginx-fe-$timestamp .\n\n# 推送docker镜像到制品库\ndocker push 192.168.182.4:8082/fe/nginx-fe-$timestamp\n\n# 远程执行命令部署镜像\nssh -o StrictHostKeyChecking=no root@192.168.182.4 \"docker pull 192.168.182.4:8082/fe/nginx-fe-$timestamp && \\\ndocker stop nginx-test && \\\ndocker rm nginx-test && \\\ndocker run -p 80:80 -itd \\\n--name nginx-test \\\n--restart always \\\n192.168.182.4:8082/fe/nginx-fe-$timestamp\"\n```\n流程分析\n- Jenkins在命令中用 $-变量名 进行使用。 timestamp=date '+%Y%m%d%H%M%S'，唯一的docker命名\n- 依据DockerFile打包镜像并且推送\n- Nginx拉取刚推送的docker镜像，停止正在运行的container，删除之后并且运行当前的镜像。\n\n**上述代码中相关注意事项**\n\n- 制品库的地址：172.16.81.150:8082\n- nginx的地址：192.168.182.4\n- nginx的name：nginx-test![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb6123ba0-bccf-4073-8c0f-09c1f3d28a5d%2FUntitled.png?table=block&id=51ff3f40-2167-4109-9abc-ba698c6c83c1&width=2900&cache=v2)\n  \n## 结语\n和之前的构建部署方式中，利用docker镜像可以很好地代码回退和迭代更新，实现了版本在生产环境更好的控制。\n","slug":"cicd7","published":1,"updated":"2020-08-12T16:04:35.309Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnc5000rvwtf6gl31hmh","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>之前的前端构建部署，是通过scp传输dist的全部文件到指定目录实现部署，这次我们将学习利用Jenkins构建docker前端镜像并上传到制品库实现部署。</p><a id=\"more\"></a><h2 id=\"正式开始\"><a href=\"#正式开始\" class=\"headerlink\" title=\"正式开始\"></a>正式开始</h2><h3 id=\"Jenkins登录\"><a href=\"#Jenkins登录\" class=\"headerlink\" title=\"Jenkins登录\"></a>Jenkins登录</h3><p>想使用 Jenkins 推送镜像到制品库，必须先登录制品库。进入 Jenkins 容器，使用 docker login 登录，然后退出即可</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -it jenkins /bin/bash<br>docker login 192.168.182.4:8082<br><span class=\"hljs-built_in\">exit</span>;<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F83a17ab7-07da-49d4-8db1-0600b409489c%2FUntitled.png?table=block&id=79151228-403c-4fb0-a7ea-b7f8acfb7bc8&width=2180&cache=v2\" alt=\"\"></p><p>登录一次之后后续就无需登录。</p><p><strong>注意：登录不上可以多尝试几次</strong></p><h3 id=\"Nginx登录制品库\"><a href=\"#Nginx登录制品库\" class=\"headerlink\" title=\"Nginx登录制品库\"></a>Nginx登录制品库</h3><p>Jenkins构建并且push，Nginx就会触发拉取，因此这边也需要登录。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">vi /etc/docker/daemon.json<br>sudo systemctl daemon-reload<br>sudo systemctl restart docker<br><span class=\"hljs-comment\"># 登录</span><br>docker login 192.168.182.4:8082<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4063b340-ed25-459e-8bf2-f9e1016c2202%2FUntitled.png?table=block&id=8a51b6c8-fe13-49b8-b43e-21ba19e3fc7c&width=2320&cache=v2\" alt=\"\"><br>登录一次之后后续就无需登录。</p><h3 id=\"DockerFile\"><a href=\"#DockerFile\" class=\"headerlink\" title=\"DockerFile\"></a>DockerFile</h3><p>前端通过Jenkins构建docker镜像，因此需要添加DockerFile文件。</p><p>DockerFile 是一个镜像制作过程的步骤描述，新增文件添加一下代码</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">FROM nginx:1.15-alpine<br>COPY dist /usr/share/nginx/html<br>WORKDIR /usr/share/nginx/html<br></code></pre></td></tr></table></figure><ul><li>拉取一个 nginx 1.15-alpine 版本的镜像。</li><li>将当前目录下的 dist 文件夹拷贝到镜像的 /usr/share/nginx/html 文件夹。</li><li>声明启动容器时，在 /usr/share/nginx/html 下面执行。</li></ul><h3 id=\"jenkins配置修改\"><a href=\"#jenkins配置修改\" class=\"headerlink\" title=\"jenkins配置修改\"></a>jenkins配置修改</h3><p>修改配置<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd91c5a34-2c73-452e-9405-0784459f1a97%2FUntitled.png?table=block&id=f919b321-75e2-4f03-86ef-282c7b0322be&width=2980&cache=v2\" alt=\"\"><br>添加以下代码</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">set</span> -e<br>timestamp=`date <span class=\"hljs-string\">'+%Y%m%d%H%M%S'</span>`<br><br>node -v<br>npm -v<br><br>npm install -g cnpm --registry=https://registry.npm.taobao.org<br><br>cnpm install<br><br>npm run build<br><br><span class=\"hljs-comment\"># 编译docker镜像</span><br>docker build -t 192.168.182.4:8082/fe/nginx-fe-<span class=\"hljs-variable\">$timestamp</span> .<br><br><span class=\"hljs-comment\"># 推送docker镜像到制品库</span><br>docker push 192.168.182.4:8082/fe/nginx-fe-<span class=\"hljs-variable\">$timestamp</span><br><br><span class=\"hljs-comment\"># 远程执行命令部署镜像</span><br>ssh -o StrictHostKeyChecking=no root@192.168.182.4 <span class=\"hljs-string\">\"docker pull 192.168.182.4:8082/fe/nginx-fe-<span class=\"hljs-variable\">$timestamp</span> &amp;&amp; \\</span><br><span class=\"hljs-string\">docker stop nginx-test &amp;&amp; \\</span><br><span class=\"hljs-string\">docker rm nginx-test &amp;&amp; \\</span><br><span class=\"hljs-string\">docker run -p 80:80 -itd \\</span><br><span class=\"hljs-string\">--name nginx-test \\</span><br><span class=\"hljs-string\">--restart always \\</span><br><span class=\"hljs-string\">192.168.182.4:8082/fe/nginx-fe-<span class=\"hljs-variable\">$timestamp</span>\"</span><br></code></pre></td></tr></table></figure><p>流程分析</p><ul><li>Jenkins在命令中用 $-变量名 进行使用。 timestamp=date ‘+%Y%m%d%H%M%S’，唯一的docker命名</li><li>依据DockerFile打包镜像并且推送</li><li>Nginx拉取刚推送的docker镜像，停止正在运行的container，删除之后并且运行当前的镜像。</li></ul><p><strong>上述代码中相关注意事项</strong></p><ul><li>制品库的地址：172.16.81.150:8082</li><li>nginx的地址：192.168.182.4</li><li>nginx的name：nginx-test<img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb6123ba0-bccf-4073-8c0f-09c1f3d28a5d%2FUntitled.png?table=block&id=51ff3f40-2167-4109-9abc-ba698c6c83c1&width=2900&cache=v2\" alt=\"\"></li></ul><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>和之前的构建部署方式中，利用docker镜像可以很好地代码回退和迭代更新，实现了版本在生产环境更好的控制。</p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>之前的前端构建部署，是通过scp传输dist的全部文件到指定目录实现部署，这次我们将学习利用Jenkins构建docker前端镜像并上传到制品库实现部署。</p>","more":"<h2 id=\"正式开始\"><a href=\"#正式开始\" class=\"headerlink\" title=\"正式开始\"></a>正式开始</h2><h3 id=\"Jenkins登录\"><a href=\"#Jenkins登录\" class=\"headerlink\" title=\"Jenkins登录\"></a>Jenkins登录</h3><p>想使用 Jenkins 推送镜像到制品库，必须先登录制品库。进入 Jenkins 容器，使用 docker login 登录，然后退出即可</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -it jenkins /bin/bash<br>docker login 192.168.182.4:8082<br><span class=\"hljs-built_in\">exit</span>;<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F83a17ab7-07da-49d4-8db1-0600b409489c%2FUntitled.png?table=block&id=79151228-403c-4fb0-a7ea-b7f8acfb7bc8&width=2180&cache=v2\" alt=\"\"></p><p>登录一次之后后续就无需登录。</p><p><strong>注意：登录不上可以多尝试几次</strong></p><h3 id=\"Nginx登录制品库\"><a href=\"#Nginx登录制品库\" class=\"headerlink\" title=\"Nginx登录制品库\"></a>Nginx登录制品库</h3><p>Jenkins构建并且push，Nginx就会触发拉取，因此这边也需要登录。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">vi /etc/docker/daemon.json<br>sudo systemctl daemon-reload<br>sudo systemctl restart docker<br><span class=\"hljs-comment\"># 登录</span><br>docker login 192.168.182.4:8082<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4063b340-ed25-459e-8bf2-f9e1016c2202%2FUntitled.png?table=block&id=8a51b6c8-fe13-49b8-b43e-21ba19e3fc7c&width=2320&cache=v2\" alt=\"\"><br>登录一次之后后续就无需登录。</p><h3 id=\"DockerFile\"><a href=\"#DockerFile\" class=\"headerlink\" title=\"DockerFile\"></a>DockerFile</h3><p>前端通过Jenkins构建docker镜像，因此需要添加DockerFile文件。</p><p>DockerFile 是一个镜像制作过程的步骤描述，新增文件添加一下代码</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">FROM nginx:1.15-alpine<br>COPY dist /usr/share/nginx/html<br>WORKDIR /usr/share/nginx/html<br></code></pre></td></tr></table></figure><ul><li>拉取一个 nginx 1.15-alpine 版本的镜像。</li><li>将当前目录下的 dist 文件夹拷贝到镜像的 /usr/share/nginx/html 文件夹。</li><li>声明启动容器时，在 /usr/share/nginx/html 下面执行。</li></ul><h3 id=\"jenkins配置修改\"><a href=\"#jenkins配置修改\" class=\"headerlink\" title=\"jenkins配置修改\"></a>jenkins配置修改</h3><p>修改配置<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd91c5a34-2c73-452e-9405-0784459f1a97%2FUntitled.png?table=block&id=f919b321-75e2-4f03-86ef-282c7b0322be&width=2980&cache=v2\" alt=\"\"><br>添加以下代码</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">set</span> -e<br>timestamp=`date <span class=\"hljs-string\">'+%Y%m%d%H%M%S'</span>`<br><br>node -v<br>npm -v<br><br>npm install -g cnpm --registry=https://registry.npm.taobao.org<br><br>cnpm install<br><br>npm run build<br><br><span class=\"hljs-comment\"># 编译docker镜像</span><br>docker build -t 192.168.182.4:8082/fe/nginx-fe-<span class=\"hljs-variable\">$timestamp</span> .<br><br><span class=\"hljs-comment\"># 推送docker镜像到制品库</span><br>docker push 192.168.182.4:8082/fe/nginx-fe-<span class=\"hljs-variable\">$timestamp</span><br><br><span class=\"hljs-comment\"># 远程执行命令部署镜像</span><br>ssh -o StrictHostKeyChecking=no root@192.168.182.4 <span class=\"hljs-string\">\"docker pull 192.168.182.4:8082/fe/nginx-fe-<span class=\"hljs-variable\">$timestamp</span> &amp;&amp; \\</span><br><span class=\"hljs-string\">docker stop nginx-test &amp;&amp; \\</span><br><span class=\"hljs-string\">docker rm nginx-test &amp;&amp; \\</span><br><span class=\"hljs-string\">docker run -p 80:80 -itd \\</span><br><span class=\"hljs-string\">--name nginx-test \\</span><br><span class=\"hljs-string\">--restart always \\</span><br><span class=\"hljs-string\">192.168.182.4:8082/fe/nginx-fe-<span class=\"hljs-variable\">$timestamp</span>\"</span><br></code></pre></td></tr></table></figure><p>流程分析</p><ul><li>Jenkins在命令中用 $-变量名 进行使用。 timestamp=date ‘+%Y%m%d%H%M%S’，唯一的docker命名</li><li>依据DockerFile打包镜像并且推送</li><li>Nginx拉取刚推送的docker镜像，停止正在运行的container，删除之后并且运行当前的镜像。</li></ul><p><strong>上述代码中相关注意事项</strong></p><ul><li>制品库的地址：172.16.81.150:8082</li><li>nginx的地址：192.168.182.4</li><li>nginx的name：nginx-test<img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb6123ba0-bccf-4073-8c0f-09c1f3d28a5d%2FUntitled.png?table=block&id=51ff3f40-2167-4109-9abc-ba698c6c83c1&width=2900&cache=v2\" alt=\"\"></li></ul><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>和之前的构建部署方式中，利用docker镜像可以很好地代码回退和迭代更新，实现了版本在生产环境更好的控制。</p><!-- rebuild by neat -->"},{"title":"Hello World","abbrlink":"4a17b156","date":"2020-03-20T16:00:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<!-- more -->\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\nabbrlink: 4a17b156\ndate: 2020-03-21 00:00:00\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<!-- more -->\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2020-07-26T15:45:00.642Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnc6000tvwtf3hvx84ln","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p><h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">\"My New Post\"</span><br></code></pre></td></tr></table></figure><a id=\"more\"></a><p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p><h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p><h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p><h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p><h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">\"My New Post\"</span><br></code></pre></td></tr></table></figure>","more":"<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p><h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p><h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p><h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p><!-- rebuild by neat -->"},{"title":"CICD实战之Jenkins + Gitlab 实现前端构建","abbrlink":"d26a2f6b","date":"2020-08-01T08:20:01.000Z","_content":"\n## 目的\n\nJenkins + Gitlab 实现前端构建\n\n## 正式开始\n\n### Jenkins 安装 NodeJS\n\n因为在 Jenkins 构建的时候我们需要去执行一些 shell，需要用到 NodeJS，因此我们先安装 NodeJS。\n\n在这里我们采用插件方式安装。\n\n#### 在 Jenkins 插件管理中心搜索 NodeJS\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F41bf80e2-a541-4f6c-bb7e-5cf428d7f161%2Fia_100000906.png?table=block&id=3e793e58-d9cb-4194-b17e-d86af1b5c7a7&width=3730&cache=v2)\n\n<!-- more -->\n\n我这里已经安装了\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F58a8df69-1da1-4540-98f4-ea05b03845b6%2Fia_100000907.png?table=block&id=6aec3c26-2d2d-401b-bca9-d305ddd5161f&width=2190&cache=v2)没有安装的话应给在可选插件的 Tab,勾选之后选择直接安装即可。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F76ee67ce-4242-4a68-af63-780e5e117610%2Fia_100000908.png?table=block&id=8600f9b1-dc0a-46d0-b2be-17c85edfbc29&width=1610&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7896fd0c-c1d8-4aac-9785-b3b0cf821213%2Fia_100000909.png?table=block&id=03f34cda-1043-4b11-a8b0-13504a098e32&width=1190&cache=v2)\n\n#### 全局配置\n\n在系统设置--系统工具设置可以为全局配置 NodeJS。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F9e0c63c1-2abe-4f0b-ba75-1677c65198cd%2Fia_100000910.png?table=block&id=6dcf576c-9bb0-4d75-983a-64d2078784ee&width=2800&cache=v2)\n选择好对应的版本之后保存即可。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F67a338f4-64c1-4c95-93be-2c123c9f5cc3%2Fia_100000911.png?table=block&id=95543260-6148-4586-b631-e26ef82ae783&width=3730&cache=v2)\n\n#### 使用\n\n我们只需要在任务的“配置”中，找到“构建环境”，选中 “Provide Node & npm bin/ folder to PATH” ，选择刚才配置好的 NodeJS 即可。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe7f7e912-5ca1-4830-9195-e4c758ddb6ed%2Fia_100000912.png?table=block&id=8f19b130-83c7-45b4-bfda-b9b1544b4ddb&width=2400&cache=v2)\n\n第一次执行会下载对应的 Node 版本，后续不会下载。\n\n### 开始集成\n\n因为集成构建的时候我们需要 Jenkins 去 Gitlab 拉去代码，因此我们需要用 ssh 的方式去鉴权。\n\n#### 生成公钥私钥\n\nJenkins 拉取，因此要在 Jenkins 上生成，并且将公钥传输到 Gitlab，这样就可以实现鉴权的作用。\n\n```bash\ndocker exec -it jenkins /bin/bash\nssh-keygen -t rsa\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F69a734b8-9a22-48af-b674-9b4a8b6cf39f%2Fia_100000913.png?table=block&id=a316bf67-8eaf-483a-bb60-fc1accffce12&width=1310&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fad17baba-201b-4a92-b8d9-32e666476b7d%2Fia_100000914.png?table=block&id=faa41e1e-027a-459c-997f-d48aa89006fb&width=700&cache=v2)\n\n#### Gitlab 配公钥\n\n将公钥存入即可\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2b8cc9c4-8250-485c-b596-9db711765b9c%2Fia_100000915.png?table=block&id=08d1e4fc-6cd8-4f08-b8ac-f2b28248cacc&width=3220&cache=v2)\n\n#### Jenkins配私钥\n在系统管理，管理凭证。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8fe0b5a9-3165-44e7-a59f-b79f155120bb%2Fia_100000916.png?table=block&id=d5cc39d2-6a28-46fb-9f59-6d77ea3a7b97&width=2390&cache=v2)\n在全局添加凭证\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4fe90455-9b05-42d7-80aa-370e4f0d39d9%2Fia_100000917.png?table=block&id=d4b08e58-f6d2-4c95-913c-3479e1a4b052&width=1280&cache=v2)\n类型为 “SSH Username with private key.”，ID为此凭据在Jenkins的标识符，UserName 为你的Gitlab用户名，PrivateKey 为你的服务器私钥。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F09652292-4696-4fb8-8441-119f7a364841%2Fia_100000918.png?table=block&id=618838cb-268b-457c-9c8d-8862cced0584&width=3730&cache=v2)\n\n**配置完之后最好还是重启一下jenkins和gitlab**\n\n至此，Jenkins配置完毕。\n\n### 小试牛刀，构建一下\n\n#### 新建任务\n选择：构建一个自由风格的软件项目，我这里用的ssh-way\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff17263e9-6515-4e00-9032-ec5576496184%2Fia_100000919.png?table=block&id=5b2bfffe-b832-4c84-85a8-7d3d7c5bae36&width=2020&cache=v2)\n\n#### 配置任务\n我这里是临时用的一个Vue-Cli搭建的项目演示。\n\n进入任务配置，在任源码管理这里选择Git\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe3d0c393-4ad4-40a9-b69c-8fe20541b067%2Fia_100000920.png?table=block&id=fb153d8c-bcf0-4aa6-b8c1-7189aff86da0&width=3300&cache=v2)\n注意      \n  > 仓库地址为gitlat的ssh方式 ![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F340ed02a-d75d-4372-b31c-d66f250ae0fa%2Fia_100000921.png?table=block&id=1091d027-601e-459f-9e1a-e4fc290dca30&width=2000&cache=v2)\n  \n  >直接复制的地址有两个端口号，要改为ssh的333端口。[端口为333是在之前配置的这个端口号。](https://kitety.github.io/posts/aa4ef8c5.html#%E4%BF%AE%E6%94%B9SSH%E7%AB%AF%E5%8F%A3)\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fddf150fb-2c22-42ea-87d2-a7fcf03e4057%2Fia_100000922.png?table=block&id=12dddf53-403c-4fbf-a7f0-84d86b6f10ed&width=1970&cache=v2)\n\n选择对应的NodeJS版本\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc00a9900-3049-4822-a4c9-ec239a51ba07%2Fia_100000923.png?table=block&id=50034b6a-bec7-4af1-a344-b4fe5c919b65&width=2890&cache=v2)\n\n构建选择--执行Shell\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fdd8dedc7-7535-4eff-b1dc-1a5c17719a8a%2Fia_100000924.png?table=block&id=499d549c-416a-412f-8c3c-f3ef81a630fb&width=680&cache=v2)\n填写基本的shell\n```bash\nnode -v\nnpm -v\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\ncnpm install\nnpm run build\n```\n保存再立即构建一波。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb49b7cb5-9eb8-42dc-9bb7-5d79f2396b0f%2Fia_100000925.png?table=block&id=34a26641-8dff-406f-9d09-8486dc0f59de&width=2210&cache=v2)\n\n看到 Finished: SUCCESS，完美。\n### 同步到Nginx环境\n当我们构建成功之后，我们只需要把Jenkins的dist目录下面的资源全部拷贝到服务器Nginx上面就可以实现更新了。而且没有不会变更配置文件，也不用重启Nginx。\n#### 创建文件夹\n为了避免我们后续找不到文件夹，我们就先创建秘钥顺便创建文件夹。\n```bash\n// nginx机器\nssh-keygen -t rsa\n```\n\n\n#### 配置鉴权文件\n因为我们已经在Jenkins生成过私钥公钥了，我们只需要将这边的文件复制到Nginx的`/root/.ssh/authorized_keys`就好了。\n```bash\nscp -p /root/.ssh/id_rsa.pub root@192.168.182.4:/root/.ssh/authorized_keys****\n```\n第一次需要输入密码，后续都不需要了。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fdf684276-d175-4433-aeb1-f587946b077d%2Fia_100000926.png?table=block&id=6295f092-f815-4ecf-b6d6-088b0dc8eb59&width=1530&cache=v2)\n\n#### 发布到Nginx\n原理很简单，将build生成的dist的全部文件全部都拷贝到nginx的html的目录下。（Nginx资源路径具体要看配置）\n\n在之前的shell命令中加入以下命令。\n```bash\nscp -o \"StrictHostKeyChecking no\" -r dist/* root@192.168.182.4:/home/nginx/html\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F78ff2b9b-477b-476e-9993-568c299b27cd%2Fia_100000927.png?table=block&id=15c36a83-8fb6-41b2-a2c2-480cfa2adc2b&width=2830&cache=v2)\n#### 修改测试\n修改了，提交了，我们构建一下。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F60a8be4f-bda0-4f9a-ac36-1c7e1476e51b%2Fia_100000928.png?table=block&id=73d5273e-dd98-4f2c-86ae-31e6c0dd9bb5&width=1100&cache=v2)\n构建成功\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcff8c640-bae1-464a-83df-292dde47cf3f%2Fia_100000929.png?table=block&id=9888ce9c-d375-4920-928c-2f50a064a6b9&width=1950&cache=v2)\n完美\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2f3dd12f-53c1-4dcf-a5d7-4f5aaf96cbae%2Fia_100000930.png?table=block&id=5664d3f5-f1d9-4c46-ad8b-d2231ad29010&width=1350&cache=v2)\n\n## 结语\n至此，我们已经完整搭建了Jenkins + Gitlab 实现前端构建，搭了这么久的环境终于开始实战了。撒花！\n","source":"_posts/cicd5.md","raw":"---\ntitle: CICD实战之Jenkins + Gitlab 实现前端构建\ntags:\n  - CICD\nabbrlink: d26a2f6b\ndate: 2020-08-01 16:20:01\n---\n\n## 目的\n\nJenkins + Gitlab 实现前端构建\n\n## 正式开始\n\n### Jenkins 安装 NodeJS\n\n因为在 Jenkins 构建的时候我们需要去执行一些 shell，需要用到 NodeJS，因此我们先安装 NodeJS。\n\n在这里我们采用插件方式安装。\n\n#### 在 Jenkins 插件管理中心搜索 NodeJS\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F41bf80e2-a541-4f6c-bb7e-5cf428d7f161%2Fia_100000906.png?table=block&id=3e793e58-d9cb-4194-b17e-d86af1b5c7a7&width=3730&cache=v2)\n\n<!-- more -->\n\n我这里已经安装了\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F58a8df69-1da1-4540-98f4-ea05b03845b6%2Fia_100000907.png?table=block&id=6aec3c26-2d2d-401b-bca9-d305ddd5161f&width=2190&cache=v2)没有安装的话应给在可选插件的 Tab,勾选之后选择直接安装即可。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F76ee67ce-4242-4a68-af63-780e5e117610%2Fia_100000908.png?table=block&id=8600f9b1-dc0a-46d0-b2be-17c85edfbc29&width=1610&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7896fd0c-c1d8-4aac-9785-b3b0cf821213%2Fia_100000909.png?table=block&id=03f34cda-1043-4b11-a8b0-13504a098e32&width=1190&cache=v2)\n\n#### 全局配置\n\n在系统设置--系统工具设置可以为全局配置 NodeJS。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F9e0c63c1-2abe-4f0b-ba75-1677c65198cd%2Fia_100000910.png?table=block&id=6dcf576c-9bb0-4d75-983a-64d2078784ee&width=2800&cache=v2)\n选择好对应的版本之后保存即可。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F67a338f4-64c1-4c95-93be-2c123c9f5cc3%2Fia_100000911.png?table=block&id=95543260-6148-4586-b631-e26ef82ae783&width=3730&cache=v2)\n\n#### 使用\n\n我们只需要在任务的“配置”中，找到“构建环境”，选中 “Provide Node & npm bin/ folder to PATH” ，选择刚才配置好的 NodeJS 即可。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe7f7e912-5ca1-4830-9195-e4c758ddb6ed%2Fia_100000912.png?table=block&id=8f19b130-83c7-45b4-bfda-b9b1544b4ddb&width=2400&cache=v2)\n\n第一次执行会下载对应的 Node 版本，后续不会下载。\n\n### 开始集成\n\n因为集成构建的时候我们需要 Jenkins 去 Gitlab 拉去代码，因此我们需要用 ssh 的方式去鉴权。\n\n#### 生成公钥私钥\n\nJenkins 拉取，因此要在 Jenkins 上生成，并且将公钥传输到 Gitlab，这样就可以实现鉴权的作用。\n\n```bash\ndocker exec -it jenkins /bin/bash\nssh-keygen -t rsa\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F69a734b8-9a22-48af-b674-9b4a8b6cf39f%2Fia_100000913.png?table=block&id=a316bf67-8eaf-483a-bb60-fc1accffce12&width=1310&cache=v2)\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fad17baba-201b-4a92-b8d9-32e666476b7d%2Fia_100000914.png?table=block&id=faa41e1e-027a-459c-997f-d48aa89006fb&width=700&cache=v2)\n\n#### Gitlab 配公钥\n\n将公钥存入即可\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2b8cc9c4-8250-485c-b596-9db711765b9c%2Fia_100000915.png?table=block&id=08d1e4fc-6cd8-4f08-b8ac-f2b28248cacc&width=3220&cache=v2)\n\n#### Jenkins配私钥\n在系统管理，管理凭证。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8fe0b5a9-3165-44e7-a59f-b79f155120bb%2Fia_100000916.png?table=block&id=d5cc39d2-6a28-46fb-9f59-6d77ea3a7b97&width=2390&cache=v2)\n在全局添加凭证\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4fe90455-9b05-42d7-80aa-370e4f0d39d9%2Fia_100000917.png?table=block&id=d4b08e58-f6d2-4c95-913c-3479e1a4b052&width=1280&cache=v2)\n类型为 “SSH Username with private key.”，ID为此凭据在Jenkins的标识符，UserName 为你的Gitlab用户名，PrivateKey 为你的服务器私钥。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F09652292-4696-4fb8-8441-119f7a364841%2Fia_100000918.png?table=block&id=618838cb-268b-457c-9c8d-8862cced0584&width=3730&cache=v2)\n\n**配置完之后最好还是重启一下jenkins和gitlab**\n\n至此，Jenkins配置完毕。\n\n### 小试牛刀，构建一下\n\n#### 新建任务\n选择：构建一个自由风格的软件项目，我这里用的ssh-way\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff17263e9-6515-4e00-9032-ec5576496184%2Fia_100000919.png?table=block&id=5b2bfffe-b832-4c84-85a8-7d3d7c5bae36&width=2020&cache=v2)\n\n#### 配置任务\n我这里是临时用的一个Vue-Cli搭建的项目演示。\n\n进入任务配置，在任源码管理这里选择Git\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe3d0c393-4ad4-40a9-b69c-8fe20541b067%2Fia_100000920.png?table=block&id=fb153d8c-bcf0-4aa6-b8c1-7189aff86da0&width=3300&cache=v2)\n注意      \n  > 仓库地址为gitlat的ssh方式 ![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F340ed02a-d75d-4372-b31c-d66f250ae0fa%2Fia_100000921.png?table=block&id=1091d027-601e-459f-9e1a-e4fc290dca30&width=2000&cache=v2)\n  \n  >直接复制的地址有两个端口号，要改为ssh的333端口。[端口为333是在之前配置的这个端口号。](https://kitety.github.io/posts/aa4ef8c5.html#%E4%BF%AE%E6%94%B9SSH%E7%AB%AF%E5%8F%A3)\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fddf150fb-2c22-42ea-87d2-a7fcf03e4057%2Fia_100000922.png?table=block&id=12dddf53-403c-4fbf-a7f0-84d86b6f10ed&width=1970&cache=v2)\n\n选择对应的NodeJS版本\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc00a9900-3049-4822-a4c9-ec239a51ba07%2Fia_100000923.png?table=block&id=50034b6a-bec7-4af1-a344-b4fe5c919b65&width=2890&cache=v2)\n\n构建选择--执行Shell\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fdd8dedc7-7535-4eff-b1dc-1a5c17719a8a%2Fia_100000924.png?table=block&id=499d549c-416a-412f-8c3c-f3ef81a630fb&width=680&cache=v2)\n填写基本的shell\n```bash\nnode -v\nnpm -v\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\ncnpm install\nnpm run build\n```\n保存再立即构建一波。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb49b7cb5-9eb8-42dc-9bb7-5d79f2396b0f%2Fia_100000925.png?table=block&id=34a26641-8dff-406f-9d09-8486dc0f59de&width=2210&cache=v2)\n\n看到 Finished: SUCCESS，完美。\n### 同步到Nginx环境\n当我们构建成功之后，我们只需要把Jenkins的dist目录下面的资源全部拷贝到服务器Nginx上面就可以实现更新了。而且没有不会变更配置文件，也不用重启Nginx。\n#### 创建文件夹\n为了避免我们后续找不到文件夹，我们就先创建秘钥顺便创建文件夹。\n```bash\n// nginx机器\nssh-keygen -t rsa\n```\n\n\n#### 配置鉴权文件\n因为我们已经在Jenkins生成过私钥公钥了，我们只需要将这边的文件复制到Nginx的`/root/.ssh/authorized_keys`就好了。\n```bash\nscp -p /root/.ssh/id_rsa.pub root@192.168.182.4:/root/.ssh/authorized_keys****\n```\n第一次需要输入密码，后续都不需要了。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fdf684276-d175-4433-aeb1-f587946b077d%2Fia_100000926.png?table=block&id=6295f092-f815-4ecf-b6d6-088b0dc8eb59&width=1530&cache=v2)\n\n#### 发布到Nginx\n原理很简单，将build生成的dist的全部文件全部都拷贝到nginx的html的目录下。（Nginx资源路径具体要看配置）\n\n在之前的shell命令中加入以下命令。\n```bash\nscp -o \"StrictHostKeyChecking no\" -r dist/* root@192.168.182.4:/home/nginx/html\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F78ff2b9b-477b-476e-9993-568c299b27cd%2Fia_100000927.png?table=block&id=15c36a83-8fb6-41b2-a2c2-480cfa2adc2b&width=2830&cache=v2)\n#### 修改测试\n修改了，提交了，我们构建一下。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F60a8be4f-bda0-4f9a-ac36-1c7e1476e51b%2Fia_100000928.png?table=block&id=73d5273e-dd98-4f2c-86ae-31e6c0dd9bb5&width=1100&cache=v2)\n构建成功\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcff8c640-bae1-464a-83df-292dde47cf3f%2Fia_100000929.png?table=block&id=9888ce9c-d375-4920-928c-2f50a064a6b9&width=1950&cache=v2)\n完美\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2f3dd12f-53c1-4dcf-a5d7-4f5aaf96cbae%2Fia_100000930.png?table=block&id=5664d3f5-f1d9-4c46-ad8b-d2231ad29010&width=1350&cache=v2)\n\n## 结语\n至此，我们已经完整搭建了Jenkins + Gitlab 实现前端构建，搭了这么久的环境终于开始实战了。撒花！\n","slug":"cicd5","published":1,"updated":"2020-08-08T16:08:46.503Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnc9000vvwtfg1wbgpec","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>Jenkins + Gitlab 实现前端构建</p><h2 id=\"正式开始\"><a href=\"#正式开始\" class=\"headerlink\" title=\"正式开始\"></a>正式开始</h2><h3 id=\"Jenkins-安装-NodeJS\"><a href=\"#Jenkins-安装-NodeJS\" class=\"headerlink\" title=\"Jenkins 安装 NodeJS\"></a>Jenkins 安装 NodeJS</h3><p>因为在 Jenkins 构建的时候我们需要去执行一些 shell，需要用到 NodeJS，因此我们先安装 NodeJS。</p><p>在这里我们采用插件方式安装。</p><h4 id=\"在-Jenkins-插件管理中心搜索-NodeJS\"><a href=\"#在-Jenkins-插件管理中心搜索-NodeJS\" class=\"headerlink\" title=\"在 Jenkins 插件管理中心搜索 NodeJS\"></a>在 Jenkins 插件管理中心搜索 NodeJS</h4><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F41bf80e2-a541-4f6c-bb7e-5cf428d7f161%2Fia_100000906.png?table=block&id=3e793e58-d9cb-4194-b17e-d86af1b5c7a7&width=3730&cache=v2\" alt=\"\"></p><a id=\"more\"></a><p>我这里已经安装了<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F58a8df69-1da1-4540-98f4-ea05b03845b6%2Fia_100000907.png?table=block&id=6aec3c26-2d2d-401b-bca9-d305ddd5161f&width=2190&cache=v2\" alt=\"\">没有安装的话应给在可选插件的 Tab,勾选之后选择直接安装即可。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F76ee67ce-4242-4a68-af63-780e5e117610%2Fia_100000908.png?table=block&id=8600f9b1-dc0a-46d0-b2be-17c85edfbc29&width=1610&cache=v2\" alt=\"\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7896fd0c-c1d8-4aac-9785-b3b0cf821213%2Fia_100000909.png?table=block&id=03f34cda-1043-4b11-a8b0-13504a098e32&width=1190&cache=v2\" alt=\"\"></p><h4 id=\"全局配置\"><a href=\"#全局配置\" class=\"headerlink\" title=\"全局配置\"></a>全局配置</h4><p>在系统设置–系统工具设置可以为全局配置 NodeJS。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F9e0c63c1-2abe-4f0b-ba75-1677c65198cd%2Fia_100000910.png?table=block&id=6dcf576c-9bb0-4d75-983a-64d2078784ee&width=2800&cache=v2\" alt=\"\"><br>选择好对应的版本之后保存即可。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F67a338f4-64c1-4c95-93be-2c123c9f5cc3%2Fia_100000911.png?table=block&id=95543260-6148-4586-b631-e26ef82ae783&width=3730&cache=v2\" alt=\"\"></p><h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><p>我们只需要在任务的“配置”中，找到“构建环境”，选中 “Provide Node &amp; npm bin/ folder to PATH” ，选择刚才配置好的 NodeJS 即可。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe7f7e912-5ca1-4830-9195-e4c758ddb6ed%2Fia_100000912.png?table=block&id=8f19b130-83c7-45b4-bfda-b9b1544b4ddb&width=2400&cache=v2\" alt=\"\"></p><p>第一次执行会下载对应的 Node 版本，后续不会下载。</p><h3 id=\"开始集成\"><a href=\"#开始集成\" class=\"headerlink\" title=\"开始集成\"></a>开始集成</h3><p>因为集成构建的时候我们需要 Jenkins 去 Gitlab 拉去代码，因此我们需要用 ssh 的方式去鉴权。</p><h4 id=\"生成公钥私钥\"><a href=\"#生成公钥私钥\" class=\"headerlink\" title=\"生成公钥私钥\"></a>生成公钥私钥</h4><p>Jenkins 拉取，因此要在 Jenkins 上生成，并且将公钥传输到 Gitlab，这样就可以实现鉴权的作用。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -it jenkins /bin/bash<br>ssh-keygen -t rsa<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F69a734b8-9a22-48af-b674-9b4a8b6cf39f%2Fia_100000913.png?table=block&id=a316bf67-8eaf-483a-bb60-fc1accffce12&width=1310&cache=v2\" alt=\"\"></p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fad17baba-201b-4a92-b8d9-32e666476b7d%2Fia_100000914.png?table=block&id=faa41e1e-027a-459c-997f-d48aa89006fb&width=700&cache=v2\" alt=\"\"></p><h4 id=\"Gitlab-配公钥\"><a href=\"#Gitlab-配公钥\" class=\"headerlink\" title=\"Gitlab 配公钥\"></a>Gitlab 配公钥</h4><p>将公钥存入即可<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2b8cc9c4-8250-485c-b596-9db711765b9c%2Fia_100000915.png?table=block&id=08d1e4fc-6cd8-4f08-b8ac-f2b28248cacc&width=3220&cache=v2\" alt=\"\"></p><h4 id=\"Jenkins配私钥\"><a href=\"#Jenkins配私钥\" class=\"headerlink\" title=\"Jenkins配私钥\"></a>Jenkins配私钥</h4><p>在系统管理，管理凭证。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8fe0b5a9-3165-44e7-a59f-b79f155120bb%2Fia_100000916.png?table=block&id=d5cc39d2-6a28-46fb-9f59-6d77ea3a7b97&width=2390&cache=v2\" alt=\"\"><br>在全局添加凭证<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4fe90455-9b05-42d7-80aa-370e4f0d39d9%2Fia_100000917.png?table=block&id=d4b08e58-f6d2-4c95-913c-3479e1a4b052&width=1280&cache=v2\" alt=\"\"><br>类型为 “SSH Username with private key.”，ID为此凭据在Jenkins的标识符，UserName 为你的Gitlab用户名，PrivateKey 为你的服务器私钥。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F09652292-4696-4fb8-8441-119f7a364841%2Fia_100000918.png?table=block&id=618838cb-268b-457c-9c8d-8862cced0584&width=3730&cache=v2\" alt=\"\"></p><p><strong>配置完之后最好还是重启一下jenkins和gitlab</strong></p><p>至此，Jenkins配置完毕。</p><h3 id=\"小试牛刀，构建一下\"><a href=\"#小试牛刀，构建一下\" class=\"headerlink\" title=\"小试牛刀，构建一下\"></a>小试牛刀，构建一下</h3><h4 id=\"新建任务\"><a href=\"#新建任务\" class=\"headerlink\" title=\"新建任务\"></a>新建任务</h4><p>选择：构建一个自由风格的软件项目，我这里用的ssh-way</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff17263e9-6515-4e00-9032-ec5576496184%2Fia_100000919.png?table=block&id=5b2bfffe-b832-4c84-85a8-7d3d7c5bae36&width=2020&cache=v2\" alt=\"\"></p><h4 id=\"配置任务\"><a href=\"#配置任务\" class=\"headerlink\" title=\"配置任务\"></a>配置任务</h4><p>我这里是临时用的一个Vue-Cli搭建的项目演示。</p><p>进入任务配置，在任源码管理这里选择Git</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe3d0c393-4ad4-40a9-b69c-8fe20541b067%2Fia_100000920.png?table=block&id=fb153d8c-bcf0-4aa6-b8c1-7189aff86da0&width=3300&cache=v2\" alt=\"\"><br>注意</p><blockquote><p>仓库地址为gitlat的ssh方式 <img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F340ed02a-d75d-4372-b31c-d66f250ae0fa%2Fia_100000921.png?table=block&id=1091d027-601e-459f-9e1a-e4fc290dca30&width=2000&cache=v2\" alt=\"\"></p></blockquote><blockquote><p>直接复制的地址有两个端口号，要改为ssh的333端口。<a href=\"https://kitety.github.io/posts/aa4ef8c5.html#%E4%BF%AE%E6%94%B9SSH%E7%AB%AF%E5%8F%A3\">端口为333是在之前配置的这个端口号。</a><br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fddf150fb-2c22-42ea-87d2-a7fcf03e4057%2Fia_100000922.png?table=block&id=12dddf53-403c-4fbf-a7f0-84d86b6f10ed&width=1970&cache=v2\" alt=\"\"></p></blockquote><p>选择对应的NodeJS版本<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc00a9900-3049-4822-a4c9-ec239a51ba07%2Fia_100000923.png?table=block&id=50034b6a-bec7-4af1-a344-b4fe5c919b65&width=2890&cache=v2\" alt=\"\"></p><p>构建选择–执行Shell</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fdd8dedc7-7535-4eff-b1dc-1a5c17719a8a%2Fia_100000924.png?table=block&id=499d549c-416a-412f-8c3c-f3ef81a630fb&width=680&cache=v2\" alt=\"\"><br>填写基本的shell</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">node -v<br>npm -v<br>npm install -g cnpm --registry=https://registry.npm.taobao.org<br>cnpm install<br>npm run build<br></code></pre></td></tr></table></figure><p>保存再立即构建一波。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb49b7cb5-9eb8-42dc-9bb7-5d79f2396b0f%2Fia_100000925.png?table=block&id=34a26641-8dff-406f-9d09-8486dc0f59de&width=2210&cache=v2\" alt=\"\"></p><p>看到 Finished: SUCCESS，完美。</p><h3 id=\"同步到Nginx环境\"><a href=\"#同步到Nginx环境\" class=\"headerlink\" title=\"同步到Nginx环境\"></a>同步到Nginx环境</h3><p>当我们构建成功之后，我们只需要把Jenkins的dist目录下面的资源全部拷贝到服务器Nginx上面就可以实现更新了。而且没有不会变更配置文件，也不用重启Nginx。</p><h4 id=\"创建文件夹\"><a href=\"#创建文件夹\" class=\"headerlink\" title=\"创建文件夹\"></a>创建文件夹</h4><p>为了避免我们后续找不到文件夹，我们就先创建秘钥顺便创建文件夹。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">// nginx机器<br>ssh-keygen -t rsa<br></code></pre></td></tr></table></figure><h4 id=\"配置鉴权文件\"><a href=\"#配置鉴权文件\" class=\"headerlink\" title=\"配置鉴权文件\"></a>配置鉴权文件</h4><p>因为我们已经在Jenkins生成过私钥公钥了，我们只需要将这边的文件复制到Nginx的<code>/root/.ssh/authorized_keys</code>就好了。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">scp -p /root/.ssh/id_rsa.pub root@192.168.182.4:/root/.ssh/authorized_keys****<br></code></pre></td></tr></table></figure><p>第一次需要输入密码，后续都不需要了。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fdf684276-d175-4433-aeb1-f587946b077d%2Fia_100000926.png?table=block&id=6295f092-f815-4ecf-b6d6-088b0dc8eb59&width=1530&cache=v2\" alt=\"\"></p><h4 id=\"发布到Nginx\"><a href=\"#发布到Nginx\" class=\"headerlink\" title=\"发布到Nginx\"></a>发布到Nginx</h4><p>原理很简单，将build生成的dist的全部文件全部都拷贝到nginx的html的目录下。（Nginx资源路径具体要看配置）</p><p>在之前的shell命令中加入以下命令。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">scp -o <span class=\"hljs-string\">\"StrictHostKeyChecking no\"</span> -r dist/* root@192.168.182.4:/home/nginx/html<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F78ff2b9b-477b-476e-9993-568c299b27cd%2Fia_100000927.png?table=block&id=15c36a83-8fb6-41b2-a2c2-480cfa2adc2b&width=2830&cache=v2\" alt=\"\"></p><h4 id=\"修改测试\"><a href=\"#修改测试\" class=\"headerlink\" title=\"修改测试\"></a>修改测试</h4><p>修改了，提交了，我们构建一下。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F60a8be4f-bda0-4f9a-ac36-1c7e1476e51b%2Fia_100000928.png?table=block&id=73d5273e-dd98-4f2c-86ae-31e6c0dd9bb5&width=1100&cache=v2\" alt=\"\"><br>构建成功<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcff8c640-bae1-464a-83df-292dde47cf3f%2Fia_100000929.png?table=block&id=9888ce9c-d375-4920-928c-2f50a064a6b9&width=1950&cache=v2\" alt=\"\"><br>完美</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2f3dd12f-53c1-4dcf-a5d7-4f5aaf96cbae%2Fia_100000930.png?table=block&id=5664d3f5-f1d9-4c46-ad8b-d2231ad29010&width=1350&cache=v2\" alt=\"\"></p><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>至此，我们已经完整搭建了Jenkins + Gitlab 实现前端构建，搭了这么久的环境终于开始实战了。撒花！</p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h2><p>Jenkins + Gitlab 实现前端构建</p><h2 id=\"正式开始\"><a href=\"#正式开始\" class=\"headerlink\" title=\"正式开始\"></a>正式开始</h2><h3 id=\"Jenkins-安装-NodeJS\"><a href=\"#Jenkins-安装-NodeJS\" class=\"headerlink\" title=\"Jenkins 安装 NodeJS\"></a>Jenkins 安装 NodeJS</h3><p>因为在 Jenkins 构建的时候我们需要去执行一些 shell，需要用到 NodeJS，因此我们先安装 NodeJS。</p><p>在这里我们采用插件方式安装。</p><h4 id=\"在-Jenkins-插件管理中心搜索-NodeJS\"><a href=\"#在-Jenkins-插件管理中心搜索-NodeJS\" class=\"headerlink\" title=\"在 Jenkins 插件管理中心搜索 NodeJS\"></a>在 Jenkins 插件管理中心搜索 NodeJS</h4><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F41bf80e2-a541-4f6c-bb7e-5cf428d7f161%2Fia_100000906.png?table=block&id=3e793e58-d9cb-4194-b17e-d86af1b5c7a7&width=3730&cache=v2\" alt=\"\"></p>","more":"<p>我这里已经安装了<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F58a8df69-1da1-4540-98f4-ea05b03845b6%2Fia_100000907.png?table=block&id=6aec3c26-2d2d-401b-bca9-d305ddd5161f&width=2190&cache=v2\" alt=\"\">没有安装的话应给在可选插件的 Tab,勾选之后选择直接安装即可。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F76ee67ce-4242-4a68-af63-780e5e117610%2Fia_100000908.png?table=block&id=8600f9b1-dc0a-46d0-b2be-17c85edfbc29&width=1610&cache=v2\" alt=\"\"></p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7896fd0c-c1d8-4aac-9785-b3b0cf821213%2Fia_100000909.png?table=block&id=03f34cda-1043-4b11-a8b0-13504a098e32&width=1190&cache=v2\" alt=\"\"></p><h4 id=\"全局配置\"><a href=\"#全局配置\" class=\"headerlink\" title=\"全局配置\"></a>全局配置</h4><p>在系统设置–系统工具设置可以为全局配置 NodeJS。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F9e0c63c1-2abe-4f0b-ba75-1677c65198cd%2Fia_100000910.png?table=block&id=6dcf576c-9bb0-4d75-983a-64d2078784ee&width=2800&cache=v2\" alt=\"\"><br>选择好对应的版本之后保存即可。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F67a338f4-64c1-4c95-93be-2c123c9f5cc3%2Fia_100000911.png?table=block&id=95543260-6148-4586-b631-e26ef82ae783&width=3730&cache=v2\" alt=\"\"></p><h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><p>我们只需要在任务的“配置”中，找到“构建环境”，选中 “Provide Node &amp; npm bin/ folder to PATH” ，选择刚才配置好的 NodeJS 即可。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe7f7e912-5ca1-4830-9195-e4c758ddb6ed%2Fia_100000912.png?table=block&id=8f19b130-83c7-45b4-bfda-b9b1544b4ddb&width=2400&cache=v2\" alt=\"\"></p><p>第一次执行会下载对应的 Node 版本，后续不会下载。</p><h3 id=\"开始集成\"><a href=\"#开始集成\" class=\"headerlink\" title=\"开始集成\"></a>开始集成</h3><p>因为集成构建的时候我们需要 Jenkins 去 Gitlab 拉去代码，因此我们需要用 ssh 的方式去鉴权。</p><h4 id=\"生成公钥私钥\"><a href=\"#生成公钥私钥\" class=\"headerlink\" title=\"生成公钥私钥\"></a>生成公钥私钥</h4><p>Jenkins 拉取，因此要在 Jenkins 上生成，并且将公钥传输到 Gitlab，这样就可以实现鉴权的作用。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -it jenkins /bin/bash<br>ssh-keygen -t rsa<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F69a734b8-9a22-48af-b674-9b4a8b6cf39f%2Fia_100000913.png?table=block&id=a316bf67-8eaf-483a-bb60-fc1accffce12&width=1310&cache=v2\" alt=\"\"></p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fad17baba-201b-4a92-b8d9-32e666476b7d%2Fia_100000914.png?table=block&id=faa41e1e-027a-459c-997f-d48aa89006fb&width=700&cache=v2\" alt=\"\"></p><h4 id=\"Gitlab-配公钥\"><a href=\"#Gitlab-配公钥\" class=\"headerlink\" title=\"Gitlab 配公钥\"></a>Gitlab 配公钥</h4><p>将公钥存入即可<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2b8cc9c4-8250-485c-b596-9db711765b9c%2Fia_100000915.png?table=block&id=08d1e4fc-6cd8-4f08-b8ac-f2b28248cacc&width=3220&cache=v2\" alt=\"\"></p><h4 id=\"Jenkins配私钥\"><a href=\"#Jenkins配私钥\" class=\"headerlink\" title=\"Jenkins配私钥\"></a>Jenkins配私钥</h4><p>在系统管理，管理凭证。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8fe0b5a9-3165-44e7-a59f-b79f155120bb%2Fia_100000916.png?table=block&id=d5cc39d2-6a28-46fb-9f59-6d77ea3a7b97&width=2390&cache=v2\" alt=\"\"><br>在全局添加凭证<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4fe90455-9b05-42d7-80aa-370e4f0d39d9%2Fia_100000917.png?table=block&id=d4b08e58-f6d2-4c95-913c-3479e1a4b052&width=1280&cache=v2\" alt=\"\"><br>类型为 “SSH Username with private key.”，ID为此凭据在Jenkins的标识符，UserName 为你的Gitlab用户名，PrivateKey 为你的服务器私钥。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F09652292-4696-4fb8-8441-119f7a364841%2Fia_100000918.png?table=block&id=618838cb-268b-457c-9c8d-8862cced0584&width=3730&cache=v2\" alt=\"\"></p><p><strong>配置完之后最好还是重启一下jenkins和gitlab</strong></p><p>至此，Jenkins配置完毕。</p><h3 id=\"小试牛刀，构建一下\"><a href=\"#小试牛刀，构建一下\" class=\"headerlink\" title=\"小试牛刀，构建一下\"></a>小试牛刀，构建一下</h3><h4 id=\"新建任务\"><a href=\"#新建任务\" class=\"headerlink\" title=\"新建任务\"></a>新建任务</h4><p>选择：构建一个自由风格的软件项目，我这里用的ssh-way</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff17263e9-6515-4e00-9032-ec5576496184%2Fia_100000919.png?table=block&id=5b2bfffe-b832-4c84-85a8-7d3d7c5bae36&width=2020&cache=v2\" alt=\"\"></p><h4 id=\"配置任务\"><a href=\"#配置任务\" class=\"headerlink\" title=\"配置任务\"></a>配置任务</h4><p>我这里是临时用的一个Vue-Cli搭建的项目演示。</p><p>进入任务配置，在任源码管理这里选择Git</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fe3d0c393-4ad4-40a9-b69c-8fe20541b067%2Fia_100000920.png?table=block&id=fb153d8c-bcf0-4aa6-b8c1-7189aff86da0&width=3300&cache=v2\" alt=\"\"><br>注意</p><blockquote><p>仓库地址为gitlat的ssh方式 <img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F340ed02a-d75d-4372-b31c-d66f250ae0fa%2Fia_100000921.png?table=block&id=1091d027-601e-459f-9e1a-e4fc290dca30&width=2000&cache=v2\" alt=\"\"></p></blockquote><blockquote><p>直接复制的地址有两个端口号，要改为ssh的333端口。<a href=\"https://kitety.github.io/posts/aa4ef8c5.html#%E4%BF%AE%E6%94%B9SSH%E7%AB%AF%E5%8F%A3\">端口为333是在之前配置的这个端口号。</a><br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fddf150fb-2c22-42ea-87d2-a7fcf03e4057%2Fia_100000922.png?table=block&id=12dddf53-403c-4fbf-a7f0-84d86b6f10ed&width=1970&cache=v2\" alt=\"\"></p></blockquote><p>选择对应的NodeJS版本<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc00a9900-3049-4822-a4c9-ec239a51ba07%2Fia_100000923.png?table=block&id=50034b6a-bec7-4af1-a344-b4fe5c919b65&width=2890&cache=v2\" alt=\"\"></p><p>构建选择–执行Shell</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fdd8dedc7-7535-4eff-b1dc-1a5c17719a8a%2Fia_100000924.png?table=block&id=499d549c-416a-412f-8c3c-f3ef81a630fb&width=680&cache=v2\" alt=\"\"><br>填写基本的shell</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">node -v<br>npm -v<br>npm install -g cnpm --registry=https://registry.npm.taobao.org<br>cnpm install<br>npm run build<br></code></pre></td></tr></table></figure><p>保存再立即构建一波。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb49b7cb5-9eb8-42dc-9bb7-5d79f2396b0f%2Fia_100000925.png?table=block&id=34a26641-8dff-406f-9d09-8486dc0f59de&width=2210&cache=v2\" alt=\"\"></p><p>看到 Finished: SUCCESS，完美。</p><h3 id=\"同步到Nginx环境\"><a href=\"#同步到Nginx环境\" class=\"headerlink\" title=\"同步到Nginx环境\"></a>同步到Nginx环境</h3><p>当我们构建成功之后，我们只需要把Jenkins的dist目录下面的资源全部拷贝到服务器Nginx上面就可以实现更新了。而且没有不会变更配置文件，也不用重启Nginx。</p><h4 id=\"创建文件夹\"><a href=\"#创建文件夹\" class=\"headerlink\" title=\"创建文件夹\"></a>创建文件夹</h4><p>为了避免我们后续找不到文件夹，我们就先创建秘钥顺便创建文件夹。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">// nginx机器<br>ssh-keygen -t rsa<br></code></pre></td></tr></table></figure><h4 id=\"配置鉴权文件\"><a href=\"#配置鉴权文件\" class=\"headerlink\" title=\"配置鉴权文件\"></a>配置鉴权文件</h4><p>因为我们已经在Jenkins生成过私钥公钥了，我们只需要将这边的文件复制到Nginx的<code>/root/.ssh/authorized_keys</code>就好了。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">scp -p /root/.ssh/id_rsa.pub root@192.168.182.4:/root/.ssh/authorized_keys****<br></code></pre></td></tr></table></figure><p>第一次需要输入密码，后续都不需要了。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fdf684276-d175-4433-aeb1-f587946b077d%2Fia_100000926.png?table=block&id=6295f092-f815-4ecf-b6d6-088b0dc8eb59&width=1530&cache=v2\" alt=\"\"></p><h4 id=\"发布到Nginx\"><a href=\"#发布到Nginx\" class=\"headerlink\" title=\"发布到Nginx\"></a>发布到Nginx</h4><p>原理很简单，将build生成的dist的全部文件全部都拷贝到nginx的html的目录下。（Nginx资源路径具体要看配置）</p><p>在之前的shell命令中加入以下命令。</p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">scp -o <span class=\"hljs-string\">\"StrictHostKeyChecking no\"</span> -r dist/* root@192.168.182.4:/home/nginx/html<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F78ff2b9b-477b-476e-9993-568c299b27cd%2Fia_100000927.png?table=block&id=15c36a83-8fb6-41b2-a2c2-480cfa2adc2b&width=2830&cache=v2\" alt=\"\"></p><h4 id=\"修改测试\"><a href=\"#修改测试\" class=\"headerlink\" title=\"修改测试\"></a>修改测试</h4><p>修改了，提交了，我们构建一下。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F60a8be4f-bda0-4f9a-ac36-1c7e1476e51b%2Fia_100000928.png?table=block&id=73d5273e-dd98-4f2c-86ae-31e6c0dd9bb5&width=1100&cache=v2\" alt=\"\"><br>构建成功<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fcff8c640-bae1-464a-83df-292dde47cf3f%2Fia_100000929.png?table=block&id=9888ce9c-d375-4920-928c-2f50a064a6b9&width=1950&cache=v2\" alt=\"\"><br>完美</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2f3dd12f-53c1-4dcf-a5d7-4f5aaf96cbae%2Fia_100000930.png?table=block&id=5664d3f5-f1d9-4c46-ad8b-d2231ad29010&width=1350&cache=v2\" alt=\"\"></p><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>至此，我们已经完整搭建了Jenkins + Gitlab 实现前端构建，搭了这么久的环境终于开始实战了。撒花！</p><!-- rebuild by neat -->"},{"title":"HTTP协议原理笔记","abbrlink":"44c01e4f","date":"2020-05-25T13:41:08.000Z","_content":"\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa8f51621-7ddf-4ac8-b975-ea8f07bc2331%2Fia_10006.png?table=block&id=5a63c580-80a3-4f3e-aa95-53398a7bbc46&width=1540&cache=v2)\n\n## 导学\n### 现状\n- 现在的WEB开发不理解HTTP\n- HTTP相当的重要\n- 提升自身价值\n<!-- more -->\n#### 简单的例子\n- 输入URL打开网页\n\n- AJAX获取数据\n\n- img标签加载图片\n\n- Cache-control 的public属性和private属性，must-revalidate属性，no-cache，no-store\n\n- 缓存验证\n\n  - last-modified和if-modified-since配合验证\n  \n  - etag和if-modified-since配合验证\n  \n  - CORS跨域\n  - 浏览器输入URL后HTTP请求返回全过程（下图依据performance对象）\n  ![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4c6566de-178f-4401-8a07-c8de34ea322f%2Fia_10007.png?table=block&id=e4da05f6-677d-4ec3-8349-12a2aa94e826&width=2240&cache=v2)\n\n等等\n\n## 网络协议\n### 网络模型介绍\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb3095102-cfe2-4d75-8fab-6a9fdbdb8cfd%2Fia_10008.png?table=block&id=d6639703-8522-412b-90ed-b1af226469e5&width=1640&cache=v2)\n本文主要讲HTTP（应用层），HTTP基于TCP/IP协议\n#### 底三层\n- 物理层：定义物理设备如何传输数据\n\n  硬件、网卡端口、光缆\n- 数据链路层：通信的实体间建立数据链路连接\n\n  软件服务通过物理设备创建电路的连接\n- 网络层：为数据在节点之间传输创建逻辑链路\n\n  访问百度的寻址的逻辑关系\n\n#### 传输层\n- 向用户提供可靠的端到端（End-to-End）服务\n- 传输层向高层屏蔽了下层数据通信的细节\n\n  比如本地与百度服务器之间的连接，两端如何传输数据，传输数据的方式；根据数据的大小来分包、分片，接收端的组装，两者的协议的定义。\n  \n#### 应用层\nHTTP就在应用层实现\n- 为软件提供了很多服务\n- 构建与 TCP/IP协议只上\n- 屏蔽了网络传输的相关细节\n\n### HTTP协议发展历史\n\n#### HTTP 0.9\n- 只支持GET请求\n- 没有HEADER等描述数据的信息\n- 服务器发送完毕关闭TCP连接\n\n#### HTTP 1.0\n- 增加很多命令（POST,HEADER等）\n- 增加status code和header\n- 多字符集支持、多部分发送、权限、缓存等等\n\n#### HTTP 1.1\n- 持久连接\n\n  1.0版本一个请求创建一次TCP连接，服务端返回了TCP连接就关闭，成本较高；持久连接就不用关闭。\n  \n- pipeline\n\n  同一个链接发送多个请求，发送的请求在一个连接发送多个，服务端进来的请求需要串行排队\n  \n- 增加host和其他一些命令\n\n  有了host，就可以在同一台物理服务器上跑多个不同WEB服务\n\n#### HTTP 2\n\n\n- 所有的数据都是以二进制传输\n\n  之前的方式大部分是字符串，因此数据的分片方式是不同的，HTTP2中都是帧传输。\n- 同一个连接里面发送多个请求不再需要按照顺序\n  \n  并行极大提高了效率\n- 头信息压缩及推送等提高效率的功能\n  \n  HTTP2解决HTTP1中性能低下的问题而设计的。\n  \n  - 头信息压缩\n  \n  HTTP1中发送请求和返回请求很多的HTTP头都是必须要完整的发送和返回的，而这部分头信息比如header、content-type、cache-control这些字段是用**字符串**形式保存的，所以占用一定的**带宽**。而在HTTP2中就会对头信息压缩，减少带宽使用。\n  - 推送\n  \n  常规的客户端为主动方，服务端为被动方。但是在HTTP2有推送功能，服务端可以主动发起数据传输。常规的html网页是请求html，再请求其中的资源；HTTP2的话可以在你请求html的时候主动推送资源到客户端，达到并行的效果，提高传输效率。\n#### HTTP三次握手\n在客户端和服务器在进行HTTP的发送和返回过程中，会建立TCP connection。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb9c7a6ce-0c44-4f0c-b21b-81ed2efb2e23%2Fia_10009.png?table=block&id=93759276-d772-43df-950f-e91025150726&width=2370&cache=v2)\nHTTP不存在连接的概念，只存在请求和响应的概念。请求和响应都传输数据包，会经过一个传输的通道，在TCP就创建了这样一个连接（通道），这个连接会保持在那里，请求是在这个基础之上发送的。在TCP连接上可以发送多个HTTP请求。\n\n这个模式在不同的版本里面有所差别\n- HTTP1.0 TCP连接在HTTP请求创建的时候创建服务端想赢回来之后就会关闭\n- HTTP1.1 可以声明TCP连接保持状态，多个HTTP请求都通过这个连接。TCP连接创建的过程中有三次握手消耗，减少开销。\n- HTTP2.0 并发HTTP请求。比如：同个用户在请求一个网页的时候只用一个TCP连接。\n##### 三次握手时序图\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F806a70cf-4416-4888-826d-ce1ce4d075f0%2Fia_10010.png?table=block&id=c55f2578-17bb-4dcf-9c8e-2227f45329da&width=1880&cache=v2)\n1.客户端发起创建数据包的请求。SYN标志位：创建请求的数据包，Seq=X\n\n2.服务端接收，开启TCP SOCKET端口。返回给客户端：SYN标志位；ACK:接受到的Seq+1，为X+1；Seq：为服务端的Seq。\n\n3.服务端发送。发送ACK=y+1，Seq=Z。\n\n三次握手的目的:防止服务端开启无用的连接。网络服务根据网络传输数据的二次校验，是否有必要开启，数据是否丢失等等。规避网络传输过程延时、丢失等导致的服务器开销。\n##### 三次握手数据包举例\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F568caae0-7e44-498a-b5e6-edcff6c53a85%2Fia_10011.png?table=block&id=d6ca229c-1aaa-4c95-95ac-701928e54fc0&width=3100&cache=v2)\n\n#### URI、URL、URN\n- URI：统一资源标志符（Identity），用来唯一标识互联网上的信息资源，包含URL、URN\n- [URL](https://en.wikipedia.org/wiki/URL)：统一资源定位器（Locator）\n  ```js\n  比如：http：//user:pass@host.com:80/path?query=string#hash\n  ```\n  具体的格式如下\n  ![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6f64a395-a938-4a4a-8cff-ca85cba74217%2Fia_10012.png?table=block&id=2ec52d91-25c6-46bc-8666-c24e32228a6e&width=2140&cache=v2)\n- URN：永久统一资源定位符，资源移动之后还可以找到，目前还没有什么好的方案\n\n#### HTTP报文格式\n\n\n\n\n","source":"_posts/http.md","raw":"---\ntitle: HTTP协议原理笔记\ntags:\n  - HTTP\nabbrlink: 44c01e4f\ndate: 2020-05-25 21:41:08\n---\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa8f51621-7ddf-4ac8-b975-ea8f07bc2331%2Fia_10006.png?table=block&id=5a63c580-80a3-4f3e-aa95-53398a7bbc46&width=1540&cache=v2)\n\n## 导学\n### 现状\n- 现在的WEB开发不理解HTTP\n- HTTP相当的重要\n- 提升自身价值\n<!-- more -->\n#### 简单的例子\n- 输入URL打开网页\n\n- AJAX获取数据\n\n- img标签加载图片\n\n- Cache-control 的public属性和private属性，must-revalidate属性，no-cache，no-store\n\n- 缓存验证\n\n  - last-modified和if-modified-since配合验证\n  \n  - etag和if-modified-since配合验证\n  \n  - CORS跨域\n  - 浏览器输入URL后HTTP请求返回全过程（下图依据performance对象）\n  ![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4c6566de-178f-4401-8a07-c8de34ea322f%2Fia_10007.png?table=block&id=e4da05f6-677d-4ec3-8349-12a2aa94e826&width=2240&cache=v2)\n\n等等\n\n## 网络协议\n### 网络模型介绍\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb3095102-cfe2-4d75-8fab-6a9fdbdb8cfd%2Fia_10008.png?table=block&id=d6639703-8522-412b-90ed-b1af226469e5&width=1640&cache=v2)\n本文主要讲HTTP（应用层），HTTP基于TCP/IP协议\n#### 底三层\n- 物理层：定义物理设备如何传输数据\n\n  硬件、网卡端口、光缆\n- 数据链路层：通信的实体间建立数据链路连接\n\n  软件服务通过物理设备创建电路的连接\n- 网络层：为数据在节点之间传输创建逻辑链路\n\n  访问百度的寻址的逻辑关系\n\n#### 传输层\n- 向用户提供可靠的端到端（End-to-End）服务\n- 传输层向高层屏蔽了下层数据通信的细节\n\n  比如本地与百度服务器之间的连接，两端如何传输数据，传输数据的方式；根据数据的大小来分包、分片，接收端的组装，两者的协议的定义。\n  \n#### 应用层\nHTTP就在应用层实现\n- 为软件提供了很多服务\n- 构建与 TCP/IP协议只上\n- 屏蔽了网络传输的相关细节\n\n### HTTP协议发展历史\n\n#### HTTP 0.9\n- 只支持GET请求\n- 没有HEADER等描述数据的信息\n- 服务器发送完毕关闭TCP连接\n\n#### HTTP 1.0\n- 增加很多命令（POST,HEADER等）\n- 增加status code和header\n- 多字符集支持、多部分发送、权限、缓存等等\n\n#### HTTP 1.1\n- 持久连接\n\n  1.0版本一个请求创建一次TCP连接，服务端返回了TCP连接就关闭，成本较高；持久连接就不用关闭。\n  \n- pipeline\n\n  同一个链接发送多个请求，发送的请求在一个连接发送多个，服务端进来的请求需要串行排队\n  \n- 增加host和其他一些命令\n\n  有了host，就可以在同一台物理服务器上跑多个不同WEB服务\n\n#### HTTP 2\n\n\n- 所有的数据都是以二进制传输\n\n  之前的方式大部分是字符串，因此数据的分片方式是不同的，HTTP2中都是帧传输。\n- 同一个连接里面发送多个请求不再需要按照顺序\n  \n  并行极大提高了效率\n- 头信息压缩及推送等提高效率的功能\n  \n  HTTP2解决HTTP1中性能低下的问题而设计的。\n  \n  - 头信息压缩\n  \n  HTTP1中发送请求和返回请求很多的HTTP头都是必须要完整的发送和返回的，而这部分头信息比如header、content-type、cache-control这些字段是用**字符串**形式保存的，所以占用一定的**带宽**。而在HTTP2中就会对头信息压缩，减少带宽使用。\n  - 推送\n  \n  常规的客户端为主动方，服务端为被动方。但是在HTTP2有推送功能，服务端可以主动发起数据传输。常规的html网页是请求html，再请求其中的资源；HTTP2的话可以在你请求html的时候主动推送资源到客户端，达到并行的效果，提高传输效率。\n#### HTTP三次握手\n在客户端和服务器在进行HTTP的发送和返回过程中，会建立TCP connection。\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb9c7a6ce-0c44-4f0c-b21b-81ed2efb2e23%2Fia_10009.png?table=block&id=93759276-d772-43df-950f-e91025150726&width=2370&cache=v2)\nHTTP不存在连接的概念，只存在请求和响应的概念。请求和响应都传输数据包，会经过一个传输的通道，在TCP就创建了这样一个连接（通道），这个连接会保持在那里，请求是在这个基础之上发送的。在TCP连接上可以发送多个HTTP请求。\n\n这个模式在不同的版本里面有所差别\n- HTTP1.0 TCP连接在HTTP请求创建的时候创建服务端想赢回来之后就会关闭\n- HTTP1.1 可以声明TCP连接保持状态，多个HTTP请求都通过这个连接。TCP连接创建的过程中有三次握手消耗，减少开销。\n- HTTP2.0 并发HTTP请求。比如：同个用户在请求一个网页的时候只用一个TCP连接。\n##### 三次握手时序图\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F806a70cf-4416-4888-826d-ce1ce4d075f0%2Fia_10010.png?table=block&id=c55f2578-17bb-4dcf-9c8e-2227f45329da&width=1880&cache=v2)\n1.客户端发起创建数据包的请求。SYN标志位：创建请求的数据包，Seq=X\n\n2.服务端接收，开启TCP SOCKET端口。返回给客户端：SYN标志位；ACK:接受到的Seq+1，为X+1；Seq：为服务端的Seq。\n\n3.服务端发送。发送ACK=y+1，Seq=Z。\n\n三次握手的目的:防止服务端开启无用的连接。网络服务根据网络传输数据的二次校验，是否有必要开启，数据是否丢失等等。规避网络传输过程延时、丢失等导致的服务器开销。\n##### 三次握手数据包举例\n\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F568caae0-7e44-498a-b5e6-edcff6c53a85%2Fia_10011.png?table=block&id=d6ca229c-1aaa-4c95-95ac-701928e54fc0&width=3100&cache=v2)\n\n#### URI、URL、URN\n- URI：统一资源标志符（Identity），用来唯一标识互联网上的信息资源，包含URL、URN\n- [URL](https://en.wikipedia.org/wiki/URL)：统一资源定位器（Locator）\n  ```js\n  比如：http：//user:pass@host.com:80/path?query=string#hash\n  ```\n  具体的格式如下\n  ![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6f64a395-a938-4a4a-8cff-ca85cba74217%2Fia_10012.png?table=block&id=2ec52d91-25c6-46bc-8666-c24e32228a6e&width=2140&cache=v2)\n- URN：永久统一资源定位符，资源移动之后还可以找到，目前还没有什么好的方案\n\n#### HTTP报文格式\n\n\n\n\n","slug":"http","published":1,"updated":"2020-08-02T12:04:34.667Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnca000xvwtfhldj3bk2","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa8f51621-7ddf-4ac8-b975-ea8f07bc2331%2Fia_10006.png?table=block&id=5a63c580-80a3-4f3e-aa95-53398a7bbc46&width=1540&cache=v2\" alt=\"\"></p><h2 id=\"导学\"><a href=\"#导学\" class=\"headerlink\" title=\"导学\"></a>导学</h2><h3 id=\"现状\"><a href=\"#现状\" class=\"headerlink\" title=\"现状\"></a>现状</h3><ul><li><p>现在的WEB开发不理解HTTP</p></li><li><p>HTTP相当的重要</p></li><li><p>提升自身价值</p><a id=\"more\"></a><h4 id=\"简单的例子\"><a href=\"#简单的例子\" class=\"headerlink\" title=\"简单的例子\"></a>简单的例子</h4></li><li><p>输入URL打开网页</p></li><li><p>AJAX获取数据</p></li><li><p>img标签加载图片</p></li><li><p>Cache-control 的public属性和private属性，must-revalidate属性，no-cache，no-store</p></li><li><p>缓存验证</p><ul><li><p>last-modified和if-modified-since配合验证</p></li><li><p>etag和if-modified-since配合验证</p></li><li><p>CORS跨域</p></li><li><p>浏览器输入URL后HTTP请求返回全过程（下图依据performance对象）<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4c6566de-178f-4401-8a07-c8de34ea322f%2Fia_10007.png?table=block&id=e4da05f6-677d-4ec3-8349-12a2aa94e826&width=2240&cache=v2\" alt=\"\"></p></li></ul></li></ul><p>等等</p><h2 id=\"网络协议\"><a href=\"#网络协议\" class=\"headerlink\" title=\"网络协议\"></a>网络协议</h2><h3 id=\"网络模型介绍\"><a href=\"#网络模型介绍\" class=\"headerlink\" title=\"网络模型介绍\"></a>网络模型介绍</h3><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb3095102-cfe2-4d75-8fab-6a9fdbdb8cfd%2Fia_10008.png?table=block&id=d6639703-8522-412b-90ed-b1af226469e5&width=1640&cache=v2\" alt=\"\"><br>本文主要讲HTTP（应用层），HTTP基于TCP/IP协议</p><h4 id=\"底三层\"><a href=\"#底三层\" class=\"headerlink\" title=\"底三层\"></a>底三层</h4><ul><li><p>物理层：定义物理设备如何传输数据</p><p>硬件、网卡端口、光缆</p></li><li><p>数据链路层：通信的实体间建立数据链路连接</p><p>软件服务通过物理设备创建电路的连接</p></li><li><p>网络层：为数据在节点之间传输创建逻辑链路</p><p>访问百度的寻址的逻辑关系</p></li></ul><h4 id=\"传输层\"><a href=\"#传输层\" class=\"headerlink\" title=\"传输层\"></a>传输层</h4><ul><li><p>向用户提供可靠的端到端（End-to-End）服务</p></li><li><p>传输层向高层屏蔽了下层数据通信的细节</p><p>比如本地与百度服务器之间的连接，两端如何传输数据，传输数据的方式；根据数据的大小来分包、分片，接收端的组装，两者的协议的定义。</p></li></ul><h4 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h4><p>HTTP就在应用层实现</p><ul><li>为软件提供了很多服务</li><li>构建与 TCP/IP协议只上</li><li>屏蔽了网络传输的相关细节</li></ul><h3 id=\"HTTP协议发展历史\"><a href=\"#HTTP协议发展历史\" class=\"headerlink\" title=\"HTTP协议发展历史\"></a>HTTP协议发展历史</h3><h4 id=\"HTTP-0-9\"><a href=\"#HTTP-0-9\" class=\"headerlink\" title=\"HTTP 0.9\"></a>HTTP 0.9</h4><ul><li>只支持GET请求</li><li>没有HEADER等描述数据的信息</li><li>服务器发送完毕关闭TCP连接</li></ul><h4 id=\"HTTP-1-0\"><a href=\"#HTTP-1-0\" class=\"headerlink\" title=\"HTTP 1.0\"></a>HTTP 1.0</h4><ul><li>增加很多命令（POST,HEADER等）</li><li>增加status code和header</li><li>多字符集支持、多部分发送、权限、缓存等等</li></ul><h4 id=\"HTTP-1-1\"><a href=\"#HTTP-1-1\" class=\"headerlink\" title=\"HTTP 1.1\"></a>HTTP 1.1</h4><ul><li><p>持久连接</p><p>1.0版本一个请求创建一次TCP连接，服务端返回了TCP连接就关闭，成本较高；持久连接就不用关闭。</p></li><li><p>pipeline</p><p>同一个链接发送多个请求，发送的请求在一个连接发送多个，服务端进来的请求需要串行排队</p></li><li><p>增加host和其他一些命令</p><p>有了host，就可以在同一台物理服务器上跑多个不同WEB服务</p></li></ul><h4 id=\"HTTP-2\"><a href=\"#HTTP-2\" class=\"headerlink\" title=\"HTTP 2\"></a>HTTP 2</h4><ul><li><p>所有的数据都是以二进制传输</p><p>之前的方式大部分是字符串，因此数据的分片方式是不同的，HTTP2中都是帧传输。</p></li><li><p>同一个连接里面发送多个请求不再需要按照顺序</p><p>并行极大提高了效率</p></li><li><p>头信息压缩及推送等提高效率的功能</p><p>HTTP2解决HTTP1中性能低下的问题而设计的。</p><ul><li>头信息压缩</li></ul><p>HTTP1中发送请求和返回请求很多的HTTP头都是必须要完整的发送和返回的，而这部分头信息比如header、content-type、cache-control这些字段是用<strong>字符串</strong>形式保存的，所以占用一定的<strong>带宽</strong>。而在HTTP2中就会对头信息压缩，减少带宽使用。</p><ul><li>推送</li></ul><p>常规的客户端为主动方，服务端为被动方。但是在HTTP2有推送功能，服务端可以主动发起数据传输。常规的html网页是请求html，再请求其中的资源；HTTP2的话可以在你请求html的时候主动推送资源到客户端，达到并行的效果，提高传输效率。</p><h4 id=\"HTTP三次握手\"><a href=\"#HTTP三次握手\" class=\"headerlink\" title=\"HTTP三次握手\"></a>HTTP三次握手</h4><p>在客户端和服务器在进行HTTP的发送和返回过程中，会建立TCP connection。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb9c7a6ce-0c44-4f0c-b21b-81ed2efb2e23%2Fia_10009.png?table=block&id=93759276-d772-43df-950f-e91025150726&width=2370&cache=v2\" alt=\"\"><br>HTTP不存在连接的概念，只存在请求和响应的概念。请求和响应都传输数据包，会经过一个传输的通道，在TCP就创建了这样一个连接（通道），这个连接会保持在那里，请求是在这个基础之上发送的。在TCP连接上可以发送多个HTTP请求。</p></li></ul><p>这个模式在不同的版本里面有所差别</p><ul><li>HTTP1.0 TCP连接在HTTP请求创建的时候创建服务端想赢回来之后就会关闭</li><li>HTTP1.1 可以声明TCP连接保持状态，多个HTTP请求都通过这个连接。TCP连接创建的过程中有三次握手消耗，减少开销。</li><li>HTTP2.0 并发HTTP请求。比如：同个用户在请求一个网页的时候只用一个TCP连接。<h5 id=\"三次握手时序图\"><a href=\"#三次握手时序图\" class=\"headerlink\" title=\"三次握手时序图\"></a>三次握手时序图</h5></li></ul><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F806a70cf-4416-4888-826d-ce1ce4d075f0%2Fia_10010.png?table=block&id=c55f2578-17bb-4dcf-9c8e-2227f45329da&width=1880&cache=v2\" alt=\"\"><br>1.客户端发起创建数据包的请求。SYN标志位：创建请求的数据包，Seq=X</p><p>2.服务端接收，开启TCP SOCKET端口。返回给客户端：SYN标志位；ACK:接受到的Seq+1，为X+1；Seq：为服务端的Seq。</p><p>3.服务端发送。发送ACK=y+1，Seq=Z。</p><p>三次握手的目的:防止服务端开启无用的连接。网络服务根据网络传输数据的二次校验，是否有必要开启，数据是否丢失等等。规避网络传输过程延时、丢失等导致的服务器开销。</p><h5 id=\"三次握手数据包举例\"><a href=\"#三次握手数据包举例\" class=\"headerlink\" title=\"三次握手数据包举例\"></a>三次握手数据包举例</h5><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F568caae0-7e44-498a-b5e6-edcff6c53a85%2Fia_10011.png?table=block&id=d6ca229c-1aaa-4c95-95ac-701928e54fc0&width=3100&cache=v2\" alt=\"\"></p><h4 id=\"URI、URL、URN\"><a href=\"#URI、URL、URN\" class=\"headerlink\" title=\"URI、URL、URN\"></a>URI、URL、URN</h4><ul><li>URI：统一资源标志符（Identity），用来唯一标识互联网上的信息资源，包含URL、URN</li><li><a href=\"https://en.wikipedia.org/wiki/URL\" target=\"_blank\" rel=\"noopener\">URL</a>：统一资源定位器（Locator）<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">比如：http：<span class=\"hljs-comment\">//user:pass@host.com:80/path?query=string#hash</span><br></code></pre></td></tr></table></figure>具体的格式如下<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6f64a395-a938-4a4a-8cff-ca85cba74217%2Fia_10012.png?table=block&id=2ec52d91-25c6-46bc-8666-c24e32228a6e&width=2140&cache=v2\" alt=\"\"></li><li>URN：永久统一资源定位符，资源移动之后还可以找到，目前还没有什么好的方案</li></ul><h4 id=\"HTTP报文格式\"><a href=\"#HTTP报文格式\" class=\"headerlink\" title=\"HTTP报文格式\"></a>HTTP报文格式</h4><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa8f51621-7ddf-4ac8-b975-ea8f07bc2331%2Fia_10006.png?table=block&id=5a63c580-80a3-4f3e-aa95-53398a7bbc46&width=1540&cache=v2\" alt=\"\"></p><h2 id=\"导学\"><a href=\"#导学\" class=\"headerlink\" title=\"导学\"></a>导学</h2><h3 id=\"现状\"><a href=\"#现状\" class=\"headerlink\" title=\"现状\"></a>现状</h3><ul><li><p>现在的WEB开发不理解HTTP</p></li><li><p>HTTP相当的重要</p></li><li><p>提升自身价值</p>","more":"<h4 id=\"简单的例子\"><a href=\"#简单的例子\" class=\"headerlink\" title=\"简单的例子\"></a>简单的例子</h4></li><li><p>输入URL打开网页</p></li><li><p>AJAX获取数据</p></li><li><p>img标签加载图片</p></li><li><p>Cache-control 的public属性和private属性，must-revalidate属性，no-cache，no-store</p></li><li><p>缓存验证</p><ul><li><p>last-modified和if-modified-since配合验证</p></li><li><p>etag和if-modified-since配合验证</p></li><li><p>CORS跨域</p></li><li><p>浏览器输入URL后HTTP请求返回全过程（下图依据performance对象）<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4c6566de-178f-4401-8a07-c8de34ea322f%2Fia_10007.png?table=block&id=e4da05f6-677d-4ec3-8349-12a2aa94e826&width=2240&cache=v2\" alt=\"\"></p></li></ul></li></ul><p>等等</p><h2 id=\"网络协议\"><a href=\"#网络协议\" class=\"headerlink\" title=\"网络协议\"></a>网络协议</h2><h3 id=\"网络模型介绍\"><a href=\"#网络模型介绍\" class=\"headerlink\" title=\"网络模型介绍\"></a>网络模型介绍</h3><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb3095102-cfe2-4d75-8fab-6a9fdbdb8cfd%2Fia_10008.png?table=block&id=d6639703-8522-412b-90ed-b1af226469e5&width=1640&cache=v2\" alt=\"\"><br>本文主要讲HTTP（应用层），HTTP基于TCP/IP协议</p><h4 id=\"底三层\"><a href=\"#底三层\" class=\"headerlink\" title=\"底三层\"></a>底三层</h4><ul><li><p>物理层：定义物理设备如何传输数据</p><p>硬件、网卡端口、光缆</p></li><li><p>数据链路层：通信的实体间建立数据链路连接</p><p>软件服务通过物理设备创建电路的连接</p></li><li><p>网络层：为数据在节点之间传输创建逻辑链路</p><p>访问百度的寻址的逻辑关系</p></li></ul><h4 id=\"传输层\"><a href=\"#传输层\" class=\"headerlink\" title=\"传输层\"></a>传输层</h4><ul><li><p>向用户提供可靠的端到端（End-to-End）服务</p></li><li><p>传输层向高层屏蔽了下层数据通信的细节</p><p>比如本地与百度服务器之间的连接，两端如何传输数据，传输数据的方式；根据数据的大小来分包、分片，接收端的组装，两者的协议的定义。</p></li></ul><h4 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h4><p>HTTP就在应用层实现</p><ul><li>为软件提供了很多服务</li><li>构建与 TCP/IP协议只上</li><li>屏蔽了网络传输的相关细节</li></ul><h3 id=\"HTTP协议发展历史\"><a href=\"#HTTP协议发展历史\" class=\"headerlink\" title=\"HTTP协议发展历史\"></a>HTTP协议发展历史</h3><h4 id=\"HTTP-0-9\"><a href=\"#HTTP-0-9\" class=\"headerlink\" title=\"HTTP 0.9\"></a>HTTP 0.9</h4><ul><li>只支持GET请求</li><li>没有HEADER等描述数据的信息</li><li>服务器发送完毕关闭TCP连接</li></ul><h4 id=\"HTTP-1-0\"><a href=\"#HTTP-1-0\" class=\"headerlink\" title=\"HTTP 1.0\"></a>HTTP 1.0</h4><ul><li>增加很多命令（POST,HEADER等）</li><li>增加status code和header</li><li>多字符集支持、多部分发送、权限、缓存等等</li></ul><h4 id=\"HTTP-1-1\"><a href=\"#HTTP-1-1\" class=\"headerlink\" title=\"HTTP 1.1\"></a>HTTP 1.1</h4><ul><li><p>持久连接</p><p>1.0版本一个请求创建一次TCP连接，服务端返回了TCP连接就关闭，成本较高；持久连接就不用关闭。</p></li><li><p>pipeline</p><p>同一个链接发送多个请求，发送的请求在一个连接发送多个，服务端进来的请求需要串行排队</p></li><li><p>增加host和其他一些命令</p><p>有了host，就可以在同一台物理服务器上跑多个不同WEB服务</p></li></ul><h4 id=\"HTTP-2\"><a href=\"#HTTP-2\" class=\"headerlink\" title=\"HTTP 2\"></a>HTTP 2</h4><ul><li><p>所有的数据都是以二进制传输</p><p>之前的方式大部分是字符串，因此数据的分片方式是不同的，HTTP2中都是帧传输。</p></li><li><p>同一个连接里面发送多个请求不再需要按照顺序</p><p>并行极大提高了效率</p></li><li><p>头信息压缩及推送等提高效率的功能</p><p>HTTP2解决HTTP1中性能低下的问题而设计的。</p><ul><li>头信息压缩</li></ul><p>HTTP1中发送请求和返回请求很多的HTTP头都是必须要完整的发送和返回的，而这部分头信息比如header、content-type、cache-control这些字段是用<strong>字符串</strong>形式保存的，所以占用一定的<strong>带宽</strong>。而在HTTP2中就会对头信息压缩，减少带宽使用。</p><ul><li>推送</li></ul><p>常规的客户端为主动方，服务端为被动方。但是在HTTP2有推送功能，服务端可以主动发起数据传输。常规的html网页是请求html，再请求其中的资源；HTTP2的话可以在你请求html的时候主动推送资源到客户端，达到并行的效果，提高传输效率。</p><h4 id=\"HTTP三次握手\"><a href=\"#HTTP三次握手\" class=\"headerlink\" title=\"HTTP三次握手\"></a>HTTP三次握手</h4><p>在客户端和服务器在进行HTTP的发送和返回过程中，会建立TCP connection。<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fb9c7a6ce-0c44-4f0c-b21b-81ed2efb2e23%2Fia_10009.png?table=block&id=93759276-d772-43df-950f-e91025150726&width=2370&cache=v2\" alt=\"\"><br>HTTP不存在连接的概念，只存在请求和响应的概念。请求和响应都传输数据包，会经过一个传输的通道，在TCP就创建了这样一个连接（通道），这个连接会保持在那里，请求是在这个基础之上发送的。在TCP连接上可以发送多个HTTP请求。</p></li></ul><p>这个模式在不同的版本里面有所差别</p><ul><li>HTTP1.0 TCP连接在HTTP请求创建的时候创建服务端想赢回来之后就会关闭</li><li>HTTP1.1 可以声明TCP连接保持状态，多个HTTP请求都通过这个连接。TCP连接创建的过程中有三次握手消耗，减少开销。</li><li>HTTP2.0 并发HTTP请求。比如：同个用户在请求一个网页的时候只用一个TCP连接。<h5 id=\"三次握手时序图\"><a href=\"#三次握手时序图\" class=\"headerlink\" title=\"三次握手时序图\"></a>三次握手时序图</h5></li></ul><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F806a70cf-4416-4888-826d-ce1ce4d075f0%2Fia_10010.png?table=block&id=c55f2578-17bb-4dcf-9c8e-2227f45329da&width=1880&cache=v2\" alt=\"\"><br>1.客户端发起创建数据包的请求。SYN标志位：创建请求的数据包，Seq=X</p><p>2.服务端接收，开启TCP SOCKET端口。返回给客户端：SYN标志位；ACK:接受到的Seq+1，为X+1；Seq：为服务端的Seq。</p><p>3.服务端发送。发送ACK=y+1，Seq=Z。</p><p>三次握手的目的:防止服务端开启无用的连接。网络服务根据网络传输数据的二次校验，是否有必要开启，数据是否丢失等等。规避网络传输过程延时、丢失等导致的服务器开销。</p><h5 id=\"三次握手数据包举例\"><a href=\"#三次握手数据包举例\" class=\"headerlink\" title=\"三次握手数据包举例\"></a>三次握手数据包举例</h5><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F568caae0-7e44-498a-b5e6-edcff6c53a85%2Fia_10011.png?table=block&id=d6ca229c-1aaa-4c95-95ac-701928e54fc0&width=3100&cache=v2\" alt=\"\"></p><h4 id=\"URI、URL、URN\"><a href=\"#URI、URL、URN\" class=\"headerlink\" title=\"URI、URL、URN\"></a>URI、URL、URN</h4><ul><li>URI：统一资源标志符（Identity），用来唯一标识互联网上的信息资源，包含URL、URN</li><li><a href=\"https://en.wikipedia.org/wiki/URL\" target=\"_blank\" rel=\"noopener\">URL</a>：统一资源定位器（Locator）<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\">比如：http：<span class=\"hljs-comment\">//user:pass@host.com:80/path?query=string#hash</span><br></code></pre></td></tr></table></figure>具体的格式如下<br><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6f64a395-a938-4a4a-8cff-ca85cba74217%2Fia_10012.png?table=block&id=2ec52d91-25c6-46bc-8666-c24e32228a6e&width=2140&cache=v2\" alt=\"\"></li><li>URN：永久统一资源定位符，资源移动之后还可以找到，目前还没有什么好的方案</li></ul><h4 id=\"HTTP报文格式\"><a href=\"#HTTP报文格式\" class=\"headerlink\" title=\"HTTP报文格式\"></a>HTTP报文格式</h4><!-- rebuild by neat -->"},{"title":"mysql基础知识（一）","abbrlink":"4545161d","date":"2020-07-24T03:57:01.000Z","_content":"\n### 目的\n\n学习一些基本的 mysql 知识\n\n### 预备\n\n#### 安装 mysql\n\n[安装教程地址](https://blog.csdn.net/u014416239/article/details/52446608)\n\n#### 终端准备\n\n我这里使用的是[cmder](https://cmder.net/)，并且设置为管理员模式，加上[右键快捷打开](https://blog.csdn.net/hicoldcat/article/details/64904652)，挺方便的。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff66deaf6-a8d9-40f9-84e7-c2ff4451191d%2Fia_10005.png?table=block&id=27d89376-6386-44e1-85cc-845f750f75e2&width=760&cache=v2)\n\n在准备工作完成之后，正式开始学习。\n\n<!-- more -->\n\n### 基础命令\n\n- 启动停止\n\n```bash\n// 启动mysql（如果出现错误应该以**管理员模式**运行终端，mysql80lzk为我安装的时候的**服务名**）\nnet start mysql80lzk\nnet stop mysql80lzk // 停止mysql\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fab9b3a76-0613-42e1-b171-b2f4c1fbfee8%2Fia_10006.png?table=block&id=1616db5b-9e1d-4720-8121-acee7beca61a&width=560&cache=v2)\n\n- 命令行进入\n\n```bash\nmysql -h 127.0.0.1 -P 3306 -uroot -p123456 // 安装的时候设置的(-u)账号(-p)密码\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fff215abc-916a-407b-8241-40bccf6d8aa6%2Fia_10007.png?table=block&id=21486472-f691-4aa8-8d96-6308baacb14f&width=1460&cache=v2)\n\n- 列出数据库\n\n```bash\nshow databases;\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4908db1f-6e69-44de-a37e-55af66f894d5%2Fia_10008.png?table=block&id=6feb8d61-bc45-4584-a9c9-7f52810472d0&width=490&cache=v2)\n\n- 查看表\n\n```bash\nuse mysql;// 选择数据库\nshow tables;\n// 或者\nshow tables from mysql;\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F00f00806-7d58-4616-b795-6e7bc1e1fbb6%2Fia_10009.png?table=block&id=44ed03c0-4699-4bd6-ae3c-31db7cce4d9e&width=580&cache=v2)\n\n- 显示当前的数据库\n\n```bash\nselect database();\n```\n\n- 查询表结构\n\n```bash\nDESC user; // user 是表结构中显示的\n```\n\n### 数据完整性\n\n为了实现数据完整性，需要检验数据库表中的每行和每列数据是否符合要求。在创建表的时候，应该保证以后的数据输入是正确的，错误的数据不允许输入。\n\n#### 数据类型\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6d18c6a2-6419-4b8f-8f70-5f94ed16c15b%2FUntitled.png?table=block&id=20f9f909-e236-4ee1-acb1-79ae0dfe7282&width=1430&cache=v2)\n[Mysql 列类型](https://www.runoob.com/mysql/mysql-data-types.html)\n\n#### 默认值\n\n用户没有指定值得情况下提供一个预先设定的值\n\n#### 非空约束\n\n指定某个字段不能不输入，必须提供一个非空的值。\n\n### 实体完整性\n\n#### 主键约束\n- 表中一列或者几列组合的值能用来唯一标识表中的每一行，这样的列或者列组合称为表的主键，主键表的数据不同重复。\n- 如果两列或者多列组合起来唯一标识表中的每一行，则该主键又称为\"组合键\"\n\n主键选择标准\n\n1.最少性 尽量选择单个建为主键\n\n2.稳定性，更新频率少，稳定\n\n#### 外键\n成绩表中的学生ID应该在学生表中是存在的，我们应该让成绩表中的ID只能引用学生表中的ID，它们的值应该是一一对应的。也就是说成绩表中的ID是成绩表中的外键，对应学生表的主键，这样就可以保证数据的引用完整性。\n\n即：一个表的外键引用了其他表的主键\n\n#### 唯一约束\n唯一约束是指某个字段值是唯一的，在所有的记录中不能有重复的值。比如身份证号。\n#### 标识列\n- 当表中没有合适的列作为主键时可以考虑增加标识列，标识列是一个无实际业务含义的列，仅仅用来区分每条记录。\n- 标识列的值是自动生成的，不能在该列上输入数据\n#### 外键约束\n\n一个表的外键引用了其他表的主键。比如成绩表中的学生ID会引用学生表的主键，课程ID会引用成绩表的主键。\n\n\n- 主表没有记录，子表中不能添加相应的记录\n- 修改和删除主表记录不能让子表记录孤立，必须相应修改和删除\n\n### 数据操作\n#### 创建学生表\n```sql\nCREATE TABLE `student` (\n`id` int(11) NOT NULL PRIMARY KEY AUTO_INCREMENT ,\n`name` varchar(50) NOT NULL ,\n`age` int(11) NULL DEFAULT NULL ,\n`city` varchar(50) DEFAULT '北京' \n);\n```\n#### 增加身份证字段\n```sql\n // 在city后面增加一个字段，\n ALTER TABLE `student` ADD COLUMN `idcard` varchar(15) NULL AFTER `city`;\n // 修改一个字段为carchar(18)\n ALTER TABLE `student` MODIFY COLUMN `idcard` varchar(18) DEFAULT NULL;\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fed06bfe3-a965-4148-9aa8-135c2d126566%2Fia_1000001095.png?table=block&id=8bb5303f-2640-46ea-897e-35e2b16d1d52&width=840&cache=v2)\n```sql\n // 删除身份证字段\n ALTER TABLE `student`DROP COLUMN `idcard`; \n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc0c58cd2-0365-4b22-b91f-9411b02142dc%2Fia_1000001096.png?table=block&id=fb91bf4a-f3ec-404b-80c5-6f93bfec6517&width=910&cache=v2)\n\n#### 添加约束\n```sql\n-- 主键约束\nALTER TABLE `student` ADD PRIMARY KEY (`id`);\n-- 唯一约束\nALTER TABLE `student` ADD UNIQUE INDEX `uq_idcard` (`idcard`) ;\n-- 默认约束\n ALTER TABLE `student` MODIFY COLUMN `city` varchar(50) DEFAULT '北京';\n```\n### 准备数据\n创建数据库\n```\n创建学生表，如果前面没创建可以创建\nCREATE TABLE `student` (\n `id` int(11) NOT NULL AUTO_INCREMENT,\n `name` varchar(50) NOT NULL,\n `idcard` varchar(18) DEFAULT NULL,\n `age` int(11) DEFAULT NULL,\n `city` varchar(50) DEFAULT '',\n PRIMARY KEY (`id`)\n);\n\n CREATE TABLE `course` (\n `id` int(11) NOT NULL AUTO_INCREMENT, \n `name` varchar(50) DEFAULT NULL,\n PRIMARY KEY (`id`) );\n```\n","source":"_posts/mysql1.md","raw":"---\ntitle: mysql基础知识（一）\nabbrlink: 4545161d\ndate: 2020-07-24 11:57:01\ntags:\n  - Mysql\n---\n\n### 目的\n\n学习一些基本的 mysql 知识\n\n### 预备\n\n#### 安装 mysql\n\n[安装教程地址](https://blog.csdn.net/u014416239/article/details/52446608)\n\n#### 终端准备\n\n我这里使用的是[cmder](https://cmder.net/)，并且设置为管理员模式，加上[右键快捷打开](https://blog.csdn.net/hicoldcat/article/details/64904652)，挺方便的。\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff66deaf6-a8d9-40f9-84e7-c2ff4451191d%2Fia_10005.png?table=block&id=27d89376-6386-44e1-85cc-845f750f75e2&width=760&cache=v2)\n\n在准备工作完成之后，正式开始学习。\n\n<!-- more -->\n\n### 基础命令\n\n- 启动停止\n\n```bash\n// 启动mysql（如果出现错误应该以**管理员模式**运行终端，mysql80lzk为我安装的时候的**服务名**）\nnet start mysql80lzk\nnet stop mysql80lzk // 停止mysql\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fab9b3a76-0613-42e1-b171-b2f4c1fbfee8%2Fia_10006.png?table=block&id=1616db5b-9e1d-4720-8121-acee7beca61a&width=560&cache=v2)\n\n- 命令行进入\n\n```bash\nmysql -h 127.0.0.1 -P 3306 -uroot -p123456 // 安装的时候设置的(-u)账号(-p)密码\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fff215abc-916a-407b-8241-40bccf6d8aa6%2Fia_10007.png?table=block&id=21486472-f691-4aa8-8d96-6308baacb14f&width=1460&cache=v2)\n\n- 列出数据库\n\n```bash\nshow databases;\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4908db1f-6e69-44de-a37e-55af66f894d5%2Fia_10008.png?table=block&id=6feb8d61-bc45-4584-a9c9-7f52810472d0&width=490&cache=v2)\n\n- 查看表\n\n```bash\nuse mysql;// 选择数据库\nshow tables;\n// 或者\nshow tables from mysql;\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F00f00806-7d58-4616-b795-6e7bc1e1fbb6%2Fia_10009.png?table=block&id=44ed03c0-4699-4bd6-ae3c-31db7cce4d9e&width=580&cache=v2)\n\n- 显示当前的数据库\n\n```bash\nselect database();\n```\n\n- 查询表结构\n\n```bash\nDESC user; // user 是表结构中显示的\n```\n\n### 数据完整性\n\n为了实现数据完整性，需要检验数据库表中的每行和每列数据是否符合要求。在创建表的时候，应该保证以后的数据输入是正确的，错误的数据不允许输入。\n\n#### 数据类型\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6d18c6a2-6419-4b8f-8f70-5f94ed16c15b%2FUntitled.png?table=block&id=20f9f909-e236-4ee1-acb1-79ae0dfe7282&width=1430&cache=v2)\n[Mysql 列类型](https://www.runoob.com/mysql/mysql-data-types.html)\n\n#### 默认值\n\n用户没有指定值得情况下提供一个预先设定的值\n\n#### 非空约束\n\n指定某个字段不能不输入，必须提供一个非空的值。\n\n### 实体完整性\n\n#### 主键约束\n- 表中一列或者几列组合的值能用来唯一标识表中的每一行，这样的列或者列组合称为表的主键，主键表的数据不同重复。\n- 如果两列或者多列组合起来唯一标识表中的每一行，则该主键又称为\"组合键\"\n\n主键选择标准\n\n1.最少性 尽量选择单个建为主键\n\n2.稳定性，更新频率少，稳定\n\n#### 外键\n成绩表中的学生ID应该在学生表中是存在的，我们应该让成绩表中的ID只能引用学生表中的ID，它们的值应该是一一对应的。也就是说成绩表中的ID是成绩表中的外键，对应学生表的主键，这样就可以保证数据的引用完整性。\n\n即：一个表的外键引用了其他表的主键\n\n#### 唯一约束\n唯一约束是指某个字段值是唯一的，在所有的记录中不能有重复的值。比如身份证号。\n#### 标识列\n- 当表中没有合适的列作为主键时可以考虑增加标识列，标识列是一个无实际业务含义的列，仅仅用来区分每条记录。\n- 标识列的值是自动生成的，不能在该列上输入数据\n#### 外键约束\n\n一个表的外键引用了其他表的主键。比如成绩表中的学生ID会引用学生表的主键，课程ID会引用成绩表的主键。\n\n\n- 主表没有记录，子表中不能添加相应的记录\n- 修改和删除主表记录不能让子表记录孤立，必须相应修改和删除\n\n### 数据操作\n#### 创建学生表\n```sql\nCREATE TABLE `student` (\n`id` int(11) NOT NULL PRIMARY KEY AUTO_INCREMENT ,\n`name` varchar(50) NOT NULL ,\n`age` int(11) NULL DEFAULT NULL ,\n`city` varchar(50) DEFAULT '北京' \n);\n```\n#### 增加身份证字段\n```sql\n // 在city后面增加一个字段，\n ALTER TABLE `student` ADD COLUMN `idcard` varchar(15) NULL AFTER `city`;\n // 修改一个字段为carchar(18)\n ALTER TABLE `student` MODIFY COLUMN `idcard` varchar(18) DEFAULT NULL;\n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fed06bfe3-a965-4148-9aa8-135c2d126566%2Fia_1000001095.png?table=block&id=8bb5303f-2640-46ea-897e-35e2b16d1d52&width=840&cache=v2)\n```sql\n // 删除身份证字段\n ALTER TABLE `student`DROP COLUMN `idcard`; \n```\n\n![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc0c58cd2-0365-4b22-b91f-9411b02142dc%2Fia_1000001096.png?table=block&id=fb91bf4a-f3ec-404b-80c5-6f93bfec6517&width=910&cache=v2)\n\n#### 添加约束\n```sql\n-- 主键约束\nALTER TABLE `student` ADD PRIMARY KEY (`id`);\n-- 唯一约束\nALTER TABLE `student` ADD UNIQUE INDEX `uq_idcard` (`idcard`) ;\n-- 默认约束\n ALTER TABLE `student` MODIFY COLUMN `city` varchar(50) DEFAULT '北京';\n```\n### 准备数据\n创建数据库\n```\n创建学生表，如果前面没创建可以创建\nCREATE TABLE `student` (\n `id` int(11) NOT NULL AUTO_INCREMENT,\n `name` varchar(50) NOT NULL,\n `idcard` varchar(18) DEFAULT NULL,\n `age` int(11) DEFAULT NULL,\n `city` varchar(50) DEFAULT '',\n PRIMARY KEY (`id`)\n);\n\n CREATE TABLE `course` (\n `id` int(11) NOT NULL AUTO_INCREMENT, \n `name` varchar(50) DEFAULT NULL,\n PRIMARY KEY (`id`) );\n```\n","slug":"mysql1","published":1,"updated":"2020-08-02T11:46:27.063Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udncd0010vwtfgbw17m5p","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h3 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h3><p>学习一些基本的 mysql 知识</p><h3 id=\"预备\"><a href=\"#预备\" class=\"headerlink\" title=\"预备\"></a>预备</h3><h4 id=\"安装-mysql\"><a href=\"#安装-mysql\" class=\"headerlink\" title=\"安装 mysql\"></a>安装 mysql</h4><p><a href=\"https://blog.csdn.net/u014416239/article/details/52446608\" target=\"_blank\" rel=\"noopener\">安装教程地址</a></p><h4 id=\"终端准备\"><a href=\"#终端准备\" class=\"headerlink\" title=\"终端准备\"></a>终端准备</h4><p>我这里使用的是<a href=\"https://cmder.net/\" target=\"_blank\" rel=\"noopener\">cmder</a>，并且设置为管理员模式，加上<a href=\"https://blog.csdn.net/hicoldcat/article/details/64904652\" target=\"_blank\" rel=\"noopener\">右键快捷打开</a>，挺方便的。</p><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff66deaf6-a8d9-40f9-84e7-c2ff4451191d%2Fia_10005.png?table=block&id=27d89376-6386-44e1-85cc-845f750f75e2&width=760&cache=v2\" alt=\"\"></p><p>在准备工作完成之后，正式开始学习。</p><a id=\"more\"></a><h3 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h3><ul><li>启动停止</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">// 启动mysql（如果出现错误应该以**管理员模式**运行终端，mysql80lzk为我安装的时候的**服务名**）<br>net start mysql80lzk<br>net stop mysql80lzk // 停止mysql<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fab9b3a76-0613-42e1-b171-b2f4c1fbfee8%2Fia_10006.png?table=block&id=1616db5b-9e1d-4720-8121-acee7beca61a&width=560&cache=v2\" alt=\"\"></p><ul><li>命令行进入</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mysql -h 127.0.0.1 -P 3306 -uroot -p123456 // 安装的时候设置的(-u)账号(-p)密码<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fff215abc-916a-407b-8241-40bccf6d8aa6%2Fia_10007.png?table=block&id=21486472-f691-4aa8-8d96-6308baacb14f&width=1460&cache=v2\" alt=\"\"></p><ul><li>列出数据库</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">show databases;<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4908db1f-6e69-44de-a37e-55af66f894d5%2Fia_10008.png?table=block&id=6feb8d61-bc45-4584-a9c9-7f52810472d0&width=490&cache=v2\" alt=\"\"></p><ul><li>查看表</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">use mysql;// 选择数据库<br>show tables;<br>// 或者<br>show tables from mysql;<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F00f00806-7d58-4616-b795-6e7bc1e1fbb6%2Fia_10009.png?table=block&id=44ed03c0-4699-4bd6-ae3c-31db7cce4d9e&width=580&cache=v2\" alt=\"\"></p><ul><li>显示当前的数据库</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">select database();<br></code></pre></td></tr></table></figure><ul><li>查询表结构</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DESC user; // user 是表结构中显示的<br></code></pre></td></tr></table></figure><h3 id=\"数据完整性\"><a href=\"#数据完整性\" class=\"headerlink\" title=\"数据完整性\"></a>数据完整性</h3><p>为了实现数据完整性，需要检验数据库表中的每行和每列数据是否符合要求。在创建表的时候，应该保证以后的数据输入是正确的，错误的数据不允许输入。</p><h4 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h4><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6d18c6a2-6419-4b8f-8f70-5f94ed16c15b%2FUntitled.png?table=block&id=20f9f909-e236-4ee1-acb1-79ae0dfe7282&width=1430&cache=v2\" alt=\"\"><br><a href=\"https://www.runoob.com/mysql/mysql-data-types.html\" target=\"_blank\" rel=\"noopener\">Mysql 列类型</a></p><h4 id=\"默认值\"><a href=\"#默认值\" class=\"headerlink\" title=\"默认值\"></a>默认值</h4><p>用户没有指定值得情况下提供一个预先设定的值</p><h4 id=\"非空约束\"><a href=\"#非空约束\" class=\"headerlink\" title=\"非空约束\"></a>非空约束</h4><p>指定某个字段不能不输入，必须提供一个非空的值。</p><h3 id=\"实体完整性\"><a href=\"#实体完整性\" class=\"headerlink\" title=\"实体完整性\"></a>实体完整性</h3><h4 id=\"主键约束\"><a href=\"#主键约束\" class=\"headerlink\" title=\"主键约束\"></a>主键约束</h4><ul><li>表中一列或者几列组合的值能用来唯一标识表中的每一行，这样的列或者列组合称为表的主键，主键表的数据不同重复。</li><li>如果两列或者多列组合起来唯一标识表中的每一行，则该主键又称为”组合键”</li></ul><p>主键选择标准</p><p>1.最少性 尽量选择单个建为主键</p><p>2.稳定性，更新频率少，稳定</p><h4 id=\"外键\"><a href=\"#外键\" class=\"headerlink\" title=\"外键\"></a>外键</h4><p>成绩表中的学生ID应该在学生表中是存在的，我们应该让成绩表中的ID只能引用学生表中的ID，它们的值应该是一一对应的。也就是说成绩表中的ID是成绩表中的外键，对应学生表的主键，这样就可以保证数据的引用完整性。</p><p>即：一个表的外键引用了其他表的主键</p><h4 id=\"唯一约束\"><a href=\"#唯一约束\" class=\"headerlink\" title=\"唯一约束\"></a>唯一约束</h4><p>唯一约束是指某个字段值是唯一的，在所有的记录中不能有重复的值。比如身份证号。</p><h4 id=\"标识列\"><a href=\"#标识列\" class=\"headerlink\" title=\"标识列\"></a>标识列</h4><ul><li>当表中没有合适的列作为主键时可以考虑增加标识列，标识列是一个无实际业务含义的列，仅仅用来区分每条记录。</li><li>标识列的值是自动生成的，不能在该列上输入数据<h4 id=\"外键约束\"><a href=\"#外键约束\" class=\"headerlink\" title=\"外键约束\"></a>外键约束</h4></li></ul><p>一个表的外键引用了其他表的主键。比如成绩表中的学生ID会引用学生表的主键，课程ID会引用成绩表的主键。</p><ul><li>主表没有记录，子表中不能添加相应的记录</li><li>修改和删除主表记录不能让子表记录孤立，必须相应修改和删除</li></ul><h3 id=\"数据操作\"><a href=\"#数据操作\" class=\"headerlink\" title=\"数据操作\"></a>数据操作</h3><h4 id=\"创建学生表\"><a href=\"#创建学生表\" class=\"headerlink\" title=\"创建学生表\"></a>创建学生表</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span> (<br><span class=\"hljs-string\">`id`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">11</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> PRIMARY <span class=\"hljs-keyword\">KEY</span> AUTO_INCREMENT ,<br><span class=\"hljs-string\">`name`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">50</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> ,<br><span class=\"hljs-string\">`age`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">11</span>) <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span> ,<br><span class=\"hljs-string\">`city`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">50</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-string\">'北京'</span> <br>);<br></code></pre></td></tr></table></figure><h4 id=\"增加身份证字段\"><a href=\"#增加身份证字段\" class=\"headerlink\" title=\"增加身份证字段\"></a>增加身份证字段</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">// 在city后面增加一个字段，<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span> <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">COLUMN</span> <span class=\"hljs-string\">`idcard`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">15</span>) <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">AFTER</span> <span class=\"hljs-string\">`city`</span>;<br>// 修改一个字段为carchar(18)<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span> <span class=\"hljs-keyword\">MODIFY</span> <span class=\"hljs-keyword\">COLUMN</span> <span class=\"hljs-string\">`idcard`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">18</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span>;<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fed06bfe3-a965-4148-9aa8-135c2d126566%2Fia_1000001095.png?table=block&id=8bb5303f-2640-46ea-897e-35e2b16d1d52&width=840&cache=v2\" alt=\"\"></p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">// 删除身份证字段<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">COLUMN</span> <span class=\"hljs-string\">`idcard`</span>;<br></code></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc0c58cd2-0365-4b22-b91f-9411b02142dc%2Fia_1000001096.png?table=block&id=fb91bf4a-f3ec-404b-80c5-6f93bfec6517&width=910&cache=v2\" alt=\"\"></p><h4 id=\"添加约束\"><a href=\"#添加约束\" class=\"headerlink\" title=\"添加约束\"></a>添加约束</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 主键约束</span><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span> <span class=\"hljs-keyword\">ADD</span> PRIMARY <span class=\"hljs-keyword\">KEY</span> (<span class=\"hljs-string\">`id`</span>);<br><span class=\"hljs-comment\">-- 唯一约束</span><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span> <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">UNIQUE</span> <span class=\"hljs-keyword\">INDEX</span> <span class=\"hljs-string\">`uq_idcard`</span> (<span class=\"hljs-string\">`idcard`</span>) ;<br><span class=\"hljs-comment\">-- 默认约束</span><br> <span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span> <span class=\"hljs-keyword\">MODIFY</span> <span class=\"hljs-keyword\">COLUMN</span> <span class=\"hljs-string\">`city`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">50</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-string\">'北京'</span>;<br></code></pre></td></tr></table></figure><h3 id=\"准备数据\"><a href=\"#准备数据\" class=\"headerlink\" title=\"准备数据\"></a>准备数据</h3><p>创建数据库</p><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">创建学生表，如果前面没创建可以创建<br>CREATE TABLE `student` (<br> `id` int(11) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> AUTO_INCREMENT,<br> `name` varchar(50) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,<br> `idcard` varchar(18)<span class=\"hljs-built_in\"> DEFAULT </span><span class=\"hljs-literal\">NULL</span>,<br> `age` int(11)<span class=\"hljs-built_in\"> DEFAULT </span><span class=\"hljs-literal\">NULL</span>,<br> `city` varchar(50)<span class=\"hljs-built_in\"> DEFAULT </span><span class=\"hljs-string\">''</span>,<br> PRIMARY KEY (`id`)<br>);<br><br> CREATE TABLE `course` (<br> `id` int(11) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> AUTO_INCREMENT, <br> `name` varchar(50)<span class=\"hljs-built_in\"> DEFAULT </span><span class=\"hljs-literal\">NULL</span>,<br> PRIMARY KEY (`id`) );<br></code></pre></td></tr></table></figure><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h3 id=\"目的\"><a href=\"#目的\" class=\"headerlink\" title=\"目的\"></a>目的</h3><p>学习一些基本的 mysql 知识</p><h3 id=\"预备\"><a href=\"#预备\" class=\"headerlink\" title=\"预备\"></a>预备</h3><h4 id=\"安装-mysql\"><a href=\"#安装-mysql\" class=\"headerlink\" title=\"安装 mysql\"></a>安装 mysql</h4><p><a href=\"https://blog.csdn.net/u014416239/article/details/52446608\" target=\"_blank\" rel=\"noopener\">安装教程地址</a></p><h4 id=\"终端准备\"><a href=\"#终端准备\" class=\"headerlink\" title=\"终端准备\"></a>终端准备</h4><p>我这里使用的是<a href=\"https://cmder.net/\" target=\"_blank\" rel=\"noopener\">cmder</a>，并且设置为管理员模式，加上<a href=\"https://blog.csdn.net/hicoldcat/article/details/64904652\" target=\"_blank\" rel=\"noopener\">右键快捷打开</a>，挺方便的。</p><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff66deaf6-a8d9-40f9-84e7-c2ff4451191d%2Fia_10005.png?table=block&id=27d89376-6386-44e1-85cc-845f750f75e2&width=760&cache=v2\" alt=\"\"></p><p>在准备工作完成之后，正式开始学习。</p>","more":"<h3 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h3><ul><li>启动停止</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">// 启动mysql（如果出现错误应该以**管理员模式**运行终端，mysql80lzk为我安装的时候的**服务名**）<br>net start mysql80lzk<br>net stop mysql80lzk // 停止mysql<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fab9b3a76-0613-42e1-b171-b2f4c1fbfee8%2Fia_10006.png?table=block&id=1616db5b-9e1d-4720-8121-acee7beca61a&width=560&cache=v2\" alt=\"\"></p><ul><li>命令行进入</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mysql -h 127.0.0.1 -P 3306 -uroot -p123456 // 安装的时候设置的(-u)账号(-p)密码<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fff215abc-916a-407b-8241-40bccf6d8aa6%2Fia_10007.png?table=block&id=21486472-f691-4aa8-8d96-6308baacb14f&width=1460&cache=v2\" alt=\"\"></p><ul><li>列出数据库</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">show databases;<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4908db1f-6e69-44de-a37e-55af66f894d5%2Fia_10008.png?table=block&id=6feb8d61-bc45-4584-a9c9-7f52810472d0&width=490&cache=v2\" alt=\"\"></p><ul><li>查看表</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">use mysql;// 选择数据库<br>show tables;<br>// 或者<br>show tables from mysql;<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F00f00806-7d58-4616-b795-6e7bc1e1fbb6%2Fia_10009.png?table=block&id=44ed03c0-4699-4bd6-ae3c-31db7cce4d9e&width=580&cache=v2\" alt=\"\"></p><ul><li>显示当前的数据库</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">select database();<br></code></pre></td></tr></table></figure><ul><li>查询表结构</li></ul><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">DESC user; // user 是表结构中显示的<br></code></pre></td></tr></table></figure><h3 id=\"数据完整性\"><a href=\"#数据完整性\" class=\"headerlink\" title=\"数据完整性\"></a>数据完整性</h3><p>为了实现数据完整性，需要检验数据库表中的每行和每列数据是否符合要求。在创建表的时候，应该保证以后的数据输入是正确的，错误的数据不允许输入。</p><h4 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h4><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F6d18c6a2-6419-4b8f-8f70-5f94ed16c15b%2FUntitled.png?table=block&id=20f9f909-e236-4ee1-acb1-79ae0dfe7282&width=1430&cache=v2\" alt=\"\"><br><a href=\"https://www.runoob.com/mysql/mysql-data-types.html\" target=\"_blank\" rel=\"noopener\">Mysql 列类型</a></p><h4 id=\"默认值\"><a href=\"#默认值\" class=\"headerlink\" title=\"默认值\"></a>默认值</h4><p>用户没有指定值得情况下提供一个预先设定的值</p><h4 id=\"非空约束\"><a href=\"#非空约束\" class=\"headerlink\" title=\"非空约束\"></a>非空约束</h4><p>指定某个字段不能不输入，必须提供一个非空的值。</p><h3 id=\"实体完整性\"><a href=\"#实体完整性\" class=\"headerlink\" title=\"实体完整性\"></a>实体完整性</h3><h4 id=\"主键约束\"><a href=\"#主键约束\" class=\"headerlink\" title=\"主键约束\"></a>主键约束</h4><ul><li>表中一列或者几列组合的值能用来唯一标识表中的每一行，这样的列或者列组合称为表的主键，主键表的数据不同重复。</li><li>如果两列或者多列组合起来唯一标识表中的每一行，则该主键又称为”组合键”</li></ul><p>主键选择标准</p><p>1.最少性 尽量选择单个建为主键</p><p>2.稳定性，更新频率少，稳定</p><h4 id=\"外键\"><a href=\"#外键\" class=\"headerlink\" title=\"外键\"></a>外键</h4><p>成绩表中的学生ID应该在学生表中是存在的，我们应该让成绩表中的ID只能引用学生表中的ID，它们的值应该是一一对应的。也就是说成绩表中的ID是成绩表中的外键，对应学生表的主键，这样就可以保证数据的引用完整性。</p><p>即：一个表的外键引用了其他表的主键</p><h4 id=\"唯一约束\"><a href=\"#唯一约束\" class=\"headerlink\" title=\"唯一约束\"></a>唯一约束</h4><p>唯一约束是指某个字段值是唯一的，在所有的记录中不能有重复的值。比如身份证号。</p><h4 id=\"标识列\"><a href=\"#标识列\" class=\"headerlink\" title=\"标识列\"></a>标识列</h4><ul><li>当表中没有合适的列作为主键时可以考虑增加标识列，标识列是一个无实际业务含义的列，仅仅用来区分每条记录。</li><li>标识列的值是自动生成的，不能在该列上输入数据<h4 id=\"外键约束\"><a href=\"#外键约束\" class=\"headerlink\" title=\"外键约束\"></a>外键约束</h4></li></ul><p>一个表的外键引用了其他表的主键。比如成绩表中的学生ID会引用学生表的主键，课程ID会引用成绩表的主键。</p><ul><li>主表没有记录，子表中不能添加相应的记录</li><li>修改和删除主表记录不能让子表记录孤立，必须相应修改和删除</li></ul><h3 id=\"数据操作\"><a href=\"#数据操作\" class=\"headerlink\" title=\"数据操作\"></a>数据操作</h3><h4 id=\"创建学生表\"><a href=\"#创建学生表\" class=\"headerlink\" title=\"创建学生表\"></a>创建学生表</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span> (<br><span class=\"hljs-string\">`id`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">11</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> PRIMARY <span class=\"hljs-keyword\">KEY</span> AUTO_INCREMENT ,<br><span class=\"hljs-string\">`name`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">50</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> ,<br><span class=\"hljs-string\">`age`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">11</span>) <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span> ,<br><span class=\"hljs-string\">`city`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">50</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-string\">'北京'</span> <br>);<br></code></pre></td></tr></table></figure><h4 id=\"增加身份证字段\"><a href=\"#增加身份证字段\" class=\"headerlink\" title=\"增加身份证字段\"></a>增加身份证字段</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">// 在city后面增加一个字段，<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span> <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">COLUMN</span> <span class=\"hljs-string\">`idcard`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">15</span>) <span class=\"hljs-literal\">NULL</span> <span class=\"hljs-keyword\">AFTER</span> <span class=\"hljs-string\">`city`</span>;<br>// 修改一个字段为carchar(18)<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span> <span class=\"hljs-keyword\">MODIFY</span> <span class=\"hljs-keyword\">COLUMN</span> <span class=\"hljs-string\">`idcard`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">18</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span>;<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fed06bfe3-a965-4148-9aa8-135c2d126566%2Fia_1000001095.png?table=block&id=8bb5303f-2640-46ea-897e-35e2b16d1d52&width=840&cache=v2\" alt=\"\"></p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">// 删除身份证字段<br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">COLUMN</span> <span class=\"hljs-string\">`idcard`</span>;<br></code></pre></td></tr></table></figure><p><img src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc0c58cd2-0365-4b22-b91f-9411b02142dc%2Fia_1000001096.png?table=block&id=fb91bf4a-f3ec-404b-80c5-6f93bfec6517&width=910&cache=v2\" alt=\"\"></p><h4 id=\"添加约束\"><a href=\"#添加约束\" class=\"headerlink\" title=\"添加约束\"></a>添加约束</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 主键约束</span><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span> <span class=\"hljs-keyword\">ADD</span> PRIMARY <span class=\"hljs-keyword\">KEY</span> (<span class=\"hljs-string\">`id`</span>);<br><span class=\"hljs-comment\">-- 唯一约束</span><br><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span> <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">UNIQUE</span> <span class=\"hljs-keyword\">INDEX</span> <span class=\"hljs-string\">`uq_idcard`</span> (<span class=\"hljs-string\">`idcard`</span>) ;<br><span class=\"hljs-comment\">-- 默认约束</span><br> <span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span> <span class=\"hljs-keyword\">MODIFY</span> <span class=\"hljs-keyword\">COLUMN</span> <span class=\"hljs-string\">`city`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">50</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-string\">'北京'</span>;<br></code></pre></td></tr></table></figure><h3 id=\"准备数据\"><a href=\"#准备数据\" class=\"headerlink\" title=\"准备数据\"></a>准备数据</h3><p>创建数据库</p><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">创建学生表，如果前面没创建可以创建<br>CREATE TABLE `student` (<br> `id` int(11) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> AUTO_INCREMENT,<br> `name` varchar(50) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,<br> `idcard` varchar(18)<span class=\"hljs-built_in\"> DEFAULT </span><span class=\"hljs-literal\">NULL</span>,<br> `age` int(11)<span class=\"hljs-built_in\"> DEFAULT </span><span class=\"hljs-literal\">NULL</span>,<br> `city` varchar(50)<span class=\"hljs-built_in\"> DEFAULT </span><span class=\"hljs-string\">''</span>,<br> PRIMARY KEY (`id`)<br>);<br><br> CREATE TABLE `course` (<br> `id` int(11) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> AUTO_INCREMENT, <br> `name` varchar(50)<span class=\"hljs-built_in\"> DEFAULT </span><span class=\"hljs-literal\">NULL</span>,<br> PRIMARY KEY (`id`) );<br></code></pre></td></tr></table></figure><!-- rebuild by neat -->"},{"title":"春日的太阳","abbrlink":"9b338b9","date":"2020-03-24T15:44:30.000Z","_content":"> 我们可能不经意间想起\n> 有走过的路\n> 有说过的话\n> 有吃过的饭\n\n\n> 本来谁都不打算告诉的\n> 只是某天阳光照进来\n> 突然间仿佛记起了全部\n> 然后只想告诉给她今天灿烂的太阳\n\n在某一天，太阳出来了。看到这样的景色，我准备了一箩筐话，碎碎念了好多遍，见你之后，轻轻说了句，今天的太阳真好。--2020年2月21日\n","source":"_posts/poems-sunny.md","raw":"---\ntitle: 春日的太阳\ntags:\n  - 小诗\nabbrlink: 9b338b9\ndate: 2020-03-24 23:44:30\n---\n> 我们可能不经意间想起\n> 有走过的路\n> 有说过的话\n> 有吃过的饭\n\n\n> 本来谁都不打算告诉的\n> 只是某天阳光照进来\n> 突然间仿佛记起了全部\n> 然后只想告诉给她今天灿烂的太阳\n\n在某一天，太阳出来了。看到这样的景色，我准备了一箩筐话，碎碎念了好多遍，见你之后，轻轻说了句，今天的太阳真好。--2020年2月21日\n","slug":"poems-sunny","published":1,"updated":"2020-07-26T15:45:00.643Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnce0012vwtfhzbng8v3","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><blockquote><p>我们可能不经意间想起<br>有走过的路<br>有说过的话<br>有吃过的饭</p></blockquote><blockquote><p>本来谁都不打算告诉的<br>只是某天阳光照进来<br>突然间仿佛记起了全部<br>然后只想告诉给她今天灿烂的太阳</p></blockquote><p>在某一天，太阳出来了。看到这样的景色，我准备了一箩筐话，碎碎念了好多遍，见你之后，轻轻说了句，今天的太阳真好。–2020年2月21日</p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><blockquote><p>我们可能不经意间想起<br>有走过的路<br>有说过的话<br>有吃过的饭</p></blockquote><blockquote><p>本来谁都不打算告诉的<br>只是某天阳光照进来<br>突然间仿佛记起了全部<br>然后只想告诉给她今天灿烂的太阳</p></blockquote><p>在某一天，太阳出来了。看到这样的景色，我准备了一箩筐话，碎碎念了好多遍，见你之后，轻轻说了句，今天的太阳真好。–2020年2月21日</p><!-- rebuild by neat -->"},{"title":"培养自己的主人翁意识","abbrlink":"f2b706b7","date":"2020-07-02T13:09:11.000Z","_content":"## 缘起\n\n成长和沉淀，听起来是那么的空洞，其实本质还是在于内心的意识和格局的变化。\n\n有时候我们经常抱怨，要是当初就想到这一点就好了；比如：当初应该早一点开始投资基金、股票，早一点阅读一些关于某某方面的书籍等等。我想这不是在于少数，我也不时有这种“马后炮”想法。归其原因，有可能是我们的社交环境造成了思维局限，还有就是自己的处理事情主观能动性。\n\n而今天我想讲的就是一种“主人翁意识”。\n\n<!-- more -->\n\n## 经过\n\n前些日子在做一个需求任务，我已经知道我这部分的具体工作是什么，也已经按部就班的开展了，也知道与我后端的工作是什么。但是需求里面却没有看到后端前去建任务。当时想着，**反正这个部分不是我的任务，因为不是负责，不用管了**。因此就没有后端同事往上面添加任务。\n\n不久，在需求迭代会上，总结前面的工作，才发现后端同事貌似还不知道这件事情，还没有计划工时，还没有排期。然后临时安排人员，计划时间。\n\n这虽然是一个小事情，功能也不算复杂，加紧做了就是了。但是倘若之前我发现了就提出这个任务及时安排人员呢，说不定现在已经做完了。\n\n其实，在这个小细节中就体现了你所处的思考角度。我此时仅仅扮演的是执行者的角度，别人叫我做什么任务我就做什么任务。倘若我再费心一点点，问一下后端，他们就会安排人，也体现了我对这件事情的责任感，整体任务的进度也就不同了。\n\n## 体会\n\n\n\n以一种执行者的角度去工作，一直都是做事情，做什么事情，时间节点是什么。别人不安排我就不用做，别人不说我也不知道。倘若以一种主人翁的角度去做事情，会想的是为什么做，怎么做，怎么去协调资源，最终把事情做好。如果发现了问题就会去协调咨询和安排，因为这个时候已经站在一种管理者的维度了。这样去处理事情，自己扮演的也是一种项目推动者的角色。\n\n这就是主人翁的意识，摆正自己的位置，端正自己的态度，站在自己的上面一层思考问题；这样，一方面推进了任务进度，另一方面也强调了自己在团队中的重要性。在工作中有这样的意识往往也会得到同事和领导的信赖，也是区别于常人一种不错的心理素质。\n\n\n\n\n\n","source":"_posts/master.md","raw":"---\ntitle: 培养自己的主人翁意识\nabbrlink: f2b706b7\ndate: 2020-07-02 21:09:11\ntags:\n- 心得\n---\n## 缘起\n\n成长和沉淀，听起来是那么的空洞，其实本质还是在于内心的意识和格局的变化。\n\n有时候我们经常抱怨，要是当初就想到这一点就好了；比如：当初应该早一点开始投资基金、股票，早一点阅读一些关于某某方面的书籍等等。我想这不是在于少数，我也不时有这种“马后炮”想法。归其原因，有可能是我们的社交环境造成了思维局限，还有就是自己的处理事情主观能动性。\n\n而今天我想讲的就是一种“主人翁意识”。\n\n<!-- more -->\n\n## 经过\n\n前些日子在做一个需求任务，我已经知道我这部分的具体工作是什么，也已经按部就班的开展了，也知道与我后端的工作是什么。但是需求里面却没有看到后端前去建任务。当时想着，**反正这个部分不是我的任务，因为不是负责，不用管了**。因此就没有后端同事往上面添加任务。\n\n不久，在需求迭代会上，总结前面的工作，才发现后端同事貌似还不知道这件事情，还没有计划工时，还没有排期。然后临时安排人员，计划时间。\n\n这虽然是一个小事情，功能也不算复杂，加紧做了就是了。但是倘若之前我发现了就提出这个任务及时安排人员呢，说不定现在已经做完了。\n\n其实，在这个小细节中就体现了你所处的思考角度。我此时仅仅扮演的是执行者的角度，别人叫我做什么任务我就做什么任务。倘若我再费心一点点，问一下后端，他们就会安排人，也体现了我对这件事情的责任感，整体任务的进度也就不同了。\n\n## 体会\n\n\n\n以一种执行者的角度去工作，一直都是做事情，做什么事情，时间节点是什么。别人不安排我就不用做，别人不说我也不知道。倘若以一种主人翁的角度去做事情，会想的是为什么做，怎么做，怎么去协调资源，最终把事情做好。如果发现了问题就会去协调咨询和安排，因为这个时候已经站在一种管理者的维度了。这样去处理事情，自己扮演的也是一种项目推动者的角色。\n\n这就是主人翁的意识，摆正自己的位置，端正自己的态度，站在自己的上面一层思考问题；这样，一方面推进了任务进度，另一方面也强调了自己在团队中的重要性。在工作中有这样的意识往往也会得到同事和领导的信赖，也是区别于常人一种不错的心理素质。\n\n\n\n\n\n","slug":"master","published":1,"updated":"2020-07-26T15:45:00.643Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udncg0013vwtf22pugb6k","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h2><p>成长和沉淀，听起来是那么的空洞，其实本质还是在于内心的意识和格局的变化。</p><p>有时候我们经常抱怨，要是当初就想到这一点就好了；比如：当初应该早一点开始投资基金、股票，早一点阅读一些关于某某方面的书籍等等。我想这不是在于少数，我也不时有这种“马后炮”想法。归其原因，有可能是我们的社交环境造成了思维局限，还有就是自己的处理事情主观能动性。</p><p>而今天我想讲的就是一种“主人翁意识”。</p><a id=\"more\"></a><h2 id=\"经过\"><a href=\"#经过\" class=\"headerlink\" title=\"经过\"></a>经过</h2><p>前些日子在做一个需求任务，我已经知道我这部分的具体工作是什么，也已经按部就班的开展了，也知道与我后端的工作是什么。但是需求里面却没有看到后端前去建任务。当时想着，<strong>反正这个部分不是我的任务，因为不是负责，不用管了</strong>。因此就没有后端同事往上面添加任务。</p><p>不久，在需求迭代会上，总结前面的工作，才发现后端同事貌似还不知道这件事情，还没有计划工时，还没有排期。然后临时安排人员，计划时间。</p><p>这虽然是一个小事情，功能也不算复杂，加紧做了就是了。但是倘若之前我发现了就提出这个任务及时安排人员呢，说不定现在已经做完了。</p><p>其实，在这个小细节中就体现了你所处的思考角度。我此时仅仅扮演的是执行者的角度，别人叫我做什么任务我就做什么任务。倘若我再费心一点点，问一下后端，他们就会安排人，也体现了我对这件事情的责任感，整体任务的进度也就不同了。</p><h2 id=\"体会\"><a href=\"#体会\" class=\"headerlink\" title=\"体会\"></a>体会</h2><p>以一种执行者的角度去工作，一直都是做事情，做什么事情，时间节点是什么。别人不安排我就不用做，别人不说我也不知道。倘若以一种主人翁的角度去做事情，会想的是为什么做，怎么做，怎么去协调资源，最终把事情做好。如果发现了问题就会去协调咨询和安排，因为这个时候已经站在一种管理者的维度了。这样去处理事情，自己扮演的也是一种项目推动者的角色。</p><p>这就是主人翁的意识，摆正自己的位置，端正自己的态度，站在自己的上面一层思考问题；这样，一方面推进了任务进度，另一方面也强调了自己在团队中的重要性。在工作中有这样的意识往往也会得到同事和领导的信赖，也是区别于常人一种不错的心理素质。</p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h2><p>成长和沉淀，听起来是那么的空洞，其实本质还是在于内心的意识和格局的变化。</p><p>有时候我们经常抱怨，要是当初就想到这一点就好了；比如：当初应该早一点开始投资基金、股票，早一点阅读一些关于某某方面的书籍等等。我想这不是在于少数，我也不时有这种“马后炮”想法。归其原因，有可能是我们的社交环境造成了思维局限，还有就是自己的处理事情主观能动性。</p><p>而今天我想讲的就是一种“主人翁意识”。</p>","more":"<h2 id=\"经过\"><a href=\"#经过\" class=\"headerlink\" title=\"经过\"></a>经过</h2><p>前些日子在做一个需求任务，我已经知道我这部分的具体工作是什么，也已经按部就班的开展了，也知道与我后端的工作是什么。但是需求里面却没有看到后端前去建任务。当时想着，<strong>反正这个部分不是我的任务，因为不是负责，不用管了</strong>。因此就没有后端同事往上面添加任务。</p><p>不久，在需求迭代会上，总结前面的工作，才发现后端同事貌似还不知道这件事情，还没有计划工时，还没有排期。然后临时安排人员，计划时间。</p><p>这虽然是一个小事情，功能也不算复杂，加紧做了就是了。但是倘若之前我发现了就提出这个任务及时安排人员呢，说不定现在已经做完了。</p><p>其实，在这个小细节中就体现了你所处的思考角度。我此时仅仅扮演的是执行者的角度，别人叫我做什么任务我就做什么任务。倘若我再费心一点点，问一下后端，他们就会安排人，也体现了我对这件事情的责任感，整体任务的进度也就不同了。</p><h2 id=\"体会\"><a href=\"#体会\" class=\"headerlink\" title=\"体会\"></a>体会</h2><p>以一种执行者的角度去工作，一直都是做事情，做什么事情，时间节点是什么。别人不安排我就不用做，别人不说我也不知道。倘若以一种主人翁的角度去做事情，会想的是为什么做，怎么做，怎么去协调资源，最终把事情做好。如果发现了问题就会去协调咨询和安排，因为这个时候已经站在一种管理者的维度了。这样去处理事情，自己扮演的也是一种项目推动者的角色。</p><p>这就是主人翁的意识，摆正自己的位置，端正自己的态度，站在自己的上面一层思考问题；这样，一方面推进了任务进度，另一方面也强调了自己在团队中的重要性。在工作中有这样的意识往往也会得到同事和领导的信赖，也是区别于常人一种不错的心理素质。</p><!-- rebuild by neat -->"},{"title":"CSS 伪类合集分享","abbrlink":"a54a0322","date":"2020-06-28T02:32:54.000Z","_content":"\n<!-- demo的样式 -->\n<style>\n.demo{\n   border:1px dashed #ccc;\n   padding:5px;\n}\n.demo:hover{\n   box-shadow: 0 0 11px rgba(33,33,33,.2);\n}\n</style>\n\n## 引用\n\n分享总结一下现有的伪类和简单的 demo\n源地址：[MDN](https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes)\n\n## 伪类\n\n### :active\n\n匹配被用户激活的元素。它让页面能在浏览器监测到激活时给出反馈。当用鼠标交互时，它代表的是用户按下按键和松开按键之间的时间。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .active:active{ color:red;}\n  </style>\n  <div class=\"active\">鼠标按下就变为红色</div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .active:active{ color:red;}\n  </style>\n  <div class=\"active\">鼠标按下就变为红色</div>\n</div>\n<!-- more -->\n\n### :only-child\n\n匹配没有任何兄弟元素的元素。\n\n等效的选择器还可以写成:first-child:last-child 或者:nth-child(1):nth-last-child(1),当然,前者的权重会低一点.\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n .onlyChild :only-child {\n  color: red;\n}\n .onlyChild .haha::after {\n content:'after伪类不影响';\n}\n  </style>\n  <div class=\"onlyChild\">\n  <div>\n  直接的文本也不影响选择\n    <i>没有兄弟元素</i>\n  </div>\n\n  <div>\n    <i>有兄弟</i><br>\n    <b>有兄弟</b><br>\n    <span>有兄弟 <span>没兄弟</span></span>\n  </div>\n</div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .onlyChild :only-child {\n      color: red;\n    }\n    .onlyChild .haha::after {\n      content:'after伪类不影响';\n    }\n  </style>\n  <div class=\"onlyChild\">\n    <div class=\"haha\">\n      直接的文本也不影响选择\n      <i>没有兄弟元素,</i>\n    </div>\n    <div>\n      <i>有兄弟</i><br>\n      <b>有兄弟</b><br>\n      <span>有兄弟 <span>没兄弟</span></span>\n    </div>\n</div>\n</div>\n\n### :any-link\n\n选择器代表一个有链接锚点的元素，而不管它是否被访问过，也就是说，它会匹配每一个有**href**属性的 `<a>`、`<area>` 或 `<link>` 元素。因此，它会匹配到所有的 :link 或 :visited。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n.anyLink a:any-link {\n  color: red;\n}\n/_ WebKit browsers _/\n.anyLink a:-webkit-any-link {\ncolor: red;\n}\n</style>\n<div class=\"anyLink\">\n<a href=\"https://example.com\">href为地址</a><br>\n<a href=\"#\">href为#</a><br>\n<a href=\"\">href为空字符串</a><br>\n<div href=\"#\">href为#的div</div><br>\n<a>没有 href</a>\n</div>\n\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n.anyLink a:any-link {\n  color: red;\n}\n/_ WebKit browsers _/\n.anyLink a:-webkit-any-link {\ncolor: red;\n}\n</style>\n<div class=\"anyLink\">\n<a href=\"https://example.com\">href为地址</a><br>\n<a href=\"#\">href为#</a><br>\n<a href=\"\">href为空字符串</a><br>\n<div href=\"#\">href为#的div</div><br>\n<a>没有 href</a>\n</div>\n\n</div>\n\n### :only-of-type\n\n代表了任意一个元素，这个元素没有其他相同类型的兄弟元素。(子元素中唯一的标签)\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .onlyoftype :only-of-type {\n    color: red;\n  }\n  </style>\n  <div class=\"onlyoftype\">\n    <div>I am `div` #1.</div>\n    <p>I am the only `p` among my siblings.</p>\n    <div>I am `div` #2.</div>\n    <div>I am `div` #3.\n      <i>I am the only `i` child.</i>\n      <em>I am `em` #1.</em>\n      <b>I am `b` #2.</b>\n    </div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .onlyoftype :only-of-type {\n    color: red;\n  }\n  </style>\n  <div class=\"onlyoftype\">\n    <div>I am `div` #1.</div>\n    <p>I am the only `p` among my siblings.</p>\n    <div>I am `div` #2.</div>\n    <div>I am `div` #3.\n      <i>I am the only `i` child.</i>\n      <em>I am `em` #1.</em>\n      <b>I am `b` #2.</b>\n    </div>\n  </div>\n</div>\n\n### :blank 火狐验证\n\n没有子节点；仅有空的文本节点；仅有空白符的文本节点。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n.blanks p {\n  min-height: 30px;\n  width: 250px;\n  background-color: lightblue;\n}\n.blanks p:blank { display: none; }\n.blanks p:-moz-only-whitespace { display: none; } /* Mozilla-only pseudo-class that works like :blank will */\n</style>\n\n  <div class=\"blanks\">\n  <p>This paragraph is not empty or blank.</p>\n  <p><!--this is empty and blank --></p>\n  <p>\n    \n    <!-- this is not empty, because it has whitespace. But it is blank.-->\n    \n  </p>\n  <p>This paragraph is not empty or blank.</p>\n</div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n.blanks p {\n  min-height: 30px;\n  width: 250px;\n  background-color: lightblue;\n}\n.blanks p:blank { display: none; }\n.blanks p:-moz-only-whitespace { display: none; } /* Mozilla-only pseudo-class that works like :blank will */\n</style>\n\n  <div class=\"blanks\">\n  <p>This paragraph is not empty or blank.</p>\n  <p><!--this is empty and blank --></p>\n  <p>\n    \n    <!-- this is not empty, because it has whitespace. But it is blank.-->\n    \n  </p>\n  <p>This paragraph is not empty or blank.</p>\n</div>\n</div>\n\n### :empty\n\n代表没有子元素的元素。子元素只可以是元素节点或文本（包括空格）。注释或处理指令都不会产生影响。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .empty .box {\n        background: pink;\n        height: 80px;\n        width: 80px;\n    }\n    .empty .box:empty {\n      background: lime;\n    }\n</style>\n\n  <div class=\"empty\">\n    <div class=\"box\"><!-- I will be lime --></div>\n    <div class=\"box\">I will be pink</div>\n    <div class=\"box\">\n        <!-- I will be red because of the whitespace around this comment -->\n    </div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .empty .box {\n        background: pink;\n        height: 80px;\n        width: 80px;\n    }\n    .empty .box:empty {\n      background: lime;\n    }\n</style>\n\n  <div class=\"empty\">\n    <div class=\"box\"><!-- I will be lime --></div>\n    <div class=\"box\">I will be pink</div>\n    <div class=\"box\">\n        <!-- I will be red because of the whitespace around this comment -->\n    </div>\n  </div>\n</div>\n\n### :optional\n\n任意没有 required 属性的 `<input>`，`<select>` 或 `<textarea>` 元素使用它。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .optional input:optional {\n  border: 1px dashed red;\n}\n  </style>\n  <div class=\"optional\">\n  <input type=\"text\"/>\n  <input type=\"text\" required placeholder=\"有required的input\"/>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .optional input:optional {\n  border: 1px dashed red;\n}\n  </style>\n  <div class=\"optional\">\n  <input type=\"text\"/>\n  <input type=\"text\" required placeholder=\"有required的input\"/>\n  </div>\n</div>\n\n### :checked\n\n选择器表示任何处于选中状态的 radio(`<input type=\"radio\">`), checkbox (`<input type=\"checkbox\">`) 或(\"select\") 元素中的 option HTML 元素(\"option\")\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .checked :checked {\n    background:red;\n    margin-left:20px;\n    margin-right:20px;\n  }\n  </style>\n  <div class=\"checked\">\n  <input type=\"radio\" name=\"my-input\" id=\"yes\">\n  <label for=\"yes\">Yes</label>\n\n  <input type=\"radio\" name=\"my-input\" id=\"no\">\n  <label for=\"no\">No</label>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .checked :checked {\n    background:red;\n    margin-left:20px;\n    margin-right:20px;\n  }\n  </style>\n  <div class=\"checked\">\n  <input type=\"radio\" name=\"my-input\" id=\"yes\">\n  <label for=\"yes\">Yes</label>\n\n  <input type=\"radio\" name=\"my-input\" id=\"no\">\n  <label for=\"no\">No</label>\n  </div>\n</div>\n\n### :hover\n\n光标（鼠标指针）悬停在元素上时提供关联的样式,按照 LVHA 的循顺序声明:link－:visited－:hover－:active。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .hover:hover {\n   color:red;\n  }\n  </style>\n  <div class=\"hover\">\nhover\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .hover:hover {\n   color:red;\n  }\n  </style>\n  <div class=\"hover\">\nhover\n  </div>\n</div>\n\n### :out-of-range 和:in-range\n\n- out-of-range:表示一个 `<input>` 元素，其当前值处于属性 min 和 max 限定的范围外\n- in-range：表一个 `<input>` 元素，其当前值处于属性 min 和 max 限定的范围之内\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  input {\n    border: 1px solid black;\n  }\n  .outofrange input:in-range {\n    background-color: rgba(0, 255, 0, 0.25);\n  }\n  .outofrange input:out-of-range {\n    background-color: rgba(255, 0, 0, 0.25);\n    border: 2px solid red;\n  }\n  .outofrange input:in-range + label::after {\n    content: 'okay.';\n  }\n  .outofrange input:out-of-range + label::after {\n    content: 'out of range!';\n  }\n  </style>\n  <div class=\"outofrange\">\n    <form action=\"\" id=\"form1\">\n      <ul>Values between 1 and 10 are valid.\n        <li>\n          <input id=\"value1\" name=\"value1\" type=\"number\" placeholder=\"1 to 10\" min=\"1\" max=\"10\" value=\"12\">\n          <label for=\"value1\">Your value is </label>\n        </li>\n      </ul>\n    </form>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  input {\n    border: 1px solid black;\n  }\n  .outofrange input:in-range {\n    background-color: rgba(0, 255, 0, 0.25);\n  }\n  .outofrange input:out-of-range {\n    background-color: rgba(255, 0, 0, 0.25);\n    border: 2px solid red;\n  }\n  .outofrange input:in-range + label::after {\n    content: 'okay.';\n  }\n  .outofrange input:out-of-range + label::after {\n    content: 'out of range!';\n  }\n  </style>\n  <div class=\"outofrange\">\n    <form action=\"\" id=\"form1\">\n      <ul>Values between 1 and 10 are valid.\n        <li>\n          <input id=\"value1\" name=\"value1\" type=\"number\" placeholder=\"1 to 10\" min=\"1\" max=\"10\" value=\"12\">\n          <label for=\"value1\">Your value is </label>\n        </li>\n      </ul>\n    </form>\n  </div>\n</div>\n\n### :indeterminate\n\n表示状态不确定的表单元素。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .indeterminate input:indeterminate, .indeterminate input:indeterminate + label {\n    background: red;\n  }\n  </style>\n  <div class=\"indeterminate\">\n    <input type=\"checkbox\" id=\"checkbox\">\n    <label for=\"checkbox\">Background should be green</label></br>\n    <input type=\"radio\" id=\"radio\">\n    <label for=\"radio\">Background should be green</label>\n  </div>\n  <script>\n  var inputs = document.querySelector('.indeterminate').getElementsByTagName(\"input\");\n  for(var i = 0; i < inputs.length; i++) {\n    inputs[i].indeterminate = true;\n  }\n  </script>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .indeterminate input:indeterminate, .indeterminate input:indeterminate + label {\n    background: red;\n  }\n  </style>\n  <div class=\"indeterminate\">\n    <input type=\"checkbox\" id=\"checkbox\">\n    <label for=\"checkbox\">Background should be green</label></br>\n    <input type=\"radio\" id=\"radio\">\n    <label for=\"radio\">Background should be green</label>\n  </div>\n  <script>\n  var inputs = document.querySelector('.indeterminate').getElementsByTagName(\"input\");\n  for(var i = 0; i < inputs.length; i++) {\n    inputs[i].indeterminate = true;\n  }\n  </script>\n</div>\n\n### :default\n\n选择设置默认值的元素，该选择器可以在 `<button>`, `<input type=\"checkbox\">`, `<input type=\"radio\">`, 以及 `<option>` 上使用。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .default1 input:default {\n      box-shadow: 0 0 2px 1px red;\n    }\n    .default1 input:default + label {\n      color: red;\n    }\n  </style>\n\n  <div class=\"default1\">\n    <input type=\"radio\" name=\"season\" id=\"spring\" >\n    <label for=\"spring\">1</label>\n    <input type=\"radio\" name=\"season\" id=\"summer\" checked>\n    <label for=\"summer\">2</label>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .default1 input:default {\n      box-shadow: 0 0 2px 1px red;\n    }\n    .default1 input:default + label {\n      color: red;\n    }\n  </style>\n\n  <div class=\"default1\">\n    <input type=\"radio\" name=\"season\" id=\"spring\" >\n    <label for=\"spring\">1</label>\n    <input type=\"radio\" name=\"season\" id=\"summer\" checked>\n    <label for=\"summer\">2</label>\n  </div>\n</div>\n\n### :placeholder-shown\n\n在 placeholader 显示的时候被选择\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .placeholader input:placeholder-shown {\n      border-color: red;\n    }\n  </style>\n\n  <div class=\"placeholader\">\n    <input placeholder=\"Type something here!\">\n    </br>\n    空placeholder<input placeholder=\"\" >\n    </br>\n    无placeholder<input>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .placeholader input:placeholder-shown {\n      border-color: red;\n    }\n  </style>\n\n  <div class=\"placeholader\">\n    <input placeholder=\"Type something here!\">\n    </br>\n    空placeholder<input placeholder=\"\" >\n    </br>\n    无placeholder<input>\n  </div>\n</div>\n\n### :invalid\n\n表示任意内容未通过验证的 `<input>` 或其他 `<form>` 元素\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .invalid input:invalid {\n      background-color: red;\n    }\n  </style>\n\n  <div class=\"invalid\">\n    <form>\n      <label for=\"url_input\">Enter a URL:</label>\n      <input type=\"url\" id=\"url_input\" />\n      <br />\n      <br />\n      <label for=\"email_input\">Enter an email address:</label>\n      <input type=\"email\" id=\"email_input\" required/>\n    </form>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .invalid input:invalid {\n      background-color: red;\n    }\n  </style>\n\n  <div class=\"invalid\">\n    <form>\n      <label for=\"url_input\">Enter a URL:</label>\n      <input type=\"url\" id=\"url_input\" />\n      <br />\n      <br />\n      <label for=\"email_input\">Enter an email address:</label>\n      <input type=\"email\" id=\"email_input\" required/>\n    </form>\n  </div>\n</div>\n\n### :read-only\n\n选择只读的元素\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .readonly input:-moz-read-only {\n      background-color: #ccc;\n    }\n    /* Supported in Blink/WebKit/Edge without a prefix */\n  .readonly input:read-only {\n      background-color: #ccc;\n    }\n  .readonly p:-moz-read-only { background: lightgray; }\n  .readonly p:read-only { background: lightgray; }\n  .readonly .div:read-only { background: lightgray; }\n  </style>\n\n  <div class=\"readonly\">\n    <input type=\"text\" value=\"This is a read-only field.\" readonly>\n    <p>不可以编辑的都可以被选中</p>\n    <p contenteditable=\"true\">可以编辑的p标签就不行</p>\n    <div class=\"div\">div也一样</div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .readonly input:-moz-read-only {\n      background-color: #ccc;\n    }\n    /* Supported in Blink/WebKit/Edge without a prefix */\n  .readonly input:read-only {\n      background-color: #ccc;\n    }\n  .readonly p:-moz-read-only { background: lightgray; }\n  .readonly p:read-only { background: lightgray; }\n  .readonly .div:read-only { background: lightgray; }\n  </style>\n\n  <div class=\"readonly\">\n    <input type=\"text\" value=\"This is a read-only field.\" readonly>\n    <p>不可以编辑的都可以被选中</p>\n    <p contenteditable=\"true\">可以编辑的p标签就不行</p>\n    <div class=\"div\">div也一样</div>\n  </div>\n</div>\n\n### :read-write\n\n选择可以被用户编辑的元素\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .readwrite input:read-write {\n      background-color: #ccc;\n    }\n    /* Supported in Blink/WebKit/Edge without a prefix */\n  .readwrite input:read-write {\n      background-color: #ccc;\n    }\n  .readwrite p:read-write { background: lightgray; }\n  .readwrite .div:read-write { background: lightgray; }\n  </style>\n\n  <div class=\"readwrite\">\n    <input type=\"text\" value=\"This is a read-only field.\" >\n    <p contenteditable=\"true\">可以编辑的p标签也行</p>\n    <p>不可以编辑的不可以被选中</p>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .readwrite input:read-write {\n      background-color: #ccc;\n    }\n    /* Supported in Blink/WebKit/Edge without a prefix */\n  .readwrite input:read-write {\n      background-color: #ccc;\n    }\n  .readwrite p:read-write { background: lightgray; }\n  .readwrite .div:read-write { background: lightgray; }\n  </style>\n\n  <div class=\"readwrite\">\n    <input type=\"text\" value=\"This is a read-only field.\" >\n    <p contenteditable=\"true\">可以编辑的p标签也行</p>\n    <p>不可以编辑的不可以被选中</p>\n  </div>\n</div>\n\n### :disabled\n\n选择禁用的元素(表单元素)。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .disabled1 input:disabled {\n      background-color: #ccc;\n      cursor:not-allowed;\n    }\n    .disabled1 div:disabled {\n      background-color: #ccc;\n      cursor:not-allowed;\n    }\n  \n  </style>\n  <div class=\"disabled1\">\n    <input type=\"text\" value=\"我被禁用了，尴尬\" disabled >\n    <div disabled >禁用的div</div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .disabled1 input:disabled {\n      background-color: #ccc;\n      cursor:not-allowed;\n    }\n    .disabled1 div:disabled {\n      background-color: #ccc;\n      cursor:not-allowed;\n    }\n  \n  </style>\n  <div class=\"disabled1\">\n    <input type=\"text\" value=\"我被禁用了，尴尬\" disabled >\n    <div disabled >禁用的div</div>\n  </div>\n</div>\n\n### :enabled\n\n表示任何被启用的（enabled）元素。如果一个元素能够被激活（如选择、点击或接受文本输入），或者能够获取焦点，则该元素是启用的。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .enabled input:enabled {\n      background-color: red;\n    }\n    .enabled div:enabled {\n      background-color: red;\n    }\n  \n  </style>\n  <div class=\"enabled\">\n    <input type=\"text\" value=\"我可以输入，尴尬\"  >\n    <div  >禁用的div</div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .enabled input:enabled {\n      background-color: red;\n    }\n    .enabled div:enabled {\n      background-color: red;\n    }\n  \n  </style>\n  <div class=\"enabled\">\n    <input type=\"text\" value=\"我可以输入，尴尬\"  >\n    <div  >禁用的div</div>\n  </div>\n</div>\n\n### :lang()\n\n基于元素语言来匹配页面元素。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n   .lang div:lang(en) > q { background:red; }\n   .lang div:lang(fr) > q {background:green;}\n  </style>\n  <div class=\"lang\">\n    <div lang=\"en\"><q>英语语言</q></div>\n    <div lang=\"fr\"><q>法语语言</div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n   .lang div:lang(en) > q { background:red; }\n   .lang div:lang(fr) > q {background:green;}\n  </style>\n  <div class=\"lang\">\n    <div lang=\"en\"><q>英语语言</q></div>\n    <div lang=\"fr\"><q>法语语言</div>\n  </div>\n</div>\n\n### :not()\n\n用来匹配不符合一组选择器的元素。由于它的作用是防止特定的元素被选中，它也被称为反选伪类（negation pseudo-class）。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n   .not .fancy {\n      text-shadow: 2px 2px 3px gold;\n    }\n    /* 类名不是 `.fancy` 的 <p> 元素 */\n    .not p:not(.fancy) {\n      color: green;\n    }\n    /* 非 <p> 元素 */ \n    .not  :not(p) {\n      text-decoration: underline;\n    }\n    /* 既不是 <div> 也不是 <span> 的元素 */\n    .not  :not(div):not(span) {\n      font-weight: bold;\n    }\n    /* 类名不是 `.crazy` 或 `.fancy` 的元素 */\n    /* 注意，此语法尚未获广泛支持。 */\n    .not  :not(.crazy, .fancy) {\n      color:red;\n    }\n  </style>\n  <div class=\"not\">\n    <p>我是一个段落。</p>\n    <p class=\"fancy\">我好看极了！</p>\n    <div>我「不是」一个段落。</div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n   .not .fancy {\n      text-shadow: 2px 2px 3px gold;\n    }\n    /* 类名不是 `.fancy` 的 <p> 元素 */\n    .not p:not(.fancy) {\n      color: green;\n    }\n    /* 非 <p> 元素 */ \n    .not  :not(p) {\n      text-decoration: underline;\n    }\n    /* 既不是 <div> 也不是 <span> 的元素 */\n    .not  :not(div):not(span) {\n      font-weight: bold;\n    }\n    /* 类名不是 `.crazy` 或 `.fancy` 的元素 */\n    /* 注意，此语法尚未获广泛支持。 */\n    .not  :not(.crazy, .fancy) {\n      color:red;\n    }\n  </style>\n  <div class=\"not\">\n    <p>我是一个段落。</p>\n    <p class=\"fancy\">我好看极了！</p>\n    <div>我「不是」一个段落。</div>\n  </div>\n</div>\n\n### :focus\n\n:focus 表示获得焦点的元素（如表单输入）。当用户点击或触摸元素或通过键盘的 “tab” 键选择它时会被触发。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .focus input:focus {\n    background: red;\n  }\n  </style>\n  <div class=\"focus\">\n   <input />\n  </div>\n</div>\n\n````\n</details>\n<div class=\"demo\">\n  <style>\n  .focus input:focus {\n    background: red;\n  }\n  </style>\n  <div class=\"focus\">\n   <input />\n  </div>\n</div>\n\n### :focus-within\n\n表示一个元素获得焦点，或，该元素的后代元素获得焦点。换句话说，元素自身或者它的某个后代匹配 :focus 伪类。（shadow DOM 树中的后代也包括在内）\n\n子元素获得焦点，父元素改变样式\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .focusWithin:focus-within {\n    background: red;\n  }\n  </style>\n  <div class=\"focusWithin\">\n   <input />\n  </div>\n</div>\n````\n\n</details>\n<div class=\"demo\">\n  <style>\n  .focusWithin:focus-within {\n    background: red;\n  }\n  </style>\n  <div class=\"focusWithin\">\n   <input />\n  </div>\n</div>\n\n### :fullscreen\n\n应用于当前处于全屏显示模式的元素。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .top {\n  margin: 15px;\n}\n.main {\n  width: 100%;\n  display: flex;\n}\n.right:fullscreen{\n  background:green;\n}\n.right {\n  width: 100%;\n  height: 300px;\n  background: #dddddd;\n}\n.right:fullscreen {\n  background: green;\n  color:red;\n  font-size:20px;\n}\n</style>\n\n<div class=\"top\">\n  <button onclick=\"rightScreen()\">全屏</button>\n</div>\n<div class=\"main\">\n  <div class=\"right\">内容</div>\n</div>\n<script>\nclass fullScreen {\n  /**\n   * @description: 全屏初始化\n   * @param {Function} fn 用户浏览器不支持全屏的回调\n   */\n  constructor(fn) {\n    this.prefixName = \"\"; // 浏览器前缀\n    this.isFullscreenData = true; // 浏览器是否支持全屏\n    this.isFullscreen(fn);\n  }\n  /**\n   * @description: 将传进来的元素全屏\n   * @param {String} domName 要全屏的dom名称\n   */\n  Fullscreen(domName) {\n    const element = document.querySelector(domName);\n    const methodName =\n      this.prefixName === \"\"\n        ? \"requestFullscreen\"\n        : `${this.prefixName}RequestFullScreen`;\n    element[methodName]();\n  }\n  // 退出全屏\n  exitFullscreen() {\n    const methodName =\n      this.prefixName === \"\"\n        ? \"exitFullscreen\"\n        : `${this.prefixName}ExitFullscreen`;\n    document[methodName]();\n  }\n  /**\n   * @description: 监听进入/离开全屏\n   * @param {Function} enter 进入全屏的回调\n   *  @param {Function} quit 离开全屏的回调\n   */\n  screenChange(enter, quit) {\n    if (!this.isFullscreenData) return;\n    const methodName = `on${this.prefixName}fullscreenchange`;\n    document[methodName] = e => {\n      if (this.isElementFullScreen()) {\n        enter && enter(e); // 进入全屏回调\n      } else {\n        quit && quit(e); // 离开全屏的回调\n      }\n    };\n  }\n  /**\n   * @description: 浏览器无法进入全屏时触发,可能是技术原因，也可能是用户拒绝：比如全屏请求不是在事件处理函数中调用,会在这里拦截到错误\n   * @param {Function} enterErrorFn 回调\n   */\n  screenError(enterErrorFn) {\n    const methodName = `on${this.prefixName}fullscreenerror`;\n    document[methodName] = e => {\n      enterErrorFn && enterErrorFn(e);\n    };\n  }\n  /**\n   * @description: 是否支持全屏+判断浏览器前缀\n   * @param {Function} fn 不支持全屏的回调函数 这里设了一个默认值\n   */\n  isFullscreen(fn) {\n    let fullscreenEnabled;\n    // 判断浏览器前缀\n    if (document.fullscreenEnabled) {\n      fullscreenEnabled = document.fullscreenEnabled;\n    } else if (document.webkitFullscreenEnabled) {\n      fullscreenEnabled = document.webkitFullscreenEnabled;\n      this.prefixName = \"webkit\";\n    } else if (document.mozFullScreenEnabled) {\n      fullscreenEnabled = document.mozFullScreenEnabled;\n      this.prefixName = \"moz\";\n    } else if (document.msFullscreenEnabled) {\n      fullscreenEnabled = document.msFullscreenEnabled;\n      this.prefixName = \"ms\";\n    }\n    if (!fullscreenEnabled) {\n      this.isFullscreenData = false;\n      fn && fn(); // 执行不支持全屏的回调\n    }\n  }\n  /**\n   * @description: 检测有没有元素处于全屏状态\n   * @return 布尔值\n   */\n  isElementFullScreen() {\n    const fullscreenElement =\n      document.fullscreenElement ||\n      document.msFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.webkitFullscreenElement;\n    if (fullscreenElement === null) {\n      return false; // 当前没有元素在全屏状态\n    } else {\n      return true; // 有元素在全屏状态\n    }\n  }\n}\nlet full = new fullScreen(() => {\n  console.log(\"不支持\");\n});\nfull.screenError(e => {\n  console.log(\"进去全屏失败:\", e);\n});\n// 全屏请求必须在事件处理函数中调用，否则将会被拒绝。\n// full.Fullscreen(\".left\"); // 触发进去全屏失败回调\nconst obj = {\n  enter: e => {\n    // 如果退出全屏 退出的还是全屏状态，将会触发进入全屏的回调，这种情况比较少 注意一下\n    console.log(\"进入全屏\", e);\n  },\n  quit: e => {\n    console.log(\"退出全屏\", e);\n    // 通常不会出现嵌套的情况\n  }\n};\nfull.screenChange(obj.enter, obj.quit);\nfunction leftScreen() {\n  full.Fullscreen(\".left\");\n}\nfunction rightScreen() {\n  full.Fullscreen(\".right\");\n}\nfunction redScreen() {\n  full.Fullscreen(\".left-son\");\n}\n// 退出全屏 退出到上次的状态\nfunction exitScreen() {\n  full.exitFullscreen();\n}\n</script>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .top {\n  margin: 15px;\n}\n.main {\n  width: 100%;\n  display: flex;\n}\n.right:fullscreen{\n  background:green;\n}\n.right {\n  width: 100%;\n  height: 300px;\n  background: #dddddd;\n}\n.right:fullscreen {\n  background: green;\n  color:red;\n  font-size:20px;\n}\n</style>\n\n<div class=\"top\">\n  <button onclick=\"rightScreen()\">全屏</button>\n</div>\n<div class=\"main\">\n  <div class=\"right\">内容</div>\n</div>\n<script>\nclass fullScreen {\n  /**\n   * @description: 全屏初始化\n   * @param {Function} fn 用户浏览器不支持全屏的回调\n   */\n  constructor(fn) {\n    this.prefixName = \"\"; // 浏览器前缀\n    this.isFullscreenData = true; // 浏览器是否支持全屏\n    this.isFullscreen(fn);\n  }\n  /**\n   * @description: 将传进来的元素全屏\n   * @param {String} domName 要全屏的dom名称\n   */\n  Fullscreen(domName) {\n    const element = document.querySelector(domName);\n    const methodName =\n      this.prefixName === \"\"\n        ? \"requestFullscreen\"\n        : `${this.prefixName}RequestFullScreen`;\n    element[methodName]();\n  }\n  // 退出全屏\n  exitFullscreen() {\n    const methodName =\n      this.prefixName === \"\"\n        ? \"exitFullscreen\"\n        : `${this.prefixName}ExitFullscreen`;\n    document[methodName]();\n  }\n  /**\n   * @description: 监听进入/离开全屏\n   * @param {Function} enter 进入全屏的回调\n   *  @param {Function} quit 离开全屏的回调\n   */\n  screenChange(enter, quit) {\n    if (!this.isFullscreenData) return;\n    const methodName = `on${this.prefixName}fullscreenchange`;\n    document[methodName] = e => {\n      if (this.isElementFullScreen()) {\n        enter && enter(e); // 进入全屏回调\n      } else {\n        quit && quit(e); // 离开全屏的回调\n      }\n    };\n  }\n  /**\n   * @description: 浏览器无法进入全屏时触发,可能是技术原因，也可能是用户拒绝：比如全屏请求不是在事件处理函数中调用,会在这里拦截到错误\n   * @param {Function} enterErrorFn 回调\n   */\n  screenError(enterErrorFn) {\n    const methodName = `on${this.prefixName}fullscreenerror`;\n    document[methodName] = e => {\n      enterErrorFn && enterErrorFn(e);\n    };\n  }\n  /**\n   * @description: 是否支持全屏+判断浏览器前缀\n   * @param {Function} fn 不支持全屏的回调函数 这里设了一个默认值\n   */\n  isFullscreen(fn) {\n    let fullscreenEnabled;\n    // 判断浏览器前缀\n    if (document.fullscreenEnabled) {\n      fullscreenEnabled = document.fullscreenEnabled;\n    } else if (document.webkitFullscreenEnabled) {\n      fullscreenEnabled = document.webkitFullscreenEnabled;\n      this.prefixName = \"webkit\";\n    } else if (document.mozFullScreenEnabled) {\n      fullscreenEnabled = document.mozFullScreenEnabled;\n      this.prefixName = \"moz\";\n    } else if (document.msFullscreenEnabled) {\n      fullscreenEnabled = document.msFullscreenEnabled;\n      this.prefixName = \"ms\";\n    }\n    if (!fullscreenEnabled) {\n      this.isFullscreenData = false;\n      fn && fn(); // 执行不支持全屏的回调\n    }\n  }\n  /**\n   * @description: 检测有没有元素处于全屏状态\n   * @return 布尔值\n   */\n  isElementFullScreen() {\n    const fullscreenElement =\n      document.fullscreenElement ||\n      document.msFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.webkitFullscreenElement;\n    if (fullscreenElement === null) {\n      return false; // 当前没有元素在全屏状态\n    } else {\n      return true; // 有元素在全屏状态\n    }\n  }\n}\nlet full = new fullScreen(() => {\n  console.log(\"不支持\");\n});\nfull.screenError(e => {\n  console.log(\"进去全屏失败:\", e);\n});\n// 全屏请求必须在事件处理函数中调用，否则将会被拒绝。\n// full.Fullscreen(\".left\"); // 触发进去全屏失败回调\nconst obj = {\n  enter: e => {\n    // 如果退出全屏 退出的还是全屏状态，将会触发进入全屏的回调，这种情况比较少 注意一下\n    console.log(\"进入全屏\", e);\n  },\n  quit: e => {\n    console.log(\"退出全屏\", e);\n    // 通常不会出现嵌套的情况\n  }\n};\nfull.screenChange(obj.enter, obj.quit);\nfunction leftScreen() {\n  full.Fullscreen(\".left\");\n}\nfunction rightScreen() {\n  full.Fullscreen(\".right\");\n}\nfunction redScreen() {\n  full.Fullscreen(\".left-son\");\n}\n// 退出全屏 退出到上次的状态\nfunction exitScreen() {\n  full.exitFullscreen();\n}\n</script>\n</div>\n\n## 结语\n\n以上就是本次的全部分享内容，合理的利用伪类可以比较巧妙的实现一些特殊效果。但是部分伪类还是涉及到浏览器的兼容问题，或者还在草案之中，具体的兼容性可以为[Can I Use](https://caniuse.com/)查看\n","source":"_posts/pseudo-classes.md","raw":"---\ntitle: CSS 伪类合集分享\nabbrlink: a54a0322\ndate: 2020-06-28 10:32:54\ntags:\n  - CSS\n---\n\n<!-- demo的样式 -->\n<style>\n.demo{\n   border:1px dashed #ccc;\n   padding:5px;\n}\n.demo:hover{\n   box-shadow: 0 0 11px rgba(33,33,33,.2);\n}\n</style>\n\n## 引用\n\n分享总结一下现有的伪类和简单的 demo\n源地址：[MDN](https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes)\n\n## 伪类\n\n### :active\n\n匹配被用户激活的元素。它让页面能在浏览器监测到激活时给出反馈。当用鼠标交互时，它代表的是用户按下按键和松开按键之间的时间。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .active:active{ color:red;}\n  </style>\n  <div class=\"active\">鼠标按下就变为红色</div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .active:active{ color:red;}\n  </style>\n  <div class=\"active\">鼠标按下就变为红色</div>\n</div>\n<!-- more -->\n\n### :only-child\n\n匹配没有任何兄弟元素的元素。\n\n等效的选择器还可以写成:first-child:last-child 或者:nth-child(1):nth-last-child(1),当然,前者的权重会低一点.\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n .onlyChild :only-child {\n  color: red;\n}\n .onlyChild .haha::after {\n content:'after伪类不影响';\n}\n  </style>\n  <div class=\"onlyChild\">\n  <div>\n  直接的文本也不影响选择\n    <i>没有兄弟元素</i>\n  </div>\n\n  <div>\n    <i>有兄弟</i><br>\n    <b>有兄弟</b><br>\n    <span>有兄弟 <span>没兄弟</span></span>\n  </div>\n</div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .onlyChild :only-child {\n      color: red;\n    }\n    .onlyChild .haha::after {\n      content:'after伪类不影响';\n    }\n  </style>\n  <div class=\"onlyChild\">\n    <div class=\"haha\">\n      直接的文本也不影响选择\n      <i>没有兄弟元素,</i>\n    </div>\n    <div>\n      <i>有兄弟</i><br>\n      <b>有兄弟</b><br>\n      <span>有兄弟 <span>没兄弟</span></span>\n    </div>\n</div>\n</div>\n\n### :any-link\n\n选择器代表一个有链接锚点的元素，而不管它是否被访问过，也就是说，它会匹配每一个有**href**属性的 `<a>`、`<area>` 或 `<link>` 元素。因此，它会匹配到所有的 :link 或 :visited。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n.anyLink a:any-link {\n  color: red;\n}\n/_ WebKit browsers _/\n.anyLink a:-webkit-any-link {\ncolor: red;\n}\n</style>\n<div class=\"anyLink\">\n<a href=\"https://example.com\">href为地址</a><br>\n<a href=\"#\">href为#</a><br>\n<a href=\"\">href为空字符串</a><br>\n<div href=\"#\">href为#的div</div><br>\n<a>没有 href</a>\n</div>\n\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n.anyLink a:any-link {\n  color: red;\n}\n/_ WebKit browsers _/\n.anyLink a:-webkit-any-link {\ncolor: red;\n}\n</style>\n<div class=\"anyLink\">\n<a href=\"https://example.com\">href为地址</a><br>\n<a href=\"#\">href为#</a><br>\n<a href=\"\">href为空字符串</a><br>\n<div href=\"#\">href为#的div</div><br>\n<a>没有 href</a>\n</div>\n\n</div>\n\n### :only-of-type\n\n代表了任意一个元素，这个元素没有其他相同类型的兄弟元素。(子元素中唯一的标签)\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .onlyoftype :only-of-type {\n    color: red;\n  }\n  </style>\n  <div class=\"onlyoftype\">\n    <div>I am `div` #1.</div>\n    <p>I am the only `p` among my siblings.</p>\n    <div>I am `div` #2.</div>\n    <div>I am `div` #3.\n      <i>I am the only `i` child.</i>\n      <em>I am `em` #1.</em>\n      <b>I am `b` #2.</b>\n    </div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .onlyoftype :only-of-type {\n    color: red;\n  }\n  </style>\n  <div class=\"onlyoftype\">\n    <div>I am `div` #1.</div>\n    <p>I am the only `p` among my siblings.</p>\n    <div>I am `div` #2.</div>\n    <div>I am `div` #3.\n      <i>I am the only `i` child.</i>\n      <em>I am `em` #1.</em>\n      <b>I am `b` #2.</b>\n    </div>\n  </div>\n</div>\n\n### :blank 火狐验证\n\n没有子节点；仅有空的文本节点；仅有空白符的文本节点。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n.blanks p {\n  min-height: 30px;\n  width: 250px;\n  background-color: lightblue;\n}\n.blanks p:blank { display: none; }\n.blanks p:-moz-only-whitespace { display: none; } /* Mozilla-only pseudo-class that works like :blank will */\n</style>\n\n  <div class=\"blanks\">\n  <p>This paragraph is not empty or blank.</p>\n  <p><!--this is empty and blank --></p>\n  <p>\n    \n    <!-- this is not empty, because it has whitespace. But it is blank.-->\n    \n  </p>\n  <p>This paragraph is not empty or blank.</p>\n</div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n.blanks p {\n  min-height: 30px;\n  width: 250px;\n  background-color: lightblue;\n}\n.blanks p:blank { display: none; }\n.blanks p:-moz-only-whitespace { display: none; } /* Mozilla-only pseudo-class that works like :blank will */\n</style>\n\n  <div class=\"blanks\">\n  <p>This paragraph is not empty or blank.</p>\n  <p><!--this is empty and blank --></p>\n  <p>\n    \n    <!-- this is not empty, because it has whitespace. But it is blank.-->\n    \n  </p>\n  <p>This paragraph is not empty or blank.</p>\n</div>\n</div>\n\n### :empty\n\n代表没有子元素的元素。子元素只可以是元素节点或文本（包括空格）。注释或处理指令都不会产生影响。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .empty .box {\n        background: pink;\n        height: 80px;\n        width: 80px;\n    }\n    .empty .box:empty {\n      background: lime;\n    }\n</style>\n\n  <div class=\"empty\">\n    <div class=\"box\"><!-- I will be lime --></div>\n    <div class=\"box\">I will be pink</div>\n    <div class=\"box\">\n        <!-- I will be red because of the whitespace around this comment -->\n    </div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .empty .box {\n        background: pink;\n        height: 80px;\n        width: 80px;\n    }\n    .empty .box:empty {\n      background: lime;\n    }\n</style>\n\n  <div class=\"empty\">\n    <div class=\"box\"><!-- I will be lime --></div>\n    <div class=\"box\">I will be pink</div>\n    <div class=\"box\">\n        <!-- I will be red because of the whitespace around this comment -->\n    </div>\n  </div>\n</div>\n\n### :optional\n\n任意没有 required 属性的 `<input>`，`<select>` 或 `<textarea>` 元素使用它。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .optional input:optional {\n  border: 1px dashed red;\n}\n  </style>\n  <div class=\"optional\">\n  <input type=\"text\"/>\n  <input type=\"text\" required placeholder=\"有required的input\"/>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .optional input:optional {\n  border: 1px dashed red;\n}\n  </style>\n  <div class=\"optional\">\n  <input type=\"text\"/>\n  <input type=\"text\" required placeholder=\"有required的input\"/>\n  </div>\n</div>\n\n### :checked\n\n选择器表示任何处于选中状态的 radio(`<input type=\"radio\">`), checkbox (`<input type=\"checkbox\">`) 或(\"select\") 元素中的 option HTML 元素(\"option\")\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .checked :checked {\n    background:red;\n    margin-left:20px;\n    margin-right:20px;\n  }\n  </style>\n  <div class=\"checked\">\n  <input type=\"radio\" name=\"my-input\" id=\"yes\">\n  <label for=\"yes\">Yes</label>\n\n  <input type=\"radio\" name=\"my-input\" id=\"no\">\n  <label for=\"no\">No</label>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .checked :checked {\n    background:red;\n    margin-left:20px;\n    margin-right:20px;\n  }\n  </style>\n  <div class=\"checked\">\n  <input type=\"radio\" name=\"my-input\" id=\"yes\">\n  <label for=\"yes\">Yes</label>\n\n  <input type=\"radio\" name=\"my-input\" id=\"no\">\n  <label for=\"no\">No</label>\n  </div>\n</div>\n\n### :hover\n\n光标（鼠标指针）悬停在元素上时提供关联的样式,按照 LVHA 的循顺序声明:link－:visited－:hover－:active。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .hover:hover {\n   color:red;\n  }\n  </style>\n  <div class=\"hover\">\nhover\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .hover:hover {\n   color:red;\n  }\n  </style>\n  <div class=\"hover\">\nhover\n  </div>\n</div>\n\n### :out-of-range 和:in-range\n\n- out-of-range:表示一个 `<input>` 元素，其当前值处于属性 min 和 max 限定的范围外\n- in-range：表一个 `<input>` 元素，其当前值处于属性 min 和 max 限定的范围之内\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  input {\n    border: 1px solid black;\n  }\n  .outofrange input:in-range {\n    background-color: rgba(0, 255, 0, 0.25);\n  }\n  .outofrange input:out-of-range {\n    background-color: rgba(255, 0, 0, 0.25);\n    border: 2px solid red;\n  }\n  .outofrange input:in-range + label::after {\n    content: 'okay.';\n  }\n  .outofrange input:out-of-range + label::after {\n    content: 'out of range!';\n  }\n  </style>\n  <div class=\"outofrange\">\n    <form action=\"\" id=\"form1\">\n      <ul>Values between 1 and 10 are valid.\n        <li>\n          <input id=\"value1\" name=\"value1\" type=\"number\" placeholder=\"1 to 10\" min=\"1\" max=\"10\" value=\"12\">\n          <label for=\"value1\">Your value is </label>\n        </li>\n      </ul>\n    </form>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  input {\n    border: 1px solid black;\n  }\n  .outofrange input:in-range {\n    background-color: rgba(0, 255, 0, 0.25);\n  }\n  .outofrange input:out-of-range {\n    background-color: rgba(255, 0, 0, 0.25);\n    border: 2px solid red;\n  }\n  .outofrange input:in-range + label::after {\n    content: 'okay.';\n  }\n  .outofrange input:out-of-range + label::after {\n    content: 'out of range!';\n  }\n  </style>\n  <div class=\"outofrange\">\n    <form action=\"\" id=\"form1\">\n      <ul>Values between 1 and 10 are valid.\n        <li>\n          <input id=\"value1\" name=\"value1\" type=\"number\" placeholder=\"1 to 10\" min=\"1\" max=\"10\" value=\"12\">\n          <label for=\"value1\">Your value is </label>\n        </li>\n      </ul>\n    </form>\n  </div>\n</div>\n\n### :indeterminate\n\n表示状态不确定的表单元素。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .indeterminate input:indeterminate, .indeterminate input:indeterminate + label {\n    background: red;\n  }\n  </style>\n  <div class=\"indeterminate\">\n    <input type=\"checkbox\" id=\"checkbox\">\n    <label for=\"checkbox\">Background should be green</label></br>\n    <input type=\"radio\" id=\"radio\">\n    <label for=\"radio\">Background should be green</label>\n  </div>\n  <script>\n  var inputs = document.querySelector('.indeterminate').getElementsByTagName(\"input\");\n  for(var i = 0; i < inputs.length; i++) {\n    inputs[i].indeterminate = true;\n  }\n  </script>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .indeterminate input:indeterminate, .indeterminate input:indeterminate + label {\n    background: red;\n  }\n  </style>\n  <div class=\"indeterminate\">\n    <input type=\"checkbox\" id=\"checkbox\">\n    <label for=\"checkbox\">Background should be green</label></br>\n    <input type=\"radio\" id=\"radio\">\n    <label for=\"radio\">Background should be green</label>\n  </div>\n  <script>\n  var inputs = document.querySelector('.indeterminate').getElementsByTagName(\"input\");\n  for(var i = 0; i < inputs.length; i++) {\n    inputs[i].indeterminate = true;\n  }\n  </script>\n</div>\n\n### :default\n\n选择设置默认值的元素，该选择器可以在 `<button>`, `<input type=\"checkbox\">`, `<input type=\"radio\">`, 以及 `<option>` 上使用。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .default1 input:default {\n      box-shadow: 0 0 2px 1px red;\n    }\n    .default1 input:default + label {\n      color: red;\n    }\n  </style>\n\n  <div class=\"default1\">\n    <input type=\"radio\" name=\"season\" id=\"spring\" >\n    <label for=\"spring\">1</label>\n    <input type=\"radio\" name=\"season\" id=\"summer\" checked>\n    <label for=\"summer\">2</label>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .default1 input:default {\n      box-shadow: 0 0 2px 1px red;\n    }\n    .default1 input:default + label {\n      color: red;\n    }\n  </style>\n\n  <div class=\"default1\">\n    <input type=\"radio\" name=\"season\" id=\"spring\" >\n    <label for=\"spring\">1</label>\n    <input type=\"radio\" name=\"season\" id=\"summer\" checked>\n    <label for=\"summer\">2</label>\n  </div>\n</div>\n\n### :placeholder-shown\n\n在 placeholader 显示的时候被选择\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .placeholader input:placeholder-shown {\n      border-color: red;\n    }\n  </style>\n\n  <div class=\"placeholader\">\n    <input placeholder=\"Type something here!\">\n    </br>\n    空placeholder<input placeholder=\"\" >\n    </br>\n    无placeholder<input>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .placeholader input:placeholder-shown {\n      border-color: red;\n    }\n  </style>\n\n  <div class=\"placeholader\">\n    <input placeholder=\"Type something here!\">\n    </br>\n    空placeholder<input placeholder=\"\" >\n    </br>\n    无placeholder<input>\n  </div>\n</div>\n\n### :invalid\n\n表示任意内容未通过验证的 `<input>` 或其他 `<form>` 元素\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .invalid input:invalid {\n      background-color: red;\n    }\n  </style>\n\n  <div class=\"invalid\">\n    <form>\n      <label for=\"url_input\">Enter a URL:</label>\n      <input type=\"url\" id=\"url_input\" />\n      <br />\n      <br />\n      <label for=\"email_input\">Enter an email address:</label>\n      <input type=\"email\" id=\"email_input\" required/>\n    </form>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .invalid input:invalid {\n      background-color: red;\n    }\n  </style>\n\n  <div class=\"invalid\">\n    <form>\n      <label for=\"url_input\">Enter a URL:</label>\n      <input type=\"url\" id=\"url_input\" />\n      <br />\n      <br />\n      <label for=\"email_input\">Enter an email address:</label>\n      <input type=\"email\" id=\"email_input\" required/>\n    </form>\n  </div>\n</div>\n\n### :read-only\n\n选择只读的元素\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .readonly input:-moz-read-only {\n      background-color: #ccc;\n    }\n    /* Supported in Blink/WebKit/Edge without a prefix */\n  .readonly input:read-only {\n      background-color: #ccc;\n    }\n  .readonly p:-moz-read-only { background: lightgray; }\n  .readonly p:read-only { background: lightgray; }\n  .readonly .div:read-only { background: lightgray; }\n  </style>\n\n  <div class=\"readonly\">\n    <input type=\"text\" value=\"This is a read-only field.\" readonly>\n    <p>不可以编辑的都可以被选中</p>\n    <p contenteditable=\"true\">可以编辑的p标签就不行</p>\n    <div class=\"div\">div也一样</div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .readonly input:-moz-read-only {\n      background-color: #ccc;\n    }\n    /* Supported in Blink/WebKit/Edge without a prefix */\n  .readonly input:read-only {\n      background-color: #ccc;\n    }\n  .readonly p:-moz-read-only { background: lightgray; }\n  .readonly p:read-only { background: lightgray; }\n  .readonly .div:read-only { background: lightgray; }\n  </style>\n\n  <div class=\"readonly\">\n    <input type=\"text\" value=\"This is a read-only field.\" readonly>\n    <p>不可以编辑的都可以被选中</p>\n    <p contenteditable=\"true\">可以编辑的p标签就不行</p>\n    <div class=\"div\">div也一样</div>\n  </div>\n</div>\n\n### :read-write\n\n选择可以被用户编辑的元素\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .readwrite input:read-write {\n      background-color: #ccc;\n    }\n    /* Supported in Blink/WebKit/Edge without a prefix */\n  .readwrite input:read-write {\n      background-color: #ccc;\n    }\n  .readwrite p:read-write { background: lightgray; }\n  .readwrite .div:read-write { background: lightgray; }\n  </style>\n\n  <div class=\"readwrite\">\n    <input type=\"text\" value=\"This is a read-only field.\" >\n    <p contenteditable=\"true\">可以编辑的p标签也行</p>\n    <p>不可以编辑的不可以被选中</p>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .readwrite input:read-write {\n      background-color: #ccc;\n    }\n    /* Supported in Blink/WebKit/Edge without a prefix */\n  .readwrite input:read-write {\n      background-color: #ccc;\n    }\n  .readwrite p:read-write { background: lightgray; }\n  .readwrite .div:read-write { background: lightgray; }\n  </style>\n\n  <div class=\"readwrite\">\n    <input type=\"text\" value=\"This is a read-only field.\" >\n    <p contenteditable=\"true\">可以编辑的p标签也行</p>\n    <p>不可以编辑的不可以被选中</p>\n  </div>\n</div>\n\n### :disabled\n\n选择禁用的元素(表单元素)。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .disabled1 input:disabled {\n      background-color: #ccc;\n      cursor:not-allowed;\n    }\n    .disabled1 div:disabled {\n      background-color: #ccc;\n      cursor:not-allowed;\n    }\n  \n  </style>\n  <div class=\"disabled1\">\n    <input type=\"text\" value=\"我被禁用了，尴尬\" disabled >\n    <div disabled >禁用的div</div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .disabled1 input:disabled {\n      background-color: #ccc;\n      cursor:not-allowed;\n    }\n    .disabled1 div:disabled {\n      background-color: #ccc;\n      cursor:not-allowed;\n    }\n  \n  </style>\n  <div class=\"disabled1\">\n    <input type=\"text\" value=\"我被禁用了，尴尬\" disabled >\n    <div disabled >禁用的div</div>\n  </div>\n</div>\n\n### :enabled\n\n表示任何被启用的（enabled）元素。如果一个元素能够被激活（如选择、点击或接受文本输入），或者能够获取焦点，则该元素是启用的。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n    .enabled input:enabled {\n      background-color: red;\n    }\n    .enabled div:enabled {\n      background-color: red;\n    }\n  \n  </style>\n  <div class=\"enabled\">\n    <input type=\"text\" value=\"我可以输入，尴尬\"  >\n    <div  >禁用的div</div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n    .enabled input:enabled {\n      background-color: red;\n    }\n    .enabled div:enabled {\n      background-color: red;\n    }\n  \n  </style>\n  <div class=\"enabled\">\n    <input type=\"text\" value=\"我可以输入，尴尬\"  >\n    <div  >禁用的div</div>\n  </div>\n</div>\n\n### :lang()\n\n基于元素语言来匹配页面元素。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n   .lang div:lang(en) > q { background:red; }\n   .lang div:lang(fr) > q {background:green;}\n  </style>\n  <div class=\"lang\">\n    <div lang=\"en\"><q>英语语言</q></div>\n    <div lang=\"fr\"><q>法语语言</div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n   .lang div:lang(en) > q { background:red; }\n   .lang div:lang(fr) > q {background:green;}\n  </style>\n  <div class=\"lang\">\n    <div lang=\"en\"><q>英语语言</q></div>\n    <div lang=\"fr\"><q>法语语言</div>\n  </div>\n</div>\n\n### :not()\n\n用来匹配不符合一组选择器的元素。由于它的作用是防止特定的元素被选中，它也被称为反选伪类（negation pseudo-class）。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n   .not .fancy {\n      text-shadow: 2px 2px 3px gold;\n    }\n    /* 类名不是 `.fancy` 的 <p> 元素 */\n    .not p:not(.fancy) {\n      color: green;\n    }\n    /* 非 <p> 元素 */ \n    .not  :not(p) {\n      text-decoration: underline;\n    }\n    /* 既不是 <div> 也不是 <span> 的元素 */\n    .not  :not(div):not(span) {\n      font-weight: bold;\n    }\n    /* 类名不是 `.crazy` 或 `.fancy` 的元素 */\n    /* 注意，此语法尚未获广泛支持。 */\n    .not  :not(.crazy, .fancy) {\n      color:red;\n    }\n  </style>\n  <div class=\"not\">\n    <p>我是一个段落。</p>\n    <p class=\"fancy\">我好看极了！</p>\n    <div>我「不是」一个段落。</div>\n  </div>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n   .not .fancy {\n      text-shadow: 2px 2px 3px gold;\n    }\n    /* 类名不是 `.fancy` 的 <p> 元素 */\n    .not p:not(.fancy) {\n      color: green;\n    }\n    /* 非 <p> 元素 */ \n    .not  :not(p) {\n      text-decoration: underline;\n    }\n    /* 既不是 <div> 也不是 <span> 的元素 */\n    .not  :not(div):not(span) {\n      font-weight: bold;\n    }\n    /* 类名不是 `.crazy` 或 `.fancy` 的元素 */\n    /* 注意，此语法尚未获广泛支持。 */\n    .not  :not(.crazy, .fancy) {\n      color:red;\n    }\n  </style>\n  <div class=\"not\">\n    <p>我是一个段落。</p>\n    <p class=\"fancy\">我好看极了！</p>\n    <div>我「不是」一个段落。</div>\n  </div>\n</div>\n\n### :focus\n\n:focus 表示获得焦点的元素（如表单输入）。当用户点击或触摸元素或通过键盘的 “tab” 键选择它时会被触发。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .focus input:focus {\n    background: red;\n  }\n  </style>\n  <div class=\"focus\">\n   <input />\n  </div>\n</div>\n\n````\n</details>\n<div class=\"demo\">\n  <style>\n  .focus input:focus {\n    background: red;\n  }\n  </style>\n  <div class=\"focus\">\n   <input />\n  </div>\n</div>\n\n### :focus-within\n\n表示一个元素获得焦点，或，该元素的后代元素获得焦点。换句话说，元素自身或者它的某个后代匹配 :focus 伪类。（shadow DOM 树中的后代也包括在内）\n\n子元素获得焦点，父元素改变样式\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .focusWithin:focus-within {\n    background: red;\n  }\n  </style>\n  <div class=\"focusWithin\">\n   <input />\n  </div>\n</div>\n````\n\n</details>\n<div class=\"demo\">\n  <style>\n  .focusWithin:focus-within {\n    background: red;\n  }\n  </style>\n  <div class=\"focusWithin\">\n   <input />\n  </div>\n</div>\n\n### :fullscreen\n\n应用于当前处于全屏显示模式的元素。\n\n<details>\n<summary>展开查看</summary>\n```html\n<div class=\"demo\">\n  <style>\n  .top {\n  margin: 15px;\n}\n.main {\n  width: 100%;\n  display: flex;\n}\n.right:fullscreen{\n  background:green;\n}\n.right {\n  width: 100%;\n  height: 300px;\n  background: #dddddd;\n}\n.right:fullscreen {\n  background: green;\n  color:red;\n  font-size:20px;\n}\n</style>\n\n<div class=\"top\">\n  <button onclick=\"rightScreen()\">全屏</button>\n</div>\n<div class=\"main\">\n  <div class=\"right\">内容</div>\n</div>\n<script>\nclass fullScreen {\n  /**\n   * @description: 全屏初始化\n   * @param {Function} fn 用户浏览器不支持全屏的回调\n   */\n  constructor(fn) {\n    this.prefixName = \"\"; // 浏览器前缀\n    this.isFullscreenData = true; // 浏览器是否支持全屏\n    this.isFullscreen(fn);\n  }\n  /**\n   * @description: 将传进来的元素全屏\n   * @param {String} domName 要全屏的dom名称\n   */\n  Fullscreen(domName) {\n    const element = document.querySelector(domName);\n    const methodName =\n      this.prefixName === \"\"\n        ? \"requestFullscreen\"\n        : `${this.prefixName}RequestFullScreen`;\n    element[methodName]();\n  }\n  // 退出全屏\n  exitFullscreen() {\n    const methodName =\n      this.prefixName === \"\"\n        ? \"exitFullscreen\"\n        : `${this.prefixName}ExitFullscreen`;\n    document[methodName]();\n  }\n  /**\n   * @description: 监听进入/离开全屏\n   * @param {Function} enter 进入全屏的回调\n   *  @param {Function} quit 离开全屏的回调\n   */\n  screenChange(enter, quit) {\n    if (!this.isFullscreenData) return;\n    const methodName = `on${this.prefixName}fullscreenchange`;\n    document[methodName] = e => {\n      if (this.isElementFullScreen()) {\n        enter && enter(e); // 进入全屏回调\n      } else {\n        quit && quit(e); // 离开全屏的回调\n      }\n    };\n  }\n  /**\n   * @description: 浏览器无法进入全屏时触发,可能是技术原因，也可能是用户拒绝：比如全屏请求不是在事件处理函数中调用,会在这里拦截到错误\n   * @param {Function} enterErrorFn 回调\n   */\n  screenError(enterErrorFn) {\n    const methodName = `on${this.prefixName}fullscreenerror`;\n    document[methodName] = e => {\n      enterErrorFn && enterErrorFn(e);\n    };\n  }\n  /**\n   * @description: 是否支持全屏+判断浏览器前缀\n   * @param {Function} fn 不支持全屏的回调函数 这里设了一个默认值\n   */\n  isFullscreen(fn) {\n    let fullscreenEnabled;\n    // 判断浏览器前缀\n    if (document.fullscreenEnabled) {\n      fullscreenEnabled = document.fullscreenEnabled;\n    } else if (document.webkitFullscreenEnabled) {\n      fullscreenEnabled = document.webkitFullscreenEnabled;\n      this.prefixName = \"webkit\";\n    } else if (document.mozFullScreenEnabled) {\n      fullscreenEnabled = document.mozFullScreenEnabled;\n      this.prefixName = \"moz\";\n    } else if (document.msFullscreenEnabled) {\n      fullscreenEnabled = document.msFullscreenEnabled;\n      this.prefixName = \"ms\";\n    }\n    if (!fullscreenEnabled) {\n      this.isFullscreenData = false;\n      fn && fn(); // 执行不支持全屏的回调\n    }\n  }\n  /**\n   * @description: 检测有没有元素处于全屏状态\n   * @return 布尔值\n   */\n  isElementFullScreen() {\n    const fullscreenElement =\n      document.fullscreenElement ||\n      document.msFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.webkitFullscreenElement;\n    if (fullscreenElement === null) {\n      return false; // 当前没有元素在全屏状态\n    } else {\n      return true; // 有元素在全屏状态\n    }\n  }\n}\nlet full = new fullScreen(() => {\n  console.log(\"不支持\");\n});\nfull.screenError(e => {\n  console.log(\"进去全屏失败:\", e);\n});\n// 全屏请求必须在事件处理函数中调用，否则将会被拒绝。\n// full.Fullscreen(\".left\"); // 触发进去全屏失败回调\nconst obj = {\n  enter: e => {\n    // 如果退出全屏 退出的还是全屏状态，将会触发进入全屏的回调，这种情况比较少 注意一下\n    console.log(\"进入全屏\", e);\n  },\n  quit: e => {\n    console.log(\"退出全屏\", e);\n    // 通常不会出现嵌套的情况\n  }\n};\nfull.screenChange(obj.enter, obj.quit);\nfunction leftScreen() {\n  full.Fullscreen(\".left\");\n}\nfunction rightScreen() {\n  full.Fullscreen(\".right\");\n}\nfunction redScreen() {\n  full.Fullscreen(\".left-son\");\n}\n// 退出全屏 退出到上次的状态\nfunction exitScreen() {\n  full.exitFullscreen();\n}\n</script>\n</div>\n```\n</details>\n<div class=\"demo\">\n  <style>\n  .top {\n  margin: 15px;\n}\n.main {\n  width: 100%;\n  display: flex;\n}\n.right:fullscreen{\n  background:green;\n}\n.right {\n  width: 100%;\n  height: 300px;\n  background: #dddddd;\n}\n.right:fullscreen {\n  background: green;\n  color:red;\n  font-size:20px;\n}\n</style>\n\n<div class=\"top\">\n  <button onclick=\"rightScreen()\">全屏</button>\n</div>\n<div class=\"main\">\n  <div class=\"right\">内容</div>\n</div>\n<script>\nclass fullScreen {\n  /**\n   * @description: 全屏初始化\n   * @param {Function} fn 用户浏览器不支持全屏的回调\n   */\n  constructor(fn) {\n    this.prefixName = \"\"; // 浏览器前缀\n    this.isFullscreenData = true; // 浏览器是否支持全屏\n    this.isFullscreen(fn);\n  }\n  /**\n   * @description: 将传进来的元素全屏\n   * @param {String} domName 要全屏的dom名称\n   */\n  Fullscreen(domName) {\n    const element = document.querySelector(domName);\n    const methodName =\n      this.prefixName === \"\"\n        ? \"requestFullscreen\"\n        : `${this.prefixName}RequestFullScreen`;\n    element[methodName]();\n  }\n  // 退出全屏\n  exitFullscreen() {\n    const methodName =\n      this.prefixName === \"\"\n        ? \"exitFullscreen\"\n        : `${this.prefixName}ExitFullscreen`;\n    document[methodName]();\n  }\n  /**\n   * @description: 监听进入/离开全屏\n   * @param {Function} enter 进入全屏的回调\n   *  @param {Function} quit 离开全屏的回调\n   */\n  screenChange(enter, quit) {\n    if (!this.isFullscreenData) return;\n    const methodName = `on${this.prefixName}fullscreenchange`;\n    document[methodName] = e => {\n      if (this.isElementFullScreen()) {\n        enter && enter(e); // 进入全屏回调\n      } else {\n        quit && quit(e); // 离开全屏的回调\n      }\n    };\n  }\n  /**\n   * @description: 浏览器无法进入全屏时触发,可能是技术原因，也可能是用户拒绝：比如全屏请求不是在事件处理函数中调用,会在这里拦截到错误\n   * @param {Function} enterErrorFn 回调\n   */\n  screenError(enterErrorFn) {\n    const methodName = `on${this.prefixName}fullscreenerror`;\n    document[methodName] = e => {\n      enterErrorFn && enterErrorFn(e);\n    };\n  }\n  /**\n   * @description: 是否支持全屏+判断浏览器前缀\n   * @param {Function} fn 不支持全屏的回调函数 这里设了一个默认值\n   */\n  isFullscreen(fn) {\n    let fullscreenEnabled;\n    // 判断浏览器前缀\n    if (document.fullscreenEnabled) {\n      fullscreenEnabled = document.fullscreenEnabled;\n    } else if (document.webkitFullscreenEnabled) {\n      fullscreenEnabled = document.webkitFullscreenEnabled;\n      this.prefixName = \"webkit\";\n    } else if (document.mozFullScreenEnabled) {\n      fullscreenEnabled = document.mozFullScreenEnabled;\n      this.prefixName = \"moz\";\n    } else if (document.msFullscreenEnabled) {\n      fullscreenEnabled = document.msFullscreenEnabled;\n      this.prefixName = \"ms\";\n    }\n    if (!fullscreenEnabled) {\n      this.isFullscreenData = false;\n      fn && fn(); // 执行不支持全屏的回调\n    }\n  }\n  /**\n   * @description: 检测有没有元素处于全屏状态\n   * @return 布尔值\n   */\n  isElementFullScreen() {\n    const fullscreenElement =\n      document.fullscreenElement ||\n      document.msFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.webkitFullscreenElement;\n    if (fullscreenElement === null) {\n      return false; // 当前没有元素在全屏状态\n    } else {\n      return true; // 有元素在全屏状态\n    }\n  }\n}\nlet full = new fullScreen(() => {\n  console.log(\"不支持\");\n});\nfull.screenError(e => {\n  console.log(\"进去全屏失败:\", e);\n});\n// 全屏请求必须在事件处理函数中调用，否则将会被拒绝。\n// full.Fullscreen(\".left\"); // 触发进去全屏失败回调\nconst obj = {\n  enter: e => {\n    // 如果退出全屏 退出的还是全屏状态，将会触发进入全屏的回调，这种情况比较少 注意一下\n    console.log(\"进入全屏\", e);\n  },\n  quit: e => {\n    console.log(\"退出全屏\", e);\n    // 通常不会出现嵌套的情况\n  }\n};\nfull.screenChange(obj.enter, obj.quit);\nfunction leftScreen() {\n  full.Fullscreen(\".left\");\n}\nfunction rightScreen() {\n  full.Fullscreen(\".right\");\n}\nfunction redScreen() {\n  full.Fullscreen(\".left-son\");\n}\n// 退出全屏 退出到上次的状态\nfunction exitScreen() {\n  full.exitFullscreen();\n}\n</script>\n</div>\n\n## 结语\n\n以上就是本次的全部分享内容，合理的利用伪类可以比较巧妙的实现一些特殊效果。但是部分伪类还是涉及到浏览器的兼容问题，或者还在草案之中，具体的兼容性可以为[Can I Use](https://caniuse.com/)查看\n","slug":"pseudo-classes","published":1,"updated":"2020-07-26T15:45:00.644Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnci0015vwtf6v8tf6bl","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><style>.demo{border:1px dashed #ccc;padding:5px}.demo:hover{box-shadow:0 0 11px rgba(33,33,33,.2)}</style><h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p>分享总结一下现有的伪类和简单的 demo<br>源地址：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes\" target=\"_blank\" rel=\"noopener\">MDN</a></p><h2 id=\"伪类\"><a href=\"#伪类\" class=\"headerlink\" title=\"伪类\"></a>伪类</h2><h3 id=\"active\"><a href=\"#active\" class=\"headerlink\" title=\":active\"></a>:active</h3><p>匹配被用户激活的元素。它让页面能在浏览器监测到激活时给出反馈。当用鼠标交互时，它代表的是用户按下按键和松开按键之间的时间。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.active</span><span class=\"hljs-selector-pseudo\">:active</span>&#123; <span class=\"hljs-attribute\">color</span>:red;&#125;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"active\"</span>&gt;</span>鼠标按下就变为红色<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.active:active{color:red}</style><div class=\"active\">鼠标按下就变为红色</div></div><a id=\"more\"></a><h3 id=\"only-child\"><a href=\"#only-child\" class=\"headerlink\" title=\":only-child\"></a>:only-child</h3><p>匹配没有任何兄弟元素的元素。</p><p>等效的选择器还可以写成:first-child:last-child 或者:nth-child(1):nth-last-child(1),当然,前者的权重会低一点.</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\"> <span class=\"hljs-selector-class\">.onlyChild</span> <span class=\"hljs-selector-pseudo\">:only-child</span> &#123;</span><br>  color: red;<br>&#125;<br><span class=\"css\"> <span class=\"hljs-selector-class\">.onlyChild</span> <span class=\"hljs-selector-class\">.haha</span><span class=\"hljs-selector-pseudo\">::after</span> &#123;</span><br> content:'after伪类不影响';<br>&#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"onlyChild\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>  直接的文本也不影响选择<br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span>&gt;</span>没有兄弟元素<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span>&gt;</span>有兄弟<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">b</span>&gt;</span>有兄弟<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">b</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>有兄弟 <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>没兄弟<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.onlyChild :only-child{color:red}.onlyChild .haha::after{content:'after伪类不影响'}</style><div class=\"onlyChild\"><div class=\"haha\">直接的文本也不影响选择 <i>没有兄弟元素,</i></div><div><i>有兄弟</i><br><b>有兄弟</b><br><span>有兄弟 <span>没兄弟</span></span></div></div></div><h3 id=\"any-link\"><a href=\"#any-link\" class=\"headerlink\" title=\":any-link\"></a>:any-link</h3><p>选择器代表一个有链接锚点的元素，而不管它是否被访问过，也就是说，它会匹配每一个有<strong>href</strong>属性的 <code>&lt;a&gt;</code>、<code>&lt;area&gt;</code> 或 <code>&lt;link&gt;</code> 元素。因此，它会匹配到所有的 :link 或 :visited。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\"><span class=\"hljs-selector-class\">.anyLink</span> <span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-pseudo\">:any-link</span> &#123;</span><br>  color: red;<br>&#125;<br>/_ WebKit browsers _/<br><span class=\"css\"><span class=\"hljs-selector-class\">.anyLink</span> <span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-pseudo\">:-webkit-any-link</span> &#123;</span><br>color: red;<br>&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"anyLink\"</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"https://example.com\"</span>&gt;</span>href为地址<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span>&gt;</span>href为#<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"\"</span>&gt;</span>href为空字符串<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span>&gt;</span>href为#的div<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span>&gt;</span>没有 href<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.anyLink a:any-link{color:red}/_ WebKit browsers _/ .anyLink a:-webkit-any-link{color:red}</style><div class=\"anyLink\"><a href=\"https://example.com\" target=\"_blank\" rel=\"noopener\">href为地址</a><br><a href=\"#\">href为#</a><br><a href=\"\">href为空字符串</a><br><div href=\"#\">href为#的div</div><br><a>没有 href</a></div></div><h3 id=\"only-of-type\"><a href=\"#only-of-type\" class=\"headerlink\" title=\":only-of-type\"></a>:only-of-type</h3><p>代表了任意一个元素，这个元素没有其他相同类型的兄弟元素。(子元素中唯一的标签)</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.onlyoftype</span> <span class=\"hljs-selector-pseudo\">:only-of-type</span> &#123;</span><br>    color: red;<br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"onlyoftype\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>I am `div` #1.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>I am the only `p` among my siblings.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>I am `div` #2.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>I am `div` #3.<br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span>&gt;</span>I am the only `i` child.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">em</span>&gt;</span>I am `em` #1.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">em</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">b</span>&gt;</span>I am `b` #2.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">b</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.onlyoftype :only-of-type{color:red}</style><div class=\"onlyoftype\"><div>I am `div` #1.</div><p>I am the only `p` among my siblings.</p><div>I am `div` #2.</div><div>I am `div` #3. <i>I am the only `i` child.</i> <em>I am `em` #1.</em> <b>I am `b` #2.</b></div></div></div><h3 id=\"blank-火狐验证\"><a href=\"#blank-火狐验证\" class=\"headerlink\" title=\":blank 火狐验证\"></a>:blank 火狐验证</h3><p>没有子节点；仅有空的文本节点；仅有空白符的文本节点。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\"><span class=\"hljs-selector-class\">.blanks</span> <span class=\"hljs-selector-tag\">p</span> &#123;</span><br>  min-height: 30px;<br>  width: 250px;<br>  background-color: lightblue;<br>&#125;<br><span class=\"css\"><span class=\"hljs-selector-class\">.blanks</span> <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:blank</span> &#123; <span class=\"hljs-attribute\">display</span>: none; &#125;</span><br><span class=\"css\"><span class=\"hljs-selector-class\">.blanks</span> <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:-moz-only-whitespace</span> &#123; <span class=\"hljs-attribute\">display</span>: none; &#125; <span class=\"hljs-comment\">/* Mozilla-only pseudo-class that works like :blank will */</span></span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"blanks\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>This paragraph is not empty or blank.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span><span class=\"hljs-comment\">&lt;!--this is empty and blank --&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span><br>    <br>    <span class=\"hljs-comment\">&lt;!-- this is not empty, because it has whitespace. But it is blank.--&gt;</span><br>    <br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>This paragraph is not empty or blank.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.blanks p{min-height:30px;width:250px;background-color:#add8e6}.blanks p:blank{display:none}.blanks p:-moz-only-whitespace{display:none}</style><div class=\"blanks\"><p>This paragraph is not empty or blank.</p><p></p><p><pre><code>&lt;!-- this is not empty, because it has whitespace. But it is blank.--&gt;</code></pre></p><p>This paragraph is not empty or blank.</p></div></div><h3 id=\"empty\"><a href=\"#empty\" class=\"headerlink\" title=\":empty\"></a>:empty</h3><p>代表没有子元素的元素。子元素只可以是元素节点或文本（包括空格）。注释或处理指令都不会产生影响。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.empty</span> <span class=\"hljs-selector-class\">.box</span> &#123;</span><br>        background: pink;<br>        height: 80px;<br>        width: 80px;<br>    &#125;<br><span class=\"css\">    <span class=\"hljs-selector-class\">.empty</span> <span class=\"hljs-selector-class\">.box</span><span class=\"hljs-selector-pseudo\">:empty</span> &#123;</span><br>      background: lime;<br>    &#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"empty\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"box\"</span>&gt;</span><span class=\"hljs-comment\">&lt;!-- I will be lime --&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"box\"</span>&gt;</span>I will be pink<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"box\"</span>&gt;</span><br>        <span class=\"hljs-comment\">&lt;!-- I will be red because of the whitespace around this comment --&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.empty .box{background:pink;height:80px;width:80px}.empty .box:empty{background:#0f0}</style><div class=\"empty\"><div class=\"box\"></div><div class=\"box\">I will be pink</div><div class=\"box\"></div></div></div><h3 id=\"optional\"><a href=\"#optional\" class=\"headerlink\" title=\":optional\"></a>:optional</h3><p>任意没有 required 属性的 <code>&lt;input&gt;</code>，<code>&lt;select&gt;</code> 或 <code>&lt;textarea&gt;</code> 元素使用它。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.optional</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:optional</span> &#123;</span><br>  border: 1px dashed red;<br>&#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"optional\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">required</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"有required的input\"</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.optional input:optional{border:1px dashed red}</style><div class=\"optional\"><input type=\"text\"> <input type=\"text\" required placeholder=\"有required的input\"></div></div><h3 id=\"checked\"><a href=\"#checked\" class=\"headerlink\" title=\":checked\"></a>:checked</h3><p>选择器表示任何处于选中状态的 radio(<code>&lt;input type=&quot;radio&quot;&gt;</code>), checkbox (<code>&lt;input type=&quot;checkbox&quot;&gt;</code>) 或(“select”) 元素中的 option HTML 元素(“option”)</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.checked</span> <span class=\"hljs-selector-pseudo\">:checked</span> &#123;</span><br><span class=\"css\">    <span class=\"hljs-selector-tag\">background</span><span class=\"hljs-selector-pseudo\">:red</span>;</span><br><span class=\"css\">    <span class=\"hljs-selector-tag\">margin-left</span><span class=\"hljs-selector-pseudo\">:20px</span>;</span><br><span class=\"css\">    <span class=\"hljs-selector-tag\">margin-right</span><span class=\"hljs-selector-pseudo\">:20px</span>;</span><br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"checked\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"radio\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"my-input\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"yes\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"yes\"</span>&gt;</span>Yes<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"radio\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"my-input\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"no\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"no\"</span>&gt;</span>No<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.checked :checked{background:red;margin-left:20px;margin-right:20px}</style><div class=\"checked\"><input type=\"radio\" name=\"my-input\" id=\"yes\"><label for=\"yes\">Yes</label><input type=\"radio\" name=\"my-input\" id=\"no\"><label for=\"no\">No</label></div></div><h3 id=\"hover\"><a href=\"#hover\" class=\"headerlink\" title=\":hover\"></a>:hover</h3><p>光标（鼠标指针）悬停在元素上时提供关联的样式,按照 LVHA 的循顺序声明:link－:visited－:hover－:active。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.hover</span><span class=\"hljs-selector-pseudo\">:hover</span> &#123;</span><br><span class=\"css\">   <span class=\"hljs-selector-tag\">color</span><span class=\"hljs-selector-pseudo\">:red</span>;</span><br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"hover\"</span>&gt;</span><br>hover<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.hover:hover{color:red}</style><div class=\"hover\">hover</div></div><h3 id=\"out-of-range-和-in-range\"><a href=\"#out-of-range-和-in-range\" class=\"headerlink\" title=\":out-of-range 和:in-range\"></a>:out-of-range 和:in-range</h3><ul><li>out-of-range:表示一个 <code>&lt;input&gt;</code> 元素，其当前值处于属性 min 和 max 限定的范围外</li><li>in-range：表一个 <code>&lt;input&gt;</code> 元素，其当前值处于属性 min 和 max 限定的范围之内</li></ul><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br>  input &#123;<br>    border: 1px solid black;<br>  &#125;<br><span class=\"css\">  <span class=\"hljs-selector-class\">.outofrange</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:in-range</span> &#123;</span><br><span class=\"css\">    <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-tag\">rgba</span>(0, 255, 0, 0<span class=\"hljs-selector-class\">.25</span>);</span><br>  &#125;<br><span class=\"css\">  <span class=\"hljs-selector-class\">.outofrange</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:out-of-range</span> &#123;</span><br><span class=\"css\">    <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-tag\">rgba</span>(255, 0, 0, 0<span class=\"hljs-selector-class\">.25</span>);</span><br>    border: 2px solid red;<br>  &#125;<br><span class=\"css\">  <span class=\"hljs-selector-class\">.outofrange</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:in-range</span> + <span class=\"hljs-selector-tag\">label</span><span class=\"hljs-selector-pseudo\">::after</span> &#123;</span><br>    content: 'okay.';<br>  &#125;<br><span class=\"css\">  <span class=\"hljs-selector-class\">.outofrange</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:out-of-range</span> + <span class=\"hljs-selector-tag\">label</span><span class=\"hljs-selector-pseudo\">::after</span> &#123;</span><br>    content: 'out of range!';<br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"outofrange\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">\"\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"form1\"</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>Values between 1 and 10 are valid.<br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><br>          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"value1\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"value1\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"1 to 10\"</span> <span class=\"hljs-attr\">min</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">max</span>=<span class=\"hljs-string\">\"10\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"12\"</span>&gt;</span><br>          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"value1\"</span>&gt;</span>Your value is <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>input{border:1px solid #000}.outofrange input:in-range{background-color:rgba(0,255,0,.25)}.outofrange input:out-of-range{background-color:rgba(255,0,0,.25);border:2px solid red}.outofrange input:in-range+label::after{content:'okay.'}.outofrange input:out-of-range+label::after{content:'out of range!'}</style><div class=\"outofrange\"><form action=\"\" id=\"form1\"><ul>Values between 1 and 10 are valid.<li><input id=\"value1\" name=\"value1\" type=\"number\" placeholder=\"1 to 10\" min=\"1\" max=\"10\" value=\"12\"><label for=\"value1\">Your value is</label></li></ul></form></div></div><h3 id=\"indeterminate\"><a href=\"#indeterminate\" class=\"headerlink\" title=\":indeterminate\"></a>:indeterminate</h3><p>表示状态不确定的表单元素。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.indeterminate</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:indeterminate</span>, <span class=\"hljs-selector-class\">.indeterminate</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:indeterminate</span> + <span class=\"hljs-selector-tag\">label</span> &#123;</span><br>    background: red;<br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"indeterminate\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"checkbox\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"checkbox\"</span>&gt;</span>Background should be green<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">br</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"radio\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"radio\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"radio\"</span>&gt;</span>Background should be green<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"javascript\">  <span class=\"hljs-keyword\">var</span> inputs = <span class=\"hljs-built_in\">document</span>.querySelector(<span class=\"hljs-string\">'.indeterminate'</span>).getElementsByTagName(<span class=\"hljs-string\">\"input\"</span>);</span><br><span class=\"actionscript\">  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; inputs.length; i++) &#123;</span><br><span class=\"actionscript\">    inputs[i].indeterminate = <span class=\"hljs-literal\">true</span>;</span><br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.indeterminate input:indeterminate,.indeterminate input:indeterminate+label{background:red}</style><div class=\"indeterminate\"><input type=\"checkbox\" id=\"checkbox\"><label for=\"checkbox\">Background should be green</label><br><input type=\"radio\" id=\"radio\"><label for=\"radio\">Background should be green</label></div><script>for(var inputs=document.querySelector(\".indeterminate\").getElementsByTagName(\"input\"),i=0;i<inputs.length;i++)inputs[i].indeterminate=!0</script></div><h3 id=\"default\"><a href=\"#default\" class=\"headerlink\" title=\":default\"></a>:default</h3><p>选择设置默认值的元素，该选择器可以在 <code>&lt;button&gt;</code>, <code>&lt;input type=&quot;checkbox&quot;&gt;</code>, <code>&lt;input type=&quot;radio&quot;&gt;</code>, 以及 <code>&lt;option&gt;</code> 上使用。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.default1</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:default</span> &#123;</span><br>      box-shadow: 0 0 2px 1px red;<br>    &#125;<br><span class=\"css\">    <span class=\"hljs-selector-class\">.default1</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:default</span> + <span class=\"hljs-selector-tag\">label</span> &#123;</span><br>      color: red;<br>    &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"default1\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"radio\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"season\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"spring\"</span> &gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"spring\"</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"radio\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"season\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"summer\"</span> <span class=\"hljs-attr\">checked</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"summer\"</span>&gt;</span>2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.default1 input:default{box-shadow:0 0 2px 1px red}.default1 input:default+label{color:red}</style><div class=\"default1\"><input type=\"radio\" name=\"season\" id=\"spring\"><label for=\"spring\">1</label><input type=\"radio\" name=\"season\" id=\"summer\" checked><label for=\"summer\">2</label></div></div><h3 id=\"placeholder-shown\"><a href=\"#placeholder-shown\" class=\"headerlink\" title=\":placeholder-shown\"></a>:placeholder-shown</h3><p>在 placeholader 显示的时候被选择</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.placeholader</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:placeholder-shown</span> &#123;</span><br>      border-color: red;<br>    &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"placeholader\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"Type something here!\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">br</span>&gt;</span><br>    空placeholder<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"\"</span> &gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">br</span>&gt;</span><br>    无placeholder<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.placeholader input:placeholder-shown{border-color:red}</style><div class=\"placeholader\"><input placeholder=\"Type something here!\"><br>空placeholder<input placeholder=\"\"><br>无placeholder<input></div></div><h3 id=\"invalid\"><a href=\"#invalid\" class=\"headerlink\" title=\":invalid\"></a>:invalid</h3><p>表示任意内容未通过验证的 <code>&lt;input&gt;</code> 或其他 <code>&lt;form&gt;</code> 元素</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.invalid</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:invalid</span> &#123;</span><br>      background-color: red;<br>    &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"invalid\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"url_input\"</span>&gt;</span>Enter a URL:<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"url\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"url_input\"</span> /&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"email_input\"</span>&gt;</span>Enter an email address:<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"email\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"email_input\"</span> <span class=\"hljs-attr\">required</span>/&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.invalid input:invalid{background-color:red}</style><div class=\"invalid\"><form><label for=\"url_input\">Enter a URL:</label><input type=\"url\" id=\"url_input\"><br><br><label for=\"email_input\">Enter an email address:</label><input type=\"email\" id=\"email_input\" required></form></div></div><h3 id=\"read-only\"><a href=\"#read-only\" class=\"headerlink\" title=\":read-only\"></a>:read-only</h3><p>选择只读的元素</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.readonly</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:-moz-read-only</span> &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-id\">#ccc</span>;</span><br>    &#125;<br><span class=\"css\">    <span class=\"hljs-comment\">/* Supported in Blink/WebKit/Edge without a prefix */</span></span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.readonly</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:read-only</span> &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-id\">#ccc</span>;</span><br>    &#125;<br><span class=\"css\">  <span class=\"hljs-selector-class\">.readonly</span> <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:-moz-read-only</span> &#123; <span class=\"hljs-attribute\">background</span>: lightgray; &#125;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.readonly</span> <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:read-only</span> &#123; <span class=\"hljs-attribute\">background</span>: lightgray; &#125;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.readonly</span> <span class=\"hljs-selector-class\">.div</span><span class=\"hljs-selector-pseudo\">:read-only</span> &#123; <span class=\"hljs-attribute\">background</span>: lightgray; &#125;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"readonly\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"This is a read-only field.\"</span> <span class=\"hljs-attr\">readonly</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>不可以编辑的都可以被选中<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">contenteditable</span>=<span class=\"hljs-string\">\"true\"</span>&gt;</span>可以编辑的p标签就不行<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"div\"</span>&gt;</span>div也一样<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.readonly input:-moz-read-only{background-color:#ccc}.readonly input:read-only{background-color:#ccc}.readonly p:-moz-read-only{background:#d3d3d3}.readonly p:read-only{background:#d3d3d3}.readonly .div:read-only{background:#d3d3d3}</style><div class=\"readonly\"><input type=\"text\" value=\"This is a read-only field.\" readonly><p>不可以编辑的都可以被选中</p><p contenteditable=\"true\">可以编辑的p标签就不行</p><div class=\"div\">div也一样</div></div></div><h3 id=\"read-write\"><a href=\"#read-write\" class=\"headerlink\" title=\":read-write\"></a>:read-write</h3><p>选择可以被用户编辑的元素</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.readwrite</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:read-write</span> &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-id\">#ccc</span>;</span><br>    &#125;<br><span class=\"css\">    <span class=\"hljs-comment\">/* Supported in Blink/WebKit/Edge without a prefix */</span></span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.readwrite</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:read-write</span> &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-id\">#ccc</span>;</span><br>    &#125;<br><span class=\"css\">  <span class=\"hljs-selector-class\">.readwrite</span> <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:read-write</span> &#123; <span class=\"hljs-attribute\">background</span>: lightgray; &#125;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.readwrite</span> <span class=\"hljs-selector-class\">.div</span><span class=\"hljs-selector-pseudo\">:read-write</span> &#123; <span class=\"hljs-attribute\">background</span>: lightgray; &#125;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"readwrite\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"This is a read-only field.\"</span> &gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">contenteditable</span>=<span class=\"hljs-string\">\"true\"</span>&gt;</span>可以编辑的p标签也行<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>不可以编辑的不可以被选中<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.readwrite input:read-write{background-color:#ccc}.readwrite input:read-write{background-color:#ccc}.readwrite p:read-write{background:#d3d3d3}.readwrite .div:read-write{background:#d3d3d3}</style><div class=\"readwrite\"><input type=\"text\" value=\"This is a read-only field.\"><p contenteditable=\"true\">可以编辑的p标签也行</p><p>不可以编辑的不可以被选中</p></div></div><h3 id=\"disabled\"><a href=\"#disabled\" class=\"headerlink\" title=\":disabled\"></a>:disabled</h3><p>选择禁用的元素(表单元素)。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.disabled1</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:disabled</span> &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-id\">#ccc</span>;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">cursor</span><span class=\"hljs-selector-pseudo\">:not-allowed</span>;</span><br>    &#125;<br><span class=\"css\">    <span class=\"hljs-selector-class\">.disabled1</span> <span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-pseudo\">:disabled</span> &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-id\">#ccc</span>;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">cursor</span><span class=\"hljs-selector-pseudo\">:not-allowed</span>;</span><br>    &#125;<br>  <br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"disabled1\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"我被禁用了，尴尬\"</span> <span class=\"hljs-attr\">disabled</span> &gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">disabled</span> &gt;</span>禁用的div<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.disabled1 input:disabled{background-color:#ccc;cursor:not-allowed}.disabled1 div:disabled{background-color:#ccc;cursor:not-allowed}\n\n<p></style><br><div class=\"disabled1\"><br><input type=\"text\" value=\"我被禁用了，尴尬\" disabled><br><div disabled>禁用的div</div><br></div><p></p></div><h3 id=\"enabled\"><a href=\"#enabled\" class=\"headerlink\" title=\":enabled\"></a>:enabled</h3><p>表示任何被启用的（enabled）元素。如果一个元素能够被激活（如选择、点击或接受文本输入），或者能够获取焦点，则该元素是启用的。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.enabled</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:enabled</span> &#123;</span><br>      background-color: red;<br>    &#125;<br><span class=\"css\">    <span class=\"hljs-selector-class\">.enabled</span> <span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-pseudo\">:enabled</span> &#123;</span><br>      background-color: red;<br>    &#125;<br>  <br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"enabled\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"我可以输入，尴尬\"</span>  &gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>  &gt;</span>禁用的div<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.enabled input:enabled{background-color:red}.enabled div:enabled{background-color:red}\n\n<p></style><br><div class=\"enabled\"><br><input type=\"text\" value=\"我可以输入，尴尬\"><br><div>禁用的div</div><br></div><p></p></div><h3 id=\"lang\"><a href=\"#lang\" class=\"headerlink\" title=\":lang()\"></a>:lang()</h3><p>基于元素语言来匹配页面元素。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">   <span class=\"hljs-selector-class\">.lang</span> <span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-pseudo\">:lang(en)</span> &gt; <span class=\"hljs-selector-tag\">q</span> &#123; <span class=\"hljs-attribute\">background</span>:red; &#125;</span><br><span class=\"css\">   <span class=\"hljs-selector-class\">.lang</span> <span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-pseudo\">:lang(fr)</span> &gt; <span class=\"hljs-selector-tag\">q</span> &#123;<span class=\"hljs-attribute\">background</span>:green;&#125;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"lang\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">q</span>&gt;</span>英语语言<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">q</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"fr\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">q</span>&gt;</span>法语语言<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.lang div:lang(en)>q{background:red}.lang div:lang(fr)>q{background:green}</style><div class=\"lang\"><div lang=\"en\"><q>英语语言</q></div><div lang=\"fr\"><q>法语语言</q></div></div></div><h3 id=\"not\"><a href=\"#not\" class=\"headerlink\" title=\":not()\"></a>:not()</h3><p>用来匹配不符合一组选择器的元素。由于它的作用是防止特定的元素被选中，它也被称为反选伪类（negation pseudo-class）。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">   <span class=\"hljs-selector-class\">.not</span> <span class=\"hljs-selector-class\">.fancy</span> &#123;</span><br>      text-shadow: 2px 2px 3px gold;<br>    &#125;<br><span class=\"css\">    <span class=\"hljs-comment\">/* 类名不是 `.fancy` 的 &lt;p&gt; 元素 */</span></span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.not</span> <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:not(.fancy)</span> &#123;</span><br>      color: green;<br>    &#125;<br><span class=\"css\">    <span class=\"hljs-comment\">/* 非 &lt;p&gt; 元素 */</span> </span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.not</span>  <span class=\"hljs-selector-pseudo\">:not(p)</span> &#123;</span><br>      text-decoration: underline;<br>    &#125;<br><span class=\"xml\">    /* 既不是 <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span> 也不是 <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span> 的元素 */</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.not</span>  <span class=\"hljs-selector-pseudo\">:not(div)</span><span class=\"hljs-selector-pseudo\">:not(span)</span> &#123;</span><br>      font-weight: bold;<br>    &#125;<br><span class=\"css\">    <span class=\"hljs-comment\">/* 类名不是 `.crazy` 或 `.fancy` 的元素 */</span></span><br><span class=\"css\">    <span class=\"hljs-comment\">/* 注意，此语法尚未获广泛支持。 */</span></span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.not</span>  <span class=\"hljs-selector-pseudo\">:not(.crazy</span>, <span class=\"hljs-selector-class\">.fancy</span>) &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">color</span><span class=\"hljs-selector-pseudo\">:red</span>;</span><br>    &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"not\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>我是一个段落。<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"fancy\"</span>&gt;</span>我好看极了！<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>我「不是」一个段落。<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.not .fancy{text-shadow:2px 2px 3px gold}.not p:not(.fancy){color:green}.not :not(p){text-decoration:underline}.not :not(div):not(span){font-weight:700}.not :not(.crazy,.fancy){color:red}</style><div class=\"not\"><p>我是一个段落。</p><p class=\"fancy\">我好看极了！</p><div>我「不是」一个段落。</div></div></div><h3 id=\"focus\"><a href=\"#focus\" class=\"headerlink\" title=\":focus\"></a>:focus</h3><p>:focus 表示获得焦点的元素（如表单输入）。当用户点击或触摸元素或通过键盘的 “tab” 键选择它时会被触发。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.focus</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:focus</span> &#123;</span><br>    background: red;<br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"focus\"</span>&gt;</span><br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> /&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><br>`<br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.focus input:focus{background:red}</style><div class=\"focus\"><input></div></div><h3 id=\"focus-within\"><a href=\"#focus-within\" class=\"headerlink\" title=\":focus-within\"></a>:focus-within</h3><p>表示一个元素获得焦点，或，该元素的后代元素获得焦点。换句话说，元素自身或者它的某个后代匹配 :focus 伪类。（shadow DOM 树中的后代也包括在内）</p><p>子元素获得焦点，父元素改变样式</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.focusWithin</span><span class=\"hljs-selector-pseudo\">:focus-within</span> &#123;</span><br>    background: red;<br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"focusWithin\"</span>&gt;</span><br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> /&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>`<br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.focusWithin:focus-within{background:red}</style><div class=\"focusWithin\"><input></div></div><h3 id=\"fullscreen\"><a href=\"#fullscreen\" class=\"headerlink\" title=\":fullscreen\"></a>:fullscreen</h3><p>应用于当前处于全屏显示模式的元素。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.top</span> &#123;</span><br>  margin: 15px;<br>&#125;<br><span class=\"css\"><span class=\"hljs-selector-class\">.main</span> &#123;</span><br>  width: 100%;<br>  display: flex;<br>&#125;<br><span class=\"css\"><span class=\"hljs-selector-class\">.right</span><span class=\"hljs-selector-pseudo\">:fullscreen</span>&#123;</span><br><span class=\"css\">  <span class=\"hljs-selector-tag\">background</span><span class=\"hljs-selector-pseudo\">:green</span>;</span><br>&#125;<br><span class=\"css\"><span class=\"hljs-selector-class\">.right</span> &#123;</span><br>  width: 100%;<br>  height: 300px;<br><span class=\"css\">  <span class=\"hljs-selector-tag\">background</span>: <span class=\"hljs-selector-id\">#dddddd</span>;</span><br>&#125;<br><span class=\"css\"><span class=\"hljs-selector-class\">.right</span><span class=\"hljs-selector-pseudo\">:fullscreen</span> &#123;</span><br>  background: green;<br><span class=\"css\">  <span class=\"hljs-selector-tag\">color</span><span class=\"hljs-selector-pseudo\">:red</span>;</span><br><span class=\"css\">  <span class=\"hljs-selector-tag\">font-size</span><span class=\"hljs-selector-pseudo\">:20px</span>;</span><br>&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"top\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\">\"rightScreen()\"</span>&gt;</span>全屏<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"main\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"right\"</span>&gt;</span>内容<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"actionscript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">fullScreen</span> </span>&#123;</span><br>  /**<br>   * @description: 全屏初始化<br><span class=\"javascript\">   * @param &#123;<span class=\"hljs-built_in\">Function</span>&#125; fn 用户浏览器不支持全屏的回调</span><br>   */<br><span class=\"javascript\">  <span class=\"hljs-keyword\">constructor</span>(fn) &#123;</span><br><span class=\"actionscript\">    <span class=\"hljs-keyword\">this</span>.prefixName = <span class=\"hljs-string\">\"\"</span>; <span class=\"hljs-comment\">// 浏览器前缀</span></span><br><span class=\"actionscript\">    <span class=\"hljs-keyword\">this</span>.isFullscreenData = <span class=\"hljs-literal\">true</span>; <span class=\"hljs-comment\">// 浏览器是否支持全屏</span></span><br><span class=\"actionscript\">    <span class=\"hljs-keyword\">this</span>.isFullscreen(fn);</span><br>  &#125;<br>  /**<br>   * @description: 将传进来的元素全屏<br><span class=\"javascript\">   * @param &#123;<span class=\"hljs-built_in\">String</span>&#125; domName 要全屏的dom名称</span><br>   */<br>  Fullscreen(domName) &#123;<br><span class=\"javascript\">    <span class=\"hljs-keyword\">const</span> element = <span class=\"hljs-built_in\">document</span>.querySelector(domName);</span><br><span class=\"actionscript\">    <span class=\"hljs-keyword\">const</span> methodName =</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">this</span>.prefixName === <span class=\"hljs-string\">\"\"</span></span><br><span class=\"actionscript\">        ? <span class=\"hljs-string\">\"requestFullscreen\"</span></span><br><span class=\"javascript\">        : <span class=\"hljs-string\">`<span class=\"hljs-subst\">$&#123;<span class=\"hljs-keyword\">this</span>.prefixName&#125;</span>RequestFullScreen`</span>;</span><br>    element[methodName]();<br>  &#125;<br><span class=\"actionscript\">  <span class=\"hljs-comment\">// 退出全屏</span></span><br>  exitFullscreen() &#123;<br><span class=\"actionscript\">    <span class=\"hljs-keyword\">const</span> methodName =</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">this</span>.prefixName === <span class=\"hljs-string\">\"\"</span></span><br><span class=\"actionscript\">        ? <span class=\"hljs-string\">\"exitFullscreen\"</span></span><br><span class=\"javascript\">        : <span class=\"hljs-string\">`<span class=\"hljs-subst\">$&#123;<span class=\"hljs-keyword\">this</span>.prefixName&#125;</span>ExitFullscreen`</span>;</span><br><span class=\"javascript\">    <span class=\"hljs-built_in\">document</span>[methodName]();</span><br>  &#125;<br>  /**<br>   * @description: 监听进入/离开全屏<br><span class=\"javascript\">   * @param &#123;<span class=\"hljs-built_in\">Function</span>&#125; enter 进入全屏的回调</span><br><span class=\"javascript\">   *  @param &#123;<span class=\"hljs-built_in\">Function</span>&#125; quit 离开全屏的回调</span><br>   */<br>  screenChange(enter, quit) &#123;<br><span class=\"actionscript\">    <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">this</span>.isFullscreenData) <span class=\"hljs-keyword\">return</span>;</span><br><span class=\"javascript\">    <span class=\"hljs-keyword\">const</span> methodName = <span class=\"hljs-string\">`on<span class=\"hljs-subst\">$&#123;<span class=\"hljs-keyword\">this</span>.prefixName&#125;</span>fullscreenchange`</span>;</span><br><span class=\"javascript\">    <span class=\"hljs-built_in\">document</span>[methodName] = <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.isElementFullScreen()) &#123;</span><br><span class=\"actionscript\">        enter &amp;&amp; enter(e); <span class=\"hljs-comment\">// 进入全屏回调</span></span><br><span class=\"actionscript\">      &#125; <span class=\"hljs-keyword\">else</span> &#123;</span><br><span class=\"actionscript\">        quit &amp;&amp; quit(e); <span class=\"hljs-comment\">// 离开全屏的回调</span></span><br>      &#125;<br>    &#125;;<br>  &#125;<br>  /**<br>   * @description: 浏览器无法进入全屏时触发,可能是技术原因，也可能是用户拒绝：比如全屏请求不是在事件处理函数中调用,会在这里拦截到错误<br><span class=\"javascript\">   * @param &#123;<span class=\"hljs-built_in\">Function</span>&#125; enterErrorFn 回调</span><br>   */<br>  screenError(enterErrorFn) &#123;<br><span class=\"javascript\">    <span class=\"hljs-keyword\">const</span> methodName = <span class=\"hljs-string\">`on<span class=\"hljs-subst\">$&#123;<span class=\"hljs-keyword\">this</span>.prefixName&#125;</span>fullscreenerror`</span>;</span><br><span class=\"javascript\">    <span class=\"hljs-built_in\">document</span>[methodName] = <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;</span><br>      enterErrorFn &amp;&amp; enterErrorFn(e);<br>    &#125;;<br>  &#125;<br>  /**<br>   * @description: 是否支持全屏+判断浏览器前缀<br><span class=\"javascript\">   * @param &#123;<span class=\"hljs-built_in\">Function</span>&#125; fn 不支持全屏的回调函数 这里设了一个默认值</span><br>   */<br>  isFullscreen(fn) &#123;<br><span class=\"javascript\">    <span class=\"hljs-keyword\">let</span> fullscreenEnabled;</span><br><span class=\"actionscript\">    <span class=\"hljs-comment\">// 判断浏览器前缀</span></span><br><span class=\"javascript\">    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">document</span>.fullscreenEnabled) &#123;</span><br><span class=\"javascript\">      fullscreenEnabled = <span class=\"hljs-built_in\">document</span>.fullscreenEnabled;</span><br><span class=\"javascript\">    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">document</span>.webkitFullscreenEnabled) &#123;</span><br><span class=\"javascript\">      fullscreenEnabled = <span class=\"hljs-built_in\">document</span>.webkitFullscreenEnabled;</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">this</span>.prefixName = <span class=\"hljs-string\">\"webkit\"</span>;</span><br><span class=\"javascript\">    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">document</span>.mozFullScreenEnabled) &#123;</span><br><span class=\"javascript\">      fullscreenEnabled = <span class=\"hljs-built_in\">document</span>.mozFullScreenEnabled;</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">this</span>.prefixName = <span class=\"hljs-string\">\"moz\"</span>;</span><br><span class=\"javascript\">    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">document</span>.msFullscreenEnabled) &#123;</span><br><span class=\"javascript\">      fullscreenEnabled = <span class=\"hljs-built_in\">document</span>.msFullscreenEnabled;</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">this</span>.prefixName = <span class=\"hljs-string\">\"ms\"</span>;</span><br>    &#125;<br>    if (!fullscreenEnabled) &#123;<br><span class=\"actionscript\">      <span class=\"hljs-keyword\">this</span>.isFullscreenData = <span class=\"hljs-literal\">false</span>;</span><br><span class=\"actionscript\">      fn &amp;&amp; fn(); <span class=\"hljs-comment\">// 执行不支持全屏的回调</span></span><br>    &#125;<br>  &#125;<br>  /**<br>   * @description: 检测有没有元素处于全屏状态<br><span class=\"actionscript\">   * @<span class=\"hljs-keyword\">return</span> 布尔值</span><br>   */<br>  isElementFullScreen() &#123;<br><span class=\"actionscript\">    <span class=\"hljs-keyword\">const</span> fullscreenElement =</span><br><span class=\"javascript\">      <span class=\"hljs-built_in\">document</span>.fullscreenElement ||</span><br><span class=\"javascript\">      <span class=\"hljs-built_in\">document</span>.msFullscreenElement ||</span><br><span class=\"javascript\">      <span class=\"hljs-built_in\">document</span>.mozFullScreenElement ||</span><br><span class=\"javascript\">      <span class=\"hljs-built_in\">document</span>.webkitFullscreenElement;</span><br><span class=\"actionscript\">    <span class=\"hljs-keyword\">if</span> (fullscreenElement === <span class=\"hljs-literal\">null</span>) &#123;</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>; <span class=\"hljs-comment\">// 当前没有元素在全屏状态</span></span><br><span class=\"actionscript\">    &#125; <span class=\"hljs-keyword\">else</span> &#123;</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>; <span class=\"hljs-comment\">// 有元素在全屏状态</span></span><br>    &#125;<br>  &#125;<br>&#125;<br><span class=\"javascript\"><span class=\"hljs-keyword\">let</span> full = <span class=\"hljs-keyword\">new</span> fullScreen(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> &#123;</span><br><span class=\"javascript\">  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"不支持\"</span>);</span><br>&#125;);<br><span class=\"javascript\">full.screenError(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;</span><br><span class=\"javascript\">  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"进去全屏失败:\"</span>, e);</span><br>&#125;);<br><span class=\"actionscript\"><span class=\"hljs-comment\">// 全屏请求必须在事件处理函数中调用，否则将会被拒绝。</span></span><br><span class=\"actionscript\"><span class=\"hljs-comment\">// full.Fullscreen(\".left\"); // 触发进去全屏失败回调</span></span><br><span class=\"actionscript\"><span class=\"hljs-keyword\">const</span> obj = &#123;</span><br><span class=\"javascript\">  enter: <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;</span><br><span class=\"actionscript\">    <span class=\"hljs-comment\">// 如果退出全屏 退出的还是全屏状态，将会触发进入全屏的回调，这种情况比较少 注意一下</span></span><br><span class=\"javascript\">    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"进入全屏\"</span>, e);</span><br>  &#125;,<br><span class=\"javascript\">  quit: <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;</span><br><span class=\"javascript\">    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"退出全屏\"</span>, e);</span><br><span class=\"actionscript\">    <span class=\"hljs-comment\">// 通常不会出现嵌套的情况</span></span><br>  &#125;<br>&#125;;<br>full.screenChange(obj.enter, obj.quit);<br><span class=\"actionscript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">leftScreen</span><span class=\"hljs-params\">()</span> </span>&#123;</span><br><span class=\"actionscript\">  full.Fullscreen(<span class=\"hljs-string\">\".left\"</span>);</span><br>&#125;<br><span class=\"actionscript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">rightScreen</span><span class=\"hljs-params\">()</span> </span>&#123;</span><br><span class=\"actionscript\">  full.Fullscreen(<span class=\"hljs-string\">\".right\"</span>);</span><br>&#125;<br><span class=\"actionscript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">redScreen</span><span class=\"hljs-params\">()</span> </span>&#123;</span><br><span class=\"actionscript\">  full.Fullscreen(<span class=\"hljs-string\">\".left-son\"</span>);</span><br>&#125;<br><span class=\"actionscript\"><span class=\"hljs-comment\">// 退出全屏 退出到上次的状态</span></span><br><span class=\"actionscript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">exitScreen</span><span class=\"hljs-params\">()</span> </span>&#123;</span><br>  full.exitFullscreen();<br>&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.top{margin:15px}.main{width:100%;display:flex}.right:fullscreen{background:green}.right{width:100%;height:300px;background:#ddd}.right:fullscreen{background:green;color:red;font-size:20px}</style><div class=\"top\"><button onclick=\"rightScreen()\">全屏</button></div><div class=\"main\"><div class=\"right\">内容</div></div><script>class fullScreen {\n  /**\n   * @description: 全屏初始化\n   * @param {Function} fn 用户浏览器不支持全屏的回调\n   */\n  constructor(fn) {\n    this.prefixName = \"\"; // 浏览器前缀\n    this.isFullscreenData = true; // 浏览器是否支持全屏\n    this.isFullscreen(fn);\n  }\n  /**\n   * @description: 将传进来的元素全屏\n   * @param {String} domName 要全屏的dom名称\n   */\n  Fullscreen(domName) {\n    const element = document.querySelector(domName);\n    const methodName =\n      this.prefixName === \"\"\n        ? \"requestFullscreen\"\n        : `${this.prefixName}RequestFullScreen`;\n    element[methodName]();\n  }\n  // 退出全屏\n  exitFullscreen() {\n    const methodName =\n      this.prefixName === \"\"\n        ? \"exitFullscreen\"\n        : `${this.prefixName}ExitFullscreen`;\n    document[methodName]();\n  }\n  /**\n   * @description: 监听进入/离开全屏\n   * @param {Function} enter 进入全屏的回调\n   *  @param {Function} quit 离开全屏的回调\n   */\n  screenChange(enter, quit) {\n    if (!this.isFullscreenData) return;\n    const methodName = `on${this.prefixName}fullscreenchange`;\n    document[methodName] = e => {\n      if (this.isElementFullScreen()) {\n        enter && enter(e); // 进入全屏回调\n      } else {\n        quit && quit(e); // 离开全屏的回调\n      }\n    };\n  }\n  /**\n   * @description: 浏览器无法进入全屏时触发,可能是技术原因，也可能是用户拒绝：比如全屏请求不是在事件处理函数中调用,会在这里拦截到错误\n   * @param {Function} enterErrorFn 回调\n   */\n  screenError(enterErrorFn) {\n    const methodName = `on${this.prefixName}fullscreenerror`;\n    document[methodName] = e => {\n      enterErrorFn && enterErrorFn(e);\n    };\n  }\n  /**\n   * @description: 是否支持全屏+判断浏览器前缀\n   * @param {Function} fn 不支持全屏的回调函数 这里设了一个默认值\n   */\n  isFullscreen(fn) {\n    let fullscreenEnabled;\n    // 判断浏览器前缀\n    if (document.fullscreenEnabled) {\n      fullscreenEnabled = document.fullscreenEnabled;\n    } else if (document.webkitFullscreenEnabled) {\n      fullscreenEnabled = document.webkitFullscreenEnabled;\n      this.prefixName = \"webkit\";\n    } else if (document.mozFullScreenEnabled) {\n      fullscreenEnabled = document.mozFullScreenEnabled;\n      this.prefixName = \"moz\";\n    } else if (document.msFullscreenEnabled) {\n      fullscreenEnabled = document.msFullscreenEnabled;\n      this.prefixName = \"ms\";\n    }\n    if (!fullscreenEnabled) {\n      this.isFullscreenData = false;\n      fn && fn(); // 执行不支持全屏的回调\n    }\n  }\n  /**\n   * @description: 检测有没有元素处于全屏状态\n   * @return 布尔值\n   */\n  isElementFullScreen() {\n    const fullscreenElement =\n      document.fullscreenElement ||\n      document.msFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.webkitFullscreenElement;\n    if (fullscreenElement === null) {\n      return false; // 当前没有元素在全屏状态\n    } else {\n      return true; // 有元素在全屏状态\n    }\n  }\n}\nlet full = new fullScreen(() => {\n  console.log(\"不支持\");\n});\nfull.screenError(e => {\n  console.log(\"进去全屏失败:\", e);\n});\n// 全屏请求必须在事件处理函数中调用，否则将会被拒绝。\n// full.Fullscreen(\".left\"); // 触发进去全屏失败回调\nconst obj = {\n  enter: e => {\n    // 如果退出全屏 退出的还是全屏状态，将会触发进入全屏的回调，这种情况比较少 注意一下\n    console.log(\"进入全屏\", e);\n  },\n  quit: e => {\n    console.log(\"退出全屏\", e);\n    // 通常不会出现嵌套的情况\n  }\n};\nfull.screenChange(obj.enter, obj.quit);\nfunction leftScreen() {\n  full.Fullscreen(\".left\");\n}\nfunction rightScreen() {\n  full.Fullscreen(\".right\");\n}\nfunction redScreen() {\n  full.Fullscreen(\".left-son\");\n}\n// 退出全屏 退出到上次的状态\nfunction exitScreen() {\n  full.exitFullscreen();\n}</script></div><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>以上就是本次的全部分享内容，合理的利用伪类可以比较巧妙的实现一些特殊效果。但是部分伪类还是涉及到浏览器的兼容问题，或者还在草案之中，具体的兼容性可以为<a href=\"https://caniuse.com/\" target=\"_blank\" rel=\"noopener\">Can I Use</a>查看</p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><style>.demo{border:1px dashed #ccc;padding:5px}.demo:hover{box-shadow:0 0 11px rgba(33,33,33,.2)}</style><h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p>分享总结一下现有的伪类和简单的 demo<br>源地址：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes\" target=\"_blank\" rel=\"noopener\">MDN</a></p><h2 id=\"伪类\"><a href=\"#伪类\" class=\"headerlink\" title=\"伪类\"></a>伪类</h2><h3 id=\"active\"><a href=\"#active\" class=\"headerlink\" title=\":active\"></a>:active</h3><p>匹配被用户激活的元素。它让页面能在浏览器监测到激活时给出反馈。当用鼠标交互时，它代表的是用户按下按键和松开按键之间的时间。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.active</span><span class=\"hljs-selector-pseudo\">:active</span>&#123; <span class=\"hljs-attribute\">color</span>:red;&#125;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"active\"</span>&gt;</span>鼠标按下就变为红色<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.active:active{color:red}</style><div class=\"active\">鼠标按下就变为红色</div></div>","more":"<h3 id=\"only-child\"><a href=\"#only-child\" class=\"headerlink\" title=\":only-child\"></a>:only-child</h3><p>匹配没有任何兄弟元素的元素。</p><p>等效的选择器还可以写成:first-child:last-child 或者:nth-child(1):nth-last-child(1),当然,前者的权重会低一点.</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\"> <span class=\"hljs-selector-class\">.onlyChild</span> <span class=\"hljs-selector-pseudo\">:only-child</span> &#123;</span><br>  color: red;<br>&#125;<br><span class=\"css\"> <span class=\"hljs-selector-class\">.onlyChild</span> <span class=\"hljs-selector-class\">.haha</span><span class=\"hljs-selector-pseudo\">::after</span> &#123;</span><br> content:'after伪类不影响';<br>&#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"onlyChild\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>  直接的文本也不影响选择<br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span>&gt;</span>没有兄弟元素<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span>&gt;</span>有兄弟<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">b</span>&gt;</span>有兄弟<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">b</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>有兄弟 <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>没兄弟<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.onlyChild :only-child{color:red}.onlyChild .haha::after{content:'after伪类不影响'}</style><div class=\"onlyChild\"><div class=\"haha\">直接的文本也不影响选择 <i>没有兄弟元素,</i></div><div><i>有兄弟</i><br><b>有兄弟</b><br><span>有兄弟 <span>没兄弟</span></span></div></div></div><h3 id=\"any-link\"><a href=\"#any-link\" class=\"headerlink\" title=\":any-link\"></a>:any-link</h3><p>选择器代表一个有链接锚点的元素，而不管它是否被访问过，也就是说，它会匹配每一个有<strong>href</strong>属性的 <code>&lt;a&gt;</code>、<code>&lt;area&gt;</code> 或 <code>&lt;link&gt;</code> 元素。因此，它会匹配到所有的 :link 或 :visited。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\"><span class=\"hljs-selector-class\">.anyLink</span> <span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-pseudo\">:any-link</span> &#123;</span><br>  color: red;<br>&#125;<br>/_ WebKit browsers _/<br><span class=\"css\"><span class=\"hljs-selector-class\">.anyLink</span> <span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-pseudo\">:-webkit-any-link</span> &#123;</span><br>color: red;<br>&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"anyLink\"</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"https://example.com\"</span>&gt;</span>href为地址<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span>&gt;</span>href为#<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"\"</span>&gt;</span>href为空字符串<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span>&gt;</span>href为#的div<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span>&gt;</span>没有 href<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.anyLink a:any-link{color:red}/_ WebKit browsers _/ .anyLink a:-webkit-any-link{color:red}</style><div class=\"anyLink\"><a href=\"https://example.com\" target=\"_blank\" rel=\"noopener\">href为地址</a><br><a href=\"#\">href为#</a><br><a href=\"\">href为空字符串</a><br><div href=\"#\">href为#的div</div><br><a>没有 href</a></div></div><h3 id=\"only-of-type\"><a href=\"#only-of-type\" class=\"headerlink\" title=\":only-of-type\"></a>:only-of-type</h3><p>代表了任意一个元素，这个元素没有其他相同类型的兄弟元素。(子元素中唯一的标签)</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.onlyoftype</span> <span class=\"hljs-selector-pseudo\">:only-of-type</span> &#123;</span><br>    color: red;<br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"onlyoftype\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>I am `div` #1.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>I am the only `p` among my siblings.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>I am `div` #2.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>I am `div` #3.<br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span>&gt;</span>I am the only `i` child.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">em</span>&gt;</span>I am `em` #1.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">em</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">b</span>&gt;</span>I am `b` #2.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">b</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.onlyoftype :only-of-type{color:red}</style><div class=\"onlyoftype\"><div>I am `div` #1.</div><p>I am the only `p` among my siblings.</p><div>I am `div` #2.</div><div>I am `div` #3. <i>I am the only `i` child.</i> <em>I am `em` #1.</em> <b>I am `b` #2.</b></div></div></div><h3 id=\"blank-火狐验证\"><a href=\"#blank-火狐验证\" class=\"headerlink\" title=\":blank 火狐验证\"></a>:blank 火狐验证</h3><p>没有子节点；仅有空的文本节点；仅有空白符的文本节点。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\"><span class=\"hljs-selector-class\">.blanks</span> <span class=\"hljs-selector-tag\">p</span> &#123;</span><br>  min-height: 30px;<br>  width: 250px;<br>  background-color: lightblue;<br>&#125;<br><span class=\"css\"><span class=\"hljs-selector-class\">.blanks</span> <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:blank</span> &#123; <span class=\"hljs-attribute\">display</span>: none; &#125;</span><br><span class=\"css\"><span class=\"hljs-selector-class\">.blanks</span> <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:-moz-only-whitespace</span> &#123; <span class=\"hljs-attribute\">display</span>: none; &#125; <span class=\"hljs-comment\">/* Mozilla-only pseudo-class that works like :blank will */</span></span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"blanks\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>This paragraph is not empty or blank.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span><span class=\"hljs-comment\">&lt;!--this is empty and blank --&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span><br>    <br>    <span class=\"hljs-comment\">&lt;!-- this is not empty, because it has whitespace. But it is blank.--&gt;</span><br>    <br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>This paragraph is not empty or blank.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.blanks p{min-height:30px;width:250px;background-color:#add8e6}.blanks p:blank{display:none}.blanks p:-moz-only-whitespace{display:none}</style><div class=\"blanks\"><p>This paragraph is not empty or blank.</p><p></p><p><pre><code>&lt;!-- this is not empty, because it has whitespace. But it is blank.--&gt;</code></pre></p><p>This paragraph is not empty or blank.</p></div></div><h3 id=\"empty\"><a href=\"#empty\" class=\"headerlink\" title=\":empty\"></a>:empty</h3><p>代表没有子元素的元素。子元素只可以是元素节点或文本（包括空格）。注释或处理指令都不会产生影响。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.empty</span> <span class=\"hljs-selector-class\">.box</span> &#123;</span><br>        background: pink;<br>        height: 80px;<br>        width: 80px;<br>    &#125;<br><span class=\"css\">    <span class=\"hljs-selector-class\">.empty</span> <span class=\"hljs-selector-class\">.box</span><span class=\"hljs-selector-pseudo\">:empty</span> &#123;</span><br>      background: lime;<br>    &#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"empty\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"box\"</span>&gt;</span><span class=\"hljs-comment\">&lt;!-- I will be lime --&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"box\"</span>&gt;</span>I will be pink<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"box\"</span>&gt;</span><br>        <span class=\"hljs-comment\">&lt;!-- I will be red because of the whitespace around this comment --&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.empty .box{background:pink;height:80px;width:80px}.empty .box:empty{background:#0f0}</style><div class=\"empty\"><div class=\"box\"></div><div class=\"box\">I will be pink</div><div class=\"box\"></div></div></div><h3 id=\"optional\"><a href=\"#optional\" class=\"headerlink\" title=\":optional\"></a>:optional</h3><p>任意没有 required 属性的 <code>&lt;input&gt;</code>，<code>&lt;select&gt;</code> 或 <code>&lt;textarea&gt;</code> 元素使用它。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.optional</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:optional</span> &#123;</span><br>  border: 1px dashed red;<br>&#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"optional\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">required</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"有required的input\"</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.optional input:optional{border:1px dashed red}</style><div class=\"optional\"><input type=\"text\"> <input type=\"text\" required placeholder=\"有required的input\"></div></div><h3 id=\"checked\"><a href=\"#checked\" class=\"headerlink\" title=\":checked\"></a>:checked</h3><p>选择器表示任何处于选中状态的 radio(<code>&lt;input type=&quot;radio&quot;&gt;</code>), checkbox (<code>&lt;input type=&quot;checkbox&quot;&gt;</code>) 或(“select”) 元素中的 option HTML 元素(“option”)</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.checked</span> <span class=\"hljs-selector-pseudo\">:checked</span> &#123;</span><br><span class=\"css\">    <span class=\"hljs-selector-tag\">background</span><span class=\"hljs-selector-pseudo\">:red</span>;</span><br><span class=\"css\">    <span class=\"hljs-selector-tag\">margin-left</span><span class=\"hljs-selector-pseudo\">:20px</span>;</span><br><span class=\"css\">    <span class=\"hljs-selector-tag\">margin-right</span><span class=\"hljs-selector-pseudo\">:20px</span>;</span><br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"checked\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"radio\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"my-input\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"yes\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"yes\"</span>&gt;</span>Yes<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"radio\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"my-input\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"no\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"no\"</span>&gt;</span>No<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.checked :checked{background:red;margin-left:20px;margin-right:20px}</style><div class=\"checked\"><input type=\"radio\" name=\"my-input\" id=\"yes\"><label for=\"yes\">Yes</label><input type=\"radio\" name=\"my-input\" id=\"no\"><label for=\"no\">No</label></div></div><h3 id=\"hover\"><a href=\"#hover\" class=\"headerlink\" title=\":hover\"></a>:hover</h3><p>光标（鼠标指针）悬停在元素上时提供关联的样式,按照 LVHA 的循顺序声明:link－:visited－:hover－:active。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.hover</span><span class=\"hljs-selector-pseudo\">:hover</span> &#123;</span><br><span class=\"css\">   <span class=\"hljs-selector-tag\">color</span><span class=\"hljs-selector-pseudo\">:red</span>;</span><br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"hover\"</span>&gt;</span><br>hover<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.hover:hover{color:red}</style><div class=\"hover\">hover</div></div><h3 id=\"out-of-range-和-in-range\"><a href=\"#out-of-range-和-in-range\" class=\"headerlink\" title=\":out-of-range 和:in-range\"></a>:out-of-range 和:in-range</h3><ul><li>out-of-range:表示一个 <code>&lt;input&gt;</code> 元素，其当前值处于属性 min 和 max 限定的范围外</li><li>in-range：表一个 <code>&lt;input&gt;</code> 元素，其当前值处于属性 min 和 max 限定的范围之内</li></ul><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br>  input &#123;<br>    border: 1px solid black;<br>  &#125;<br><span class=\"css\">  <span class=\"hljs-selector-class\">.outofrange</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:in-range</span> &#123;</span><br><span class=\"css\">    <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-tag\">rgba</span>(0, 255, 0, 0<span class=\"hljs-selector-class\">.25</span>);</span><br>  &#125;<br><span class=\"css\">  <span class=\"hljs-selector-class\">.outofrange</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:out-of-range</span> &#123;</span><br><span class=\"css\">    <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-tag\">rgba</span>(255, 0, 0, 0<span class=\"hljs-selector-class\">.25</span>);</span><br>    border: 2px solid red;<br>  &#125;<br><span class=\"css\">  <span class=\"hljs-selector-class\">.outofrange</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:in-range</span> + <span class=\"hljs-selector-tag\">label</span><span class=\"hljs-selector-pseudo\">::after</span> &#123;</span><br>    content: 'okay.';<br>  &#125;<br><span class=\"css\">  <span class=\"hljs-selector-class\">.outofrange</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:out-of-range</span> + <span class=\"hljs-selector-tag\">label</span><span class=\"hljs-selector-pseudo\">::after</span> &#123;</span><br>    content: 'out of range!';<br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"outofrange\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">\"\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"form1\"</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>Values between 1 and 10 are valid.<br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><br>          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"value1\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"value1\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"1 to 10\"</span> <span class=\"hljs-attr\">min</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">max</span>=<span class=\"hljs-string\">\"10\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"12\"</span>&gt;</span><br>          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"value1\"</span>&gt;</span>Your value is <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>input{border:1px solid #000}.outofrange input:in-range{background-color:rgba(0,255,0,.25)}.outofrange input:out-of-range{background-color:rgba(255,0,0,.25);border:2px solid red}.outofrange input:in-range+label::after{content:'okay.'}.outofrange input:out-of-range+label::after{content:'out of range!'}</style><div class=\"outofrange\"><form action=\"\" id=\"form1\"><ul>Values between 1 and 10 are valid.<li><input id=\"value1\" name=\"value1\" type=\"number\" placeholder=\"1 to 10\" min=\"1\" max=\"10\" value=\"12\"><label for=\"value1\">Your value is</label></li></ul></form></div></div><h3 id=\"indeterminate\"><a href=\"#indeterminate\" class=\"headerlink\" title=\":indeterminate\"></a>:indeterminate</h3><p>表示状态不确定的表单元素。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.indeterminate</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:indeterminate</span>, <span class=\"hljs-selector-class\">.indeterminate</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:indeterminate</span> + <span class=\"hljs-selector-tag\">label</span> &#123;</span><br>    background: red;<br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"indeterminate\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"checkbox\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"checkbox\"</span>&gt;</span>Background should be green<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">br</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"radio\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"radio\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"radio\"</span>&gt;</span>Background should be green<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"javascript\">  <span class=\"hljs-keyword\">var</span> inputs = <span class=\"hljs-built_in\">document</span>.querySelector(<span class=\"hljs-string\">'.indeterminate'</span>).getElementsByTagName(<span class=\"hljs-string\">\"input\"</span>);</span><br><span class=\"actionscript\">  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; inputs.length; i++) &#123;</span><br><span class=\"actionscript\">    inputs[i].indeterminate = <span class=\"hljs-literal\">true</span>;</span><br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.indeterminate input:indeterminate,.indeterminate input:indeterminate+label{background:red}</style><div class=\"indeterminate\"><input type=\"checkbox\" id=\"checkbox\"><label for=\"checkbox\">Background should be green</label><br><input type=\"radio\" id=\"radio\"><label for=\"radio\">Background should be green</label></div><script>for(var inputs=document.querySelector(\".indeterminate\").getElementsByTagName(\"input\"),i=0;i<inputs.length;i++)inputs[i].indeterminate=!0</script></div><h3 id=\"default\"><a href=\"#default\" class=\"headerlink\" title=\":default\"></a>:default</h3><p>选择设置默认值的元素，该选择器可以在 <code>&lt;button&gt;</code>, <code>&lt;input type=&quot;checkbox&quot;&gt;</code>, <code>&lt;input type=&quot;radio&quot;&gt;</code>, 以及 <code>&lt;option&gt;</code> 上使用。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.default1</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:default</span> &#123;</span><br>      box-shadow: 0 0 2px 1px red;<br>    &#125;<br><span class=\"css\">    <span class=\"hljs-selector-class\">.default1</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:default</span> + <span class=\"hljs-selector-tag\">label</span> &#123;</span><br>      color: red;<br>    &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"default1\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"radio\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"season\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"spring\"</span> &gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"spring\"</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"radio\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"season\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"summer\"</span> <span class=\"hljs-attr\">checked</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"summer\"</span>&gt;</span>2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.default1 input:default{box-shadow:0 0 2px 1px red}.default1 input:default+label{color:red}</style><div class=\"default1\"><input type=\"radio\" name=\"season\" id=\"spring\"><label for=\"spring\">1</label><input type=\"radio\" name=\"season\" id=\"summer\" checked><label for=\"summer\">2</label></div></div><h3 id=\"placeholder-shown\"><a href=\"#placeholder-shown\" class=\"headerlink\" title=\":placeholder-shown\"></a>:placeholder-shown</h3><p>在 placeholader 显示的时候被选择</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.placeholader</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:placeholder-shown</span> &#123;</span><br>      border-color: red;<br>    &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"placeholader\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"Type something here!\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">br</span>&gt;</span><br>    空placeholder<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"\"</span> &gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">br</span>&gt;</span><br>    无placeholder<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.placeholader input:placeholder-shown{border-color:red}</style><div class=\"placeholader\"><input placeholder=\"Type something here!\"><br>空placeholder<input placeholder=\"\"><br>无placeholder<input></div></div><h3 id=\"invalid\"><a href=\"#invalid\" class=\"headerlink\" title=\":invalid\"></a>:invalid</h3><p>表示任意内容未通过验证的 <code>&lt;input&gt;</code> 或其他 <code>&lt;form&gt;</code> 元素</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.invalid</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:invalid</span> &#123;</span><br>      background-color: red;<br>    &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"invalid\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"url_input\"</span>&gt;</span>Enter a URL:<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"url\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"url_input\"</span> /&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"email_input\"</span>&gt;</span>Enter an email address:<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"email\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"email_input\"</span> <span class=\"hljs-attr\">required</span>/&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.invalid input:invalid{background-color:red}</style><div class=\"invalid\"><form><label for=\"url_input\">Enter a URL:</label><input type=\"url\" id=\"url_input\"><br><br><label for=\"email_input\">Enter an email address:</label><input type=\"email\" id=\"email_input\" required></form></div></div><h3 id=\"read-only\"><a href=\"#read-only\" class=\"headerlink\" title=\":read-only\"></a>:read-only</h3><p>选择只读的元素</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.readonly</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:-moz-read-only</span> &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-id\">#ccc</span>;</span><br>    &#125;<br><span class=\"css\">    <span class=\"hljs-comment\">/* Supported in Blink/WebKit/Edge without a prefix */</span></span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.readonly</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:read-only</span> &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-id\">#ccc</span>;</span><br>    &#125;<br><span class=\"css\">  <span class=\"hljs-selector-class\">.readonly</span> <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:-moz-read-only</span> &#123; <span class=\"hljs-attribute\">background</span>: lightgray; &#125;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.readonly</span> <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:read-only</span> &#123; <span class=\"hljs-attribute\">background</span>: lightgray; &#125;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.readonly</span> <span class=\"hljs-selector-class\">.div</span><span class=\"hljs-selector-pseudo\">:read-only</span> &#123; <span class=\"hljs-attribute\">background</span>: lightgray; &#125;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"readonly\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"This is a read-only field.\"</span> <span class=\"hljs-attr\">readonly</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>不可以编辑的都可以被选中<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">contenteditable</span>=<span class=\"hljs-string\">\"true\"</span>&gt;</span>可以编辑的p标签就不行<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"div\"</span>&gt;</span>div也一样<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.readonly input:-moz-read-only{background-color:#ccc}.readonly input:read-only{background-color:#ccc}.readonly p:-moz-read-only{background:#d3d3d3}.readonly p:read-only{background:#d3d3d3}.readonly .div:read-only{background:#d3d3d3}</style><div class=\"readonly\"><input type=\"text\" value=\"This is a read-only field.\" readonly><p>不可以编辑的都可以被选中</p><p contenteditable=\"true\">可以编辑的p标签就不行</p><div class=\"div\">div也一样</div></div></div><h3 id=\"read-write\"><a href=\"#read-write\" class=\"headerlink\" title=\":read-write\"></a>:read-write</h3><p>选择可以被用户编辑的元素</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.readwrite</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:read-write</span> &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-id\">#ccc</span>;</span><br>    &#125;<br><span class=\"css\">    <span class=\"hljs-comment\">/* Supported in Blink/WebKit/Edge without a prefix */</span></span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.readwrite</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:read-write</span> &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-id\">#ccc</span>;</span><br>    &#125;<br><span class=\"css\">  <span class=\"hljs-selector-class\">.readwrite</span> <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:read-write</span> &#123; <span class=\"hljs-attribute\">background</span>: lightgray; &#125;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.readwrite</span> <span class=\"hljs-selector-class\">.div</span><span class=\"hljs-selector-pseudo\">:read-write</span> &#123; <span class=\"hljs-attribute\">background</span>: lightgray; &#125;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"readwrite\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"This is a read-only field.\"</span> &gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">contenteditable</span>=<span class=\"hljs-string\">\"true\"</span>&gt;</span>可以编辑的p标签也行<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>不可以编辑的不可以被选中<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.readwrite input:read-write{background-color:#ccc}.readwrite input:read-write{background-color:#ccc}.readwrite p:read-write{background:#d3d3d3}.readwrite .div:read-write{background:#d3d3d3}</style><div class=\"readwrite\"><input type=\"text\" value=\"This is a read-only field.\"><p contenteditable=\"true\">可以编辑的p标签也行</p><p>不可以编辑的不可以被选中</p></div></div><h3 id=\"disabled\"><a href=\"#disabled\" class=\"headerlink\" title=\":disabled\"></a>:disabled</h3><p>选择禁用的元素(表单元素)。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.disabled1</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:disabled</span> &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-id\">#ccc</span>;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">cursor</span><span class=\"hljs-selector-pseudo\">:not-allowed</span>;</span><br>    &#125;<br><span class=\"css\">    <span class=\"hljs-selector-class\">.disabled1</span> <span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-pseudo\">:disabled</span> &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">background-color</span>: <span class=\"hljs-selector-id\">#ccc</span>;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">cursor</span><span class=\"hljs-selector-pseudo\">:not-allowed</span>;</span><br>    &#125;<br>  <br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"disabled1\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"我被禁用了，尴尬\"</span> <span class=\"hljs-attr\">disabled</span> &gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">disabled</span> &gt;</span>禁用的div<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.disabled1 input:disabled{background-color:#ccc;cursor:not-allowed}.disabled1 div:disabled{background-color:#ccc;cursor:not-allowed}\n\n<p></style><br><div class=\"disabled1\"><br><input type=\"text\" value=\"我被禁用了，尴尬\" disabled><br><div disabled>禁用的div</div><br></div><p></p></div><h3 id=\"enabled\"><a href=\"#enabled\" class=\"headerlink\" title=\":enabled\"></a>:enabled</h3><p>表示任何被启用的（enabled）元素。如果一个元素能够被激活（如选择、点击或接受文本输入），或者能够获取焦点，则该元素是启用的。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.enabled</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:enabled</span> &#123;</span><br>      background-color: red;<br>    &#125;<br><span class=\"css\">    <span class=\"hljs-selector-class\">.enabled</span> <span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-pseudo\">:enabled</span> &#123;</span><br>      background-color: red;<br>    &#125;<br>  <br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"enabled\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"我可以输入，尴尬\"</span>  &gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>  &gt;</span>禁用的div<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.enabled input:enabled{background-color:red}.enabled div:enabled{background-color:red}\n\n<p></style><br><div class=\"enabled\"><br><input type=\"text\" value=\"我可以输入，尴尬\"><br><div>禁用的div</div><br></div><p></p></div><h3 id=\"lang\"><a href=\"#lang\" class=\"headerlink\" title=\":lang()\"></a>:lang()</h3><p>基于元素语言来匹配页面元素。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">   <span class=\"hljs-selector-class\">.lang</span> <span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-pseudo\">:lang(en)</span> &gt; <span class=\"hljs-selector-tag\">q</span> &#123; <span class=\"hljs-attribute\">background</span>:red; &#125;</span><br><span class=\"css\">   <span class=\"hljs-selector-class\">.lang</span> <span class=\"hljs-selector-tag\">div</span><span class=\"hljs-selector-pseudo\">:lang(fr)</span> &gt; <span class=\"hljs-selector-tag\">q</span> &#123;<span class=\"hljs-attribute\">background</span>:green;&#125;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"lang\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">q</span>&gt;</span>英语语言<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">q</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"fr\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">q</span>&gt;</span>法语语言<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.lang div:lang(en)>q{background:red}.lang div:lang(fr)>q{background:green}</style><div class=\"lang\"><div lang=\"en\"><q>英语语言</q></div><div lang=\"fr\"><q>法语语言</q></div></div></div><h3 id=\"not\"><a href=\"#not\" class=\"headerlink\" title=\":not()\"></a>:not()</h3><p>用来匹配不符合一组选择器的元素。由于它的作用是防止特定的元素被选中，它也被称为反选伪类（negation pseudo-class）。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">   <span class=\"hljs-selector-class\">.not</span> <span class=\"hljs-selector-class\">.fancy</span> &#123;</span><br>      text-shadow: 2px 2px 3px gold;<br>    &#125;<br><span class=\"css\">    <span class=\"hljs-comment\">/* 类名不是 `.fancy` 的 &lt;p&gt; 元素 */</span></span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.not</span> <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:not(.fancy)</span> &#123;</span><br>      color: green;<br>    &#125;<br><span class=\"css\">    <span class=\"hljs-comment\">/* 非 &lt;p&gt; 元素 */</span> </span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.not</span>  <span class=\"hljs-selector-pseudo\">:not(p)</span> &#123;</span><br>      text-decoration: underline;<br>    &#125;<br><span class=\"xml\">    /* 既不是 <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span> 也不是 <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span> 的元素 */</span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.not</span>  <span class=\"hljs-selector-pseudo\">:not(div)</span><span class=\"hljs-selector-pseudo\">:not(span)</span> &#123;</span><br>      font-weight: bold;<br>    &#125;<br><span class=\"css\">    <span class=\"hljs-comment\">/* 类名不是 `.crazy` 或 `.fancy` 的元素 */</span></span><br><span class=\"css\">    <span class=\"hljs-comment\">/* 注意，此语法尚未获广泛支持。 */</span></span><br><span class=\"css\">    <span class=\"hljs-selector-class\">.not</span>  <span class=\"hljs-selector-pseudo\">:not(.crazy</span>, <span class=\"hljs-selector-class\">.fancy</span>) &#123;</span><br><span class=\"css\">      <span class=\"hljs-selector-tag\">color</span><span class=\"hljs-selector-pseudo\">:red</span>;</span><br>    &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"not\"</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>我是一个段落。<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"fancy\"</span>&gt;</span>我好看极了！<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>我「不是」一个段落。<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.not .fancy{text-shadow:2px 2px 3px gold}.not p:not(.fancy){color:green}.not :not(p){text-decoration:underline}.not :not(div):not(span){font-weight:700}.not :not(.crazy,.fancy){color:red}</style><div class=\"not\"><p>我是一个段落。</p><p class=\"fancy\">我好看极了！</p><div>我「不是」一个段落。</div></div></div><h3 id=\"focus\"><a href=\"#focus\" class=\"headerlink\" title=\":focus\"></a>:focus</h3><p>:focus 表示获得焦点的元素（如表单输入）。当用户点击或触摸元素或通过键盘的 “tab” 键选择它时会被触发。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.focus</span> <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-pseudo\">:focus</span> &#123;</span><br>    background: red;<br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"focus\"</span>&gt;</span><br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> /&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><br>`<br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.focus input:focus{background:red}</style><div class=\"focus\"><input></div></div><h3 id=\"focus-within\"><a href=\"#focus-within\" class=\"headerlink\" title=\":focus-within\"></a>:focus-within</h3><p>表示一个元素获得焦点，或，该元素的后代元素获得焦点。换句话说，元素自身或者它的某个后代匹配 :focus 伪类。（shadow DOM 树中的后代也包括在内）</p><p>子元素获得焦点，父元素改变样式</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.focusWithin</span><span class=\"hljs-selector-pseudo\">:focus-within</span> &#123;</span><br>    background: red;<br>  &#125;<br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"focusWithin\"</span>&gt;</span><br>   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> /&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br>`<br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.focusWithin:focus-within{background:red}</style><div class=\"focusWithin\"><input></div></div><h3 id=\"fullscreen\"><a href=\"#fullscreen\" class=\"headerlink\" title=\":fullscreen\"></a>:fullscreen</h3><p>应用于当前处于全屏显示模式的元素。</p><details><summary>展开查看</summary><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"demo\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"css\">  <span class=\"hljs-selector-class\">.top</span> &#123;</span><br>  margin: 15px;<br>&#125;<br><span class=\"css\"><span class=\"hljs-selector-class\">.main</span> &#123;</span><br>  width: 100%;<br>  display: flex;<br>&#125;<br><span class=\"css\"><span class=\"hljs-selector-class\">.right</span><span class=\"hljs-selector-pseudo\">:fullscreen</span>&#123;</span><br><span class=\"css\">  <span class=\"hljs-selector-tag\">background</span><span class=\"hljs-selector-pseudo\">:green</span>;</span><br>&#125;<br><span class=\"css\"><span class=\"hljs-selector-class\">.right</span> &#123;</span><br>  width: 100%;<br>  height: 300px;<br><span class=\"css\">  <span class=\"hljs-selector-tag\">background</span>: <span class=\"hljs-selector-id\">#dddddd</span>;</span><br>&#125;<br><span class=\"css\"><span class=\"hljs-selector-class\">.right</span><span class=\"hljs-selector-pseudo\">:fullscreen</span> &#123;</span><br>  background: green;<br><span class=\"css\">  <span class=\"hljs-selector-tag\">color</span><span class=\"hljs-selector-pseudo\">:red</span>;</span><br><span class=\"css\">  <span class=\"hljs-selector-tag\">font-size</span><span class=\"hljs-selector-pseudo\">:20px</span>;</span><br>&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"top\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\">\"rightScreen()\"</span>&gt;</span>全屏<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"main\"</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"right\"</span>&gt;</span>内容<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"actionscript\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">fullScreen</span> </span>&#123;</span><br>  /**<br>   * @description: 全屏初始化<br><span class=\"javascript\">   * @param &#123;<span class=\"hljs-built_in\">Function</span>&#125; fn 用户浏览器不支持全屏的回调</span><br>   */<br><span class=\"javascript\">  <span class=\"hljs-keyword\">constructor</span>(fn) &#123;</span><br><span class=\"actionscript\">    <span class=\"hljs-keyword\">this</span>.prefixName = <span class=\"hljs-string\">\"\"</span>; <span class=\"hljs-comment\">// 浏览器前缀</span></span><br><span class=\"actionscript\">    <span class=\"hljs-keyword\">this</span>.isFullscreenData = <span class=\"hljs-literal\">true</span>; <span class=\"hljs-comment\">// 浏览器是否支持全屏</span></span><br><span class=\"actionscript\">    <span class=\"hljs-keyword\">this</span>.isFullscreen(fn);</span><br>  &#125;<br>  /**<br>   * @description: 将传进来的元素全屏<br><span class=\"javascript\">   * @param &#123;<span class=\"hljs-built_in\">String</span>&#125; domName 要全屏的dom名称</span><br>   */<br>  Fullscreen(domName) &#123;<br><span class=\"javascript\">    <span class=\"hljs-keyword\">const</span> element = <span class=\"hljs-built_in\">document</span>.querySelector(domName);</span><br><span class=\"actionscript\">    <span class=\"hljs-keyword\">const</span> methodName =</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">this</span>.prefixName === <span class=\"hljs-string\">\"\"</span></span><br><span class=\"actionscript\">        ? <span class=\"hljs-string\">\"requestFullscreen\"</span></span><br><span class=\"javascript\">        : <span class=\"hljs-string\">`<span class=\"hljs-subst\">$&#123;<span class=\"hljs-keyword\">this</span>.prefixName&#125;</span>RequestFullScreen`</span>;</span><br>    element[methodName]();<br>  &#125;<br><span class=\"actionscript\">  <span class=\"hljs-comment\">// 退出全屏</span></span><br>  exitFullscreen() &#123;<br><span class=\"actionscript\">    <span class=\"hljs-keyword\">const</span> methodName =</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">this</span>.prefixName === <span class=\"hljs-string\">\"\"</span></span><br><span class=\"actionscript\">        ? <span class=\"hljs-string\">\"exitFullscreen\"</span></span><br><span class=\"javascript\">        : <span class=\"hljs-string\">`<span class=\"hljs-subst\">$&#123;<span class=\"hljs-keyword\">this</span>.prefixName&#125;</span>ExitFullscreen`</span>;</span><br><span class=\"javascript\">    <span class=\"hljs-built_in\">document</span>[methodName]();</span><br>  &#125;<br>  /**<br>   * @description: 监听进入/离开全屏<br><span class=\"javascript\">   * @param &#123;<span class=\"hljs-built_in\">Function</span>&#125; enter 进入全屏的回调</span><br><span class=\"javascript\">   *  @param &#123;<span class=\"hljs-built_in\">Function</span>&#125; quit 离开全屏的回调</span><br>   */<br>  screenChange(enter, quit) &#123;<br><span class=\"actionscript\">    <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">this</span>.isFullscreenData) <span class=\"hljs-keyword\">return</span>;</span><br><span class=\"javascript\">    <span class=\"hljs-keyword\">const</span> methodName = <span class=\"hljs-string\">`on<span class=\"hljs-subst\">$&#123;<span class=\"hljs-keyword\">this</span>.prefixName&#125;</span>fullscreenchange`</span>;</span><br><span class=\"javascript\">    <span class=\"hljs-built_in\">document</span>[methodName] = <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.isElementFullScreen()) &#123;</span><br><span class=\"actionscript\">        enter &amp;&amp; enter(e); <span class=\"hljs-comment\">// 进入全屏回调</span></span><br><span class=\"actionscript\">      &#125; <span class=\"hljs-keyword\">else</span> &#123;</span><br><span class=\"actionscript\">        quit &amp;&amp; quit(e); <span class=\"hljs-comment\">// 离开全屏的回调</span></span><br>      &#125;<br>    &#125;;<br>  &#125;<br>  /**<br>   * @description: 浏览器无法进入全屏时触发,可能是技术原因，也可能是用户拒绝：比如全屏请求不是在事件处理函数中调用,会在这里拦截到错误<br><span class=\"javascript\">   * @param &#123;<span class=\"hljs-built_in\">Function</span>&#125; enterErrorFn 回调</span><br>   */<br>  screenError(enterErrorFn) &#123;<br><span class=\"javascript\">    <span class=\"hljs-keyword\">const</span> methodName = <span class=\"hljs-string\">`on<span class=\"hljs-subst\">$&#123;<span class=\"hljs-keyword\">this</span>.prefixName&#125;</span>fullscreenerror`</span>;</span><br><span class=\"javascript\">    <span class=\"hljs-built_in\">document</span>[methodName] = <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;</span><br>      enterErrorFn &amp;&amp; enterErrorFn(e);<br>    &#125;;<br>  &#125;<br>  /**<br>   * @description: 是否支持全屏+判断浏览器前缀<br><span class=\"javascript\">   * @param &#123;<span class=\"hljs-built_in\">Function</span>&#125; fn 不支持全屏的回调函数 这里设了一个默认值</span><br>   */<br>  isFullscreen(fn) &#123;<br><span class=\"javascript\">    <span class=\"hljs-keyword\">let</span> fullscreenEnabled;</span><br><span class=\"actionscript\">    <span class=\"hljs-comment\">// 判断浏览器前缀</span></span><br><span class=\"javascript\">    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">document</span>.fullscreenEnabled) &#123;</span><br><span class=\"javascript\">      fullscreenEnabled = <span class=\"hljs-built_in\">document</span>.fullscreenEnabled;</span><br><span class=\"javascript\">    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">document</span>.webkitFullscreenEnabled) &#123;</span><br><span class=\"javascript\">      fullscreenEnabled = <span class=\"hljs-built_in\">document</span>.webkitFullscreenEnabled;</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">this</span>.prefixName = <span class=\"hljs-string\">\"webkit\"</span>;</span><br><span class=\"javascript\">    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">document</span>.mozFullScreenEnabled) &#123;</span><br><span class=\"javascript\">      fullscreenEnabled = <span class=\"hljs-built_in\">document</span>.mozFullScreenEnabled;</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">this</span>.prefixName = <span class=\"hljs-string\">\"moz\"</span>;</span><br><span class=\"javascript\">    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">document</span>.msFullscreenEnabled) &#123;</span><br><span class=\"javascript\">      fullscreenEnabled = <span class=\"hljs-built_in\">document</span>.msFullscreenEnabled;</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">this</span>.prefixName = <span class=\"hljs-string\">\"ms\"</span>;</span><br>    &#125;<br>    if (!fullscreenEnabled) &#123;<br><span class=\"actionscript\">      <span class=\"hljs-keyword\">this</span>.isFullscreenData = <span class=\"hljs-literal\">false</span>;</span><br><span class=\"actionscript\">      fn &amp;&amp; fn(); <span class=\"hljs-comment\">// 执行不支持全屏的回调</span></span><br>    &#125;<br>  &#125;<br>  /**<br>   * @description: 检测有没有元素处于全屏状态<br><span class=\"actionscript\">   * @<span class=\"hljs-keyword\">return</span> 布尔值</span><br>   */<br>  isElementFullScreen() &#123;<br><span class=\"actionscript\">    <span class=\"hljs-keyword\">const</span> fullscreenElement =</span><br><span class=\"javascript\">      <span class=\"hljs-built_in\">document</span>.fullscreenElement ||</span><br><span class=\"javascript\">      <span class=\"hljs-built_in\">document</span>.msFullscreenElement ||</span><br><span class=\"javascript\">      <span class=\"hljs-built_in\">document</span>.mozFullScreenElement ||</span><br><span class=\"javascript\">      <span class=\"hljs-built_in\">document</span>.webkitFullscreenElement;</span><br><span class=\"actionscript\">    <span class=\"hljs-keyword\">if</span> (fullscreenElement === <span class=\"hljs-literal\">null</span>) &#123;</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>; <span class=\"hljs-comment\">// 当前没有元素在全屏状态</span></span><br><span class=\"actionscript\">    &#125; <span class=\"hljs-keyword\">else</span> &#123;</span><br><span class=\"actionscript\">      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>; <span class=\"hljs-comment\">// 有元素在全屏状态</span></span><br>    &#125;<br>  &#125;<br>&#125;<br><span class=\"javascript\"><span class=\"hljs-keyword\">let</span> full = <span class=\"hljs-keyword\">new</span> fullScreen(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> &#123;</span><br><span class=\"javascript\">  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"不支持\"</span>);</span><br>&#125;);<br><span class=\"javascript\">full.screenError(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;</span><br><span class=\"javascript\">  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"进去全屏失败:\"</span>, e);</span><br>&#125;);<br><span class=\"actionscript\"><span class=\"hljs-comment\">// 全屏请求必须在事件处理函数中调用，否则将会被拒绝。</span></span><br><span class=\"actionscript\"><span class=\"hljs-comment\">// full.Fullscreen(\".left\"); // 触发进去全屏失败回调</span></span><br><span class=\"actionscript\"><span class=\"hljs-keyword\">const</span> obj = &#123;</span><br><span class=\"javascript\">  enter: <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;</span><br><span class=\"actionscript\">    <span class=\"hljs-comment\">// 如果退出全屏 退出的还是全屏状态，将会触发进入全屏的回调，这种情况比较少 注意一下</span></span><br><span class=\"javascript\">    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"进入全屏\"</span>, e);</span><br>  &#125;,<br><span class=\"javascript\">  quit: <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;</span><br><span class=\"javascript\">    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"退出全屏\"</span>, e);</span><br><span class=\"actionscript\">    <span class=\"hljs-comment\">// 通常不会出现嵌套的情况</span></span><br>  &#125;<br>&#125;;<br>full.screenChange(obj.enter, obj.quit);<br><span class=\"actionscript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">leftScreen</span><span class=\"hljs-params\">()</span> </span>&#123;</span><br><span class=\"actionscript\">  full.Fullscreen(<span class=\"hljs-string\">\".left\"</span>);</span><br>&#125;<br><span class=\"actionscript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">rightScreen</span><span class=\"hljs-params\">()</span> </span>&#123;</span><br><span class=\"actionscript\">  full.Fullscreen(<span class=\"hljs-string\">\".right\"</span>);</span><br>&#125;<br><span class=\"actionscript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">redScreen</span><span class=\"hljs-params\">()</span> </span>&#123;</span><br><span class=\"actionscript\">  full.Fullscreen(<span class=\"hljs-string\">\".left-son\"</span>);</span><br>&#125;<br><span class=\"actionscript\"><span class=\"hljs-comment\">// 退出全屏 退出到上次的状态</span></span><br><span class=\"actionscript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">exitScreen</span><span class=\"hljs-params\">()</span> </span>&#123;</span><br>  full.exitFullscreen();<br>&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br></code></pre></td></tr></table></figure></details><div class=\"demo\"><style>.top{margin:15px}.main{width:100%;display:flex}.right:fullscreen{background:green}.right{width:100%;height:300px;background:#ddd}.right:fullscreen{background:green;color:red;font-size:20px}</style><div class=\"top\"><button onclick=\"rightScreen()\">全屏</button></div><div class=\"main\"><div class=\"right\">内容</div></div><script>class fullScreen {\n  /**\n   * @description: 全屏初始化\n   * @param {Function} fn 用户浏览器不支持全屏的回调\n   */\n  constructor(fn) {\n    this.prefixName = \"\"; // 浏览器前缀\n    this.isFullscreenData = true; // 浏览器是否支持全屏\n    this.isFullscreen(fn);\n  }\n  /**\n   * @description: 将传进来的元素全屏\n   * @param {String} domName 要全屏的dom名称\n   */\n  Fullscreen(domName) {\n    const element = document.querySelector(domName);\n    const methodName =\n      this.prefixName === \"\"\n        ? \"requestFullscreen\"\n        : `${this.prefixName}RequestFullScreen`;\n    element[methodName]();\n  }\n  // 退出全屏\n  exitFullscreen() {\n    const methodName =\n      this.prefixName === \"\"\n        ? \"exitFullscreen\"\n        : `${this.prefixName}ExitFullscreen`;\n    document[methodName]();\n  }\n  /**\n   * @description: 监听进入/离开全屏\n   * @param {Function} enter 进入全屏的回调\n   *  @param {Function} quit 离开全屏的回调\n   */\n  screenChange(enter, quit) {\n    if (!this.isFullscreenData) return;\n    const methodName = `on${this.prefixName}fullscreenchange`;\n    document[methodName] = e => {\n      if (this.isElementFullScreen()) {\n        enter && enter(e); // 进入全屏回调\n      } else {\n        quit && quit(e); // 离开全屏的回调\n      }\n    };\n  }\n  /**\n   * @description: 浏览器无法进入全屏时触发,可能是技术原因，也可能是用户拒绝：比如全屏请求不是在事件处理函数中调用,会在这里拦截到错误\n   * @param {Function} enterErrorFn 回调\n   */\n  screenError(enterErrorFn) {\n    const methodName = `on${this.prefixName}fullscreenerror`;\n    document[methodName] = e => {\n      enterErrorFn && enterErrorFn(e);\n    };\n  }\n  /**\n   * @description: 是否支持全屏+判断浏览器前缀\n   * @param {Function} fn 不支持全屏的回调函数 这里设了一个默认值\n   */\n  isFullscreen(fn) {\n    let fullscreenEnabled;\n    // 判断浏览器前缀\n    if (document.fullscreenEnabled) {\n      fullscreenEnabled = document.fullscreenEnabled;\n    } else if (document.webkitFullscreenEnabled) {\n      fullscreenEnabled = document.webkitFullscreenEnabled;\n      this.prefixName = \"webkit\";\n    } else if (document.mozFullScreenEnabled) {\n      fullscreenEnabled = document.mozFullScreenEnabled;\n      this.prefixName = \"moz\";\n    } else if (document.msFullscreenEnabled) {\n      fullscreenEnabled = document.msFullscreenEnabled;\n      this.prefixName = \"ms\";\n    }\n    if (!fullscreenEnabled) {\n      this.isFullscreenData = false;\n      fn && fn(); // 执行不支持全屏的回调\n    }\n  }\n  /**\n   * @description: 检测有没有元素处于全屏状态\n   * @return 布尔值\n   */\n  isElementFullScreen() {\n    const fullscreenElement =\n      document.fullscreenElement ||\n      document.msFullscreenElement ||\n      document.mozFullScreenElement ||\n      document.webkitFullscreenElement;\n    if (fullscreenElement === null) {\n      return false; // 当前没有元素在全屏状态\n    } else {\n      return true; // 有元素在全屏状态\n    }\n  }\n}\nlet full = new fullScreen(() => {\n  console.log(\"不支持\");\n});\nfull.screenError(e => {\n  console.log(\"进去全屏失败:\", e);\n});\n// 全屏请求必须在事件处理函数中调用，否则将会被拒绝。\n// full.Fullscreen(\".left\"); // 触发进去全屏失败回调\nconst obj = {\n  enter: e => {\n    // 如果退出全屏 退出的还是全屏状态，将会触发进入全屏的回调，这种情况比较少 注意一下\n    console.log(\"进入全屏\", e);\n  },\n  quit: e => {\n    console.log(\"退出全屏\", e);\n    // 通常不会出现嵌套的情况\n  }\n};\nfull.screenChange(obj.enter, obj.quit);\nfunction leftScreen() {\n  full.Fullscreen(\".left\");\n}\nfunction rightScreen() {\n  full.Fullscreen(\".right\");\n}\nfunction redScreen() {\n  full.Fullscreen(\".left-son\");\n}\n// 退出全屏 退出到上次的状态\nfunction exitScreen() {\n  full.exitFullscreen();\n}</script></div><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>以上就是本次的全部分享内容，合理的利用伪类可以比较巧妙的实现一些特殊效果。但是部分伪类还是涉及到浏览器的兼容问题，或者还在草案之中，具体的兼容性可以为<a href=\"https://caniuse.com/\" target=\"_blank\" rel=\"noopener\">Can I Use</a>查看</p><!-- rebuild by neat -->"},{"title":"再学一次JS原型","abbrlink":"982386de","date":"2020-08-23T08:09:51.000Z","_content":"## 忘却的知识需要复习\n\n看到这张图的时候感觉很乱，心中已经忘却的原型知识明显招架不住，因此就需要重新整理一下了。\n![](https://cdn.jsdelivr.net/gh/kitety/blog_img/img/20200823161711.png)\n<!-- more -->\n\n## 单例模式\n\n![image-20200823162649747](https://cdn.jsdelivr.net/gh/kitety/blog_img/img/image-20200823162649747.png)\n\n单例模式解决的问题：把描述同一件事物的属性和特征进行归类，存储在同一个内存空间中，因此避免了全局变量之间的冲突、污染。其中person1等就是为内存空间。每一个命名空间都是JS的Object这个内置基类的实例，单独的实例。\n\n### 高级单例模式\n![](https://cdn.jsdelivr.net/gh/kitety/blog_img/img/20200823163442.png)\n\n在给命名空间赋值的时候不是直接返回对象，先执行匿名函数，形成一个私有作用域，不销毁的栈内存。在这个私有作用域中创建堆内存，把堆内存的地址赋值给命名空间。\n\n优点: 可以在命名空间中创建很多的内容，比如变量、函数，哪些需要提供给外面调取使用，我们才返回到最终的对象中，这也是模块化实现的一种思想。\n\n### this作用域\n- 可以根据函数调用前面的对象来判断。例如`a.b()`的话this就指向a，没有的话就指向全局。\n- 在事件中指向触发事件的target\n\n\n","source":"_posts/再学一次JS原型.md","raw":"---\ntitle: 再学一次JS原型\nabbrlink: 982386de\ndate: 2020-08-23 16:09:51\ntags:\n- JS\n---\n## 忘却的知识需要复习\n\n看到这张图的时候感觉很乱，心中已经忘却的原型知识明显招架不住，因此就需要重新整理一下了。\n![](https://cdn.jsdelivr.net/gh/kitety/blog_img/img/20200823161711.png)\n<!-- more -->\n\n## 单例模式\n\n![image-20200823162649747](https://cdn.jsdelivr.net/gh/kitety/blog_img/img/image-20200823162649747.png)\n\n单例模式解决的问题：把描述同一件事物的属性和特征进行归类，存储在同一个内存空间中，因此避免了全局变量之间的冲突、污染。其中person1等就是为内存空间。每一个命名空间都是JS的Object这个内置基类的实例，单独的实例。\n\n### 高级单例模式\n![](https://cdn.jsdelivr.net/gh/kitety/blog_img/img/20200823163442.png)\n\n在给命名空间赋值的时候不是直接返回对象，先执行匿名函数，形成一个私有作用域，不销毁的栈内存。在这个私有作用域中创建堆内存，把堆内存的地址赋值给命名空间。\n\n优点: 可以在命名空间中创建很多的内容，比如变量、函数，哪些需要提供给外面调取使用，我们才返回到最终的对象中，这也是模块化实现的一种思想。\n\n### this作用域\n- 可以根据函数调用前面的对象来判断。例如`a.b()`的话this就指向a，没有的话就指向全局。\n- 在事件中指向触发事件的target\n\n\n","slug":"再学一次JS原型","published":1,"updated":"2020-08-23T08:40:17.086Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cke6udnci0017vwtf29ypbgbv","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"忘却的知识需要复习\"><a href=\"#忘却的知识需要复习\" class=\"headerlink\" title=\"忘却的知识需要复习\"></a>忘却的知识需要复习</h2><p>看到这张图的时候感觉很乱，心中已经忘却的原型知识明显招架不住，因此就需要重新整理一下了。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/20200823161711.png\" alt=\"\"></p><a id=\"more\"></a><h2 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h2><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/image-20200823162649747.png\" alt=\"image-20200823162649747\"></p><p>单例模式解决的问题：把描述同一件事物的属性和特征进行归类，存储在同一个内存空间中，因此避免了全局变量之间的冲突、污染。其中person1等就是为内存空间。每一个命名空间都是JS的Object这个内置基类的实例，单独的实例。</p><h3 id=\"高级单例模式\"><a href=\"#高级单例模式\" class=\"headerlink\" title=\"高级单例模式\"></a>高级单例模式</h3><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/giphy.gif\" data-original=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/20200823163442.png\" alt=\"\"></p><p>在给命名空间赋值的时候不是直接返回对象，先执行匿名函数，形成一个私有作用域，不销毁的栈内存。在这个私有作用域中创建堆内存，把堆内存的地址赋值给命名空间。</p><p>优点: 可以在命名空间中创建很多的内容，比如变量、函数，哪些需要提供给外面调取使用，我们才返回到最终的对象中，这也是模块化实现的一种思想。</p><h3 id=\"this作用域\"><a href=\"#this作用域\" class=\"headerlink\" title=\"this作用域\"></a>this作用域</h3><ul><li>可以根据函数调用前面的对象来判断。例如<code>a.b()</code>的话this就指向a，没有的话就指向全局。</li><li>在事件中指向触发事件的target</li></ul><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Sun Aug 23 2020 16:40:59 GMT+0800 (中国标准时间) --><h2 id=\"忘却的知识需要复习\"><a href=\"#忘却的知识需要复习\" class=\"headerlink\" title=\"忘却的知识需要复习\"></a>忘却的知识需要复习</h2><p>看到这张图的时候感觉很乱，心中已经忘却的原型知识明显招架不住，因此就需要重新整理一下了。<br><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/20200823161711.png\" alt=\"\"></p>","more":"<h2 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h2><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/image-20200823162649747.png\" alt=\"image-20200823162649747\"></p><p>单例模式解决的问题：把描述同一件事物的属性和特征进行归类，存储在同一个内存空间中，因此避免了全局变量之间的冲突、污染。其中person1等就是为内存空间。每一个命名空间都是JS的Object这个内置基类的实例，单独的实例。</p><h3 id=\"高级单例模式\"><a href=\"#高级单例模式\" class=\"headerlink\" title=\"高级单例模式\"></a>高级单例模式</h3><p><img src=\"https://cdn.jsdelivr.net/gh/kitety/blog_img/img/20200823163442.png\" alt=\"\"></p><p>在给命名空间赋值的时候不是直接返回对象，先执行匿名函数，形成一个私有作用域，不销毁的栈内存。在这个私有作用域中创建堆内存，把堆内存的地址赋值给命名空间。</p><p>优点: 可以在命名空间中创建很多的内容，比如变量、函数，哪些需要提供给外面调取使用，我们才返回到最终的对象中，这也是模块化实现的一种思想。</p><h3 id=\"this作用域\"><a href=\"#this作用域\" class=\"headerlink\" title=\"this作用域\"></a>this作用域</h3><ul><li>可以根据函数调用前面的对象来判断。例如<code>a.b()</code>的话this就指向a，没有的话就指向全局。</li><li>在事件中指向触发事件的target</li></ul><!-- rebuild by neat -->"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cke6udnaf0001vwtf6vic8rc9","tag_id":"cke6udnan0004vwtf7axjh1qs","_id":"cke6udnbk000avwtf6mxl4022"},{"post_id":"cke6udnbk000bvwtf9e2d6m97","tag_id":"cke6udnbj0009vwtf6hxmaxyz","_id":"cke6udnbp000evwtf4gjg6iwt"},{"post_id":"cke6udnak0003vwtfa5ula86e","tag_id":"cke6udnbj0009vwtf6hxmaxyz","_id":"cke6udnbq000gvwtf8rzd3cu8"},{"post_id":"cke6udnar0006vwtf911zcwhr","tag_id":"cke6udnbj0009vwtf6hxmaxyz","_id":"cke6udnby000kvwtf67755x03"},{"post_id":"cke6udnbg0007vwtf3jxh69xa","tag_id":"cke6udnbj0009vwtf6hxmaxyz","_id":"cke6udnc3000ovwtf8j0e2b70"},{"post_id":"cke6udnbi0008vwtf6nnn0ti6","tag_id":"cke6udnbj0009vwtf6hxmaxyz","_id":"cke6udnc6000svwtf5p039xae"},{"post_id":"cke6udnbm000cvwtfgkkfb570","tag_id":"cke6udnc4000qvwtfd0vpc7e0","_id":"cke6udnca000wvwtfgfkegg5e"},{"post_id":"cke6udnc9000vvwtfg1wbgpec","tag_id":"cke6udnc8000uvwtf5e8iht9n","_id":"cke6udncd000yvwtfgop0djoq"},{"post_id":"cke6udnbp000fvwtfhxdb66c3","tag_id":"cke6udnc8000uvwtf5e8iht9n","_id":"cke6udnce0011vwtf1enshc0v"},{"post_id":"cke6udncg0013vwtf22pugb6k","tag_id":"cke6udnan0004vwtf7axjh1qs","_id":"cke6udnci0016vwtfeqme12rk"},{"post_id":"cke6udnbq000hvwtf4g2s1ncb","tag_id":"cke6udncd000zvwtf2rdk1za6","_id":"cke6udncn0019vwtf7ixg347s"},{"post_id":"cke6udnbq000hvwtf4g2s1ncb","tag_id":"cke6udnch0014vwtf73p9didi","_id":"cke6udnco001avwtfbpx73lhu"},{"post_id":"cke6udnbw000jvwtf0m0qcuqu","tag_id":"cke6udnc8000uvwtf5e8iht9n","_id":"cke6udncp001cvwtf4qum7yn1"},{"post_id":"cke6udnbz000lvwtfc86n87sj","tag_id":"cke6udnc8000uvwtf5e8iht9n","_id":"cke6udnct001evwtfdo8g0a3g"},{"post_id":"cke6udnc2000nvwtfapc55gxu","tag_id":"cke6udnc8000uvwtf5e8iht9n","_id":"cke6udncw001gvwtfavai5k5v"},{"post_id":"cke6udnc3000pvwtfdj8c7nrj","tag_id":"cke6udnc8000uvwtf5e8iht9n","_id":"cke6udncy001ivwtf2xe26phm"},{"post_id":"cke6udnc5000rvwtf6gl31hmh","tag_id":"cke6udnc8000uvwtf5e8iht9n","_id":"cke6udnd1001kvwtf9x8e4xxu"},{"post_id":"cke6udnca000xvwtfhldj3bk2","tag_id":"cke6udncz001jvwtf4f3p1wdj","_id":"cke6udnd3001mvwtfd5ns5nz5"},{"post_id":"cke6udncd0010vwtfgbw17m5p","tag_id":"cke6udnd2001lvwtf2gt5au8o","_id":"cke6udnd4001ovwtfdkzagi5m"},{"post_id":"cke6udnce0012vwtfhzbng8v3","tag_id":"cke6udnd4001nvwtf1qf54edi","_id":"cke6udnd7001qvwtfd3e6dmnm"},{"post_id":"cke6udnci0015vwtf6v8tf6bl","tag_id":"cke6udnd6001pvwtf6d3udmrt","_id":"cke6udnd8001svwtf4vpr3f6o"},{"post_id":"cke6udnci0017vwtf29ypbgbv","tag_id":"cke6udnd8001rvwtfacbte11u","_id":"cke6udnd9001tvwtfcz0ie503"}],"Tag":[{"name":"心得","_id":"cke6udnan0004vwtf7axjh1qs"},{"name":"Chrome","_id":"cke6udnbj0009vwtf6hxmaxyz"},{"name":"干海子","_id":"cke6udnc4000qvwtfd0vpc7e0"},{"name":"CICD","_id":"cke6udnc8000uvwtf5e8iht9n"},{"name":"翻译","_id":"cke6udncd000zvwtf2rdk1za6"},{"name":"前端","_id":"cke6udnch0014vwtf73p9didi"},{"name":"HTTP","_id":"cke6udncz001jvwtf4f3p1wdj"},{"name":"Mysql","_id":"cke6udnd2001lvwtf2gt5au8o"},{"name":"小诗","_id":"cke6udnd4001nvwtf1qf54edi"},{"name":"CSS","_id":"cke6udnd6001pvwtf6d3udmrt"},{"name":"JS","_id":"cke6udnd8001rvwtfacbte11u"}]}}